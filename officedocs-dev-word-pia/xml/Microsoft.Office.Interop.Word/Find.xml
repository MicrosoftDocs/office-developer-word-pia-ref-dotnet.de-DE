<Type Name="Find" FullName="Microsoft.Office.Interop.Word.Find">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f63dc36acb8e1cf56f86311f5fd23d30d0daa392" />
    <Meta Name="ms.sourcegitcommit" Value="9a6162e1f2c2145e95970c1fdb1ddcac1366d42f" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20669779" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Find" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Find" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.Find" />
  <TypeSignature Language="VB.NET" Value="Public Interface Find" />
  <TypeSignature Language="C++ CLI" Value="public interface class Find" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000209B0-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Kriterien für einen Suchvorgang dar.</summary>
    <remarks>
      <para>Die Eigenschaften und Methoden des <b>Find</b> -Objekts entsprechen den Optionen im Dialogfeld Suchen und ersetzen.</para>
      <para>Verwenden Sie die <b>Find</b> -Eigenschaft, um ein <b>Find</b> -Objekt zurückzugeben.</para>
      <para>Wenn Sie auf das Objekt <b>Suchen</b> aus gelangt sind die <see cref="T:Microsoft.Office.Interop.Word.Selection" /> -Objekts, wenn Text mit den Suchkriterien gefunden wird, wird die Markierung geändert.</para>
      <para>Wenn Sie auf das Objekt <b>Suchen</b> aus gelangt sind die <see cref="T:Microsoft.Office.Interop.Word.Range" /> -Objekts, die Auswahl nicht geändert, wenn Text mit den Suchkriterien gefunden wird, aber das <b>Range</b> -Objekt wird neu definiert.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Application" /> -Objekt, das die Microsoft Word-Anwendung darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllFuzzyOptions">
      <MemberSignature Language="C#" Value="public void ClearAllFuzzyOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearAllFuzzyOptions() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Find.ClearAllFuzzyOptions" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearAllFuzzyOptions ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearAllFuzzyOptions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(33)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deaktiviert alle nicht spezifischen Suchoptionen, die sich auf japanischen Text beziehen.</summary>
        <remarks>
          <para>Diese Methode wird den Wert der folgenden Eigenschaften auf <b>false festgelegt</b>:</para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyAY" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyBV" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyByte" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyCase" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyDash" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyDZ" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyHF" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyHiragana" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyIterationMark" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyKanji" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyKiKu" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyOldKana" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyProlongedSoundMark" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyPunctuation" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzySmallKana" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzySpace" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyTC" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyZJ" />
          </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormatting">
      <MemberSignature Language="C#" Value="public void ClearFormatting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearFormatting() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Find.ClearFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearFormatting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearFormatting();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(31)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt Text- und absatzformatierungen aus einer Auswahl oder die Formatierung in einem Such- oder Ersetzungsvorgang Vorgang angegeben.</summary>
        <remarks>
          <para>Verwenden Sie diese Methode, um sicherzustellen, dass die Formatierung als Kriterien in einer Suche nicht zur Verfügung oder Ersetzungsvorgang, vor dem Ausführen des Vorgangs.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearHitHighlight">
      <MemberSignature Language="C#" Value="public bool ClearHitHighlight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ClearHitHighlight() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Find.ClearHitHighlight" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearHitHighlight () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ClearHitHighlight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(446)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
		Entfernt die Hervorhebung von allem Text, der in einem Suchvorgang vom Typ Treffermarkierung gefunden wurde, und gibt einen Wert vom Typ <b>Boolean</b> zurück, der angibt, ob der Vorgang erfolgreich war.</summary>
        <returns>
          <b>Boolean</b>
        </returns>
        <remarks>
          <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Word.Find.HitHighlight(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> -Methode, um den gefundenen Text hervorzuheben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectHangulEndings">
      <MemberSignature Language="C#" Value="public bool CorrectHangulEndings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CorrectHangulEndings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.CorrectHangulEndings" />
      <MemberSignature Language="VB.NET" Value="Public Property CorrectHangulEndings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CorrectHangulEndings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(61)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob Microsoft Word beim Ersetzen von Text in Hangul automatisch Hangul-Endung korrigiert.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn Microsoft Word beim Ersetzen von Text in Hangul und <b>False</b> Wenn nicht automatisch Hangul-Endung korrigiert.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das angegebene Objekt erstellt wurde.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Wenn das angegebene Objekt in Microsoft Word erstellt wurde, gibt diese Eigenschaft die Hexadezimalzahl 4D535744 zurück, die die Zeichenfolge "MSWD" darstellt. Dieser Wert kann auch durch die <b>WdCreatorCode</b>-Konstante dargestellt werden.</para>
          <para>Die <b>Creator</b> -Eigenschaft wurde in erster Linie auf dem Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Beispielsweise hat Microsoft Word den Erstellercode MSWD. Weitere Informationen zu dieser Eigenschaft finden Sie in der Sprachreferenzhilfe Lieferumfang von Microsoft Office Macintosh Edition.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public bool Execute (ref object FindText, ref object MatchCase, ref object MatchWholeWord, ref object MatchWildcards, ref object MatchSoundsLike, ref object MatchAllWordForms, ref object Forward, ref object Wrap, ref object Format, ref object ReplaceWith, ref object Replace, ref object MatchKashida, ref object MatchDiacritics, ref object MatchAlefHamza, ref object MatchControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Execute([in]object&amp; FindText, [in]object&amp; MatchCase, [in]object&amp; MatchWholeWord, [in]object&amp; MatchWildcards, [in]object&amp; MatchSoundsLike, [in]object&amp; MatchAllWordForms, [in]object&amp; Forward, [in]object&amp; Wrap, [in]object&amp; Format, [in]object&amp; ReplaceWith, [in]object&amp; Replace, [in]object&amp; MatchKashida, [in]object&amp; MatchDiacritics, [in]object&amp; MatchAlefHamza, [in]object&amp; MatchControl) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Find.Execute(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (Optional ByRef FindText As Object, Optional ByRef MatchCase As Object, Optional ByRef MatchWholeWord As Object, Optional ByRef MatchWildcards As Object, Optional ByRef MatchSoundsLike As Object, Optional ByRef MatchAllWordForms As Object, Optional ByRef Forward As Object, Optional ByRef Wrap As Object, Optional ByRef Format As Object, Optional ByRef ReplaceWith As Object, Optional ByRef Replace As Object, Optional ByRef MatchKashida As Object, Optional ByRef MatchDiacritics As Object, Optional ByRef MatchAlefHamza As Object, Optional ByRef MatchControl As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FindText" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchCase" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchWholeWord" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchWildcards" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchSoundsLike" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchAllWordForms" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Forward" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Wrap" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReplaceWith" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Replace" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchKashida" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchDiacritics" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchAlefHamza" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchControl" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FindText">Optionales- <b>Objekt</b>. Der Text, nach dem gesucht werden soll. Verwenden Sie eine leere Zeichenfolge ("") für die Suche nach nur Formatierung. Sie können nach Sonderzeichen suchen, indem Sie entsprechende Zeichencodes angeben. Beispielsweise "^ p" entspricht einer Absatzmarke und "^ t" einem Tabstoppzeichen entspricht.</param>
        <param name="MatchCase">Optionales- <b>Objekt</b>. <b>True,</b> um anzugeben, dass der Suchtext die Groß-/Kleinschreibung beachtet werden soll. Entspricht dem Kontrollkästchen Übereinstimmung Groß-/Kleinschreibung im Dialogfeld Suchen und Ersetzen (Menü Bearbeiten).</param>
        <param name="MatchWholeWord">Optionales- <b>Objekt</b>. <b>True</b> , wenn nur ganze Wörter suchen nicht nach Textelementen in längeren Wörtern. Ganze Wörter nur das Kontrollkästchen suchen im Dialogfeld Suchen und Ersetzen entspricht.</param>
        <param name="MatchWildcards">Optionales- <b>Objekt</b>. <b>True</b> , wenn der Suchtext werden eine spezielle Suchabfrage-Operator. Entspricht das Kontrollkästchen Platzhalter verwenden im Dialogfeld Suchen und ersetzen.</param>
        <param name="MatchSoundsLike">Optionales- <b>Objekt</b>. <b>True</b> , wenn den Suchvorgang, suchen Sie nach Wörtern, ähnlich wie der Suchtext. Entspricht die-Sounds, wie das Kontrollkästchen im Dialogfeld Suchen und ersetzen.</param>
        <param name="MatchAllWordForms">Optionales- <b>Objekt</b>. <b>True</b> , wenn den Suchvorgang alle Formen des Suchtexts zu suchen ("z. B. sitzen" auch "sitzen" und "sat"). Entspricht der Suche alle Kontrollkästchen Wortformen im Dialogfeld Suchen und ersetzen.</param>
        <param name="Forward">Optionales- <b>Objekt</b>. <b>True</b>, um vorwärts zu suchen (zum Dokumentende hin)</param>
        <param name="Wrap">Optionales- <b>Objekt</b>. Steuert, was geschieht, wenn die Suche an einem anderen Punkt als am Anfang des Dokuments beginnt und das Ende des Dokuments erreicht ist (oder umgekehrt, wenn <paramref name="Forward" /> auf <b>False</b>festgelegt ist). Dieses Argument steuert auch, was geschieht, wenn eine Auswahl vorhanden ist oder Bereich und der Suchtext nicht gefunden wird in der Markierung oder des Bereichs. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdFindWrap" /> Konstanten:<b>WdFindAsk</b> nach der Suche in der Markierung oder der Bereich, Microsoft Word wird eine Meldung angezeigt, die Frage an, ob den Rest des Dokuments durchsucht. <b>wdFindContinue</b> Der Suchvorgang wird fortgesetzt, wenn der Anfang oder das Ende des Suchbereichs erreicht wird. <b>wdFindStop</b> Der Suchvorgang wird beendet, wenn der Anfang oder das Ende des Suchbereichs erreicht wird.</param>
        <param name="Format">Optionales- <b>Objekt</b>. <b>True</b> , wenn den Suchvorgang Formatierung zusätzlich oder anstelle der Suchtext zu suchen.</param>
        <param name="ReplaceWith">Optionales- <b>Objekt</b>. Gibt den Ersatztext an. So löschen Sie den angegebenen Text der <paramref name="Find" /> -Argument verwenden Sie eine leere Zeichenfolge (""). Sonderzeichen und erweiterte Suchkriterien nur Sie angeben, wie Sie für die <paramref name="Find" /> Argument. Um ein Graphic-Objekt oder ein anderes nicht-Text-Element als Ersatz anzugeben, das Element in die Zwischenablage zu verschieben, und geben Sie "^ c" für <paramref name="ReplaceWith" />.</param>
        <param name="Replace">Optionales- <b>Objekt</b>. Gibt an, wie viele Ersetzungen vorgenommen werden sollen: eine, alle oder keine. Kann eine <see cref="T:Microsoft.Office.Interop.Word.WdReplace" /> Konstanten:<b>WdReplaceAll </b><b>WdReplaceNone </b><b>wdReplaceNone</b></param>
        <param name="MatchKashida">Optionales- <b>Objekt</b>. <b>True,</b> Wenn Vorgänge match Text mit übereinstimmenden Kashidas in einem Dokument für Arabisch suchen. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <param name="MatchDiacritics">Optionales- <b>Objekt</b>. <b>True,</b> Wenn Vorgänge match Text mit übereinstimmenden diakritischen Zeichen eines Dokuments in rechts-nach-links-Sprache suchen. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <param name="MatchAlefHamza">Optionales- <b>Objekt</b>. <b>True,</b> Wenn Vorgänge match Text mit übereinstimmenden Alef Hamzas in einem Dokument für Arabisch suchen. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <param name="MatchControl">Optionales- <b>Objekt</b>. <b>True,</b> Wenn Vorgänge match Text mit übereinstimmenden bidirektionalen Steuerzeichen eines Dokuments in rechts-nach-links-Sprache suchen. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <summary>Führt den angegebenen Suchvorgang aus.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt <b>True</b> zurück, wenn die Suche erfolgreich ist.</para>
          <para>Wenn <paramref name="MatchWildcards" /> ist <b>True</b>, können Sie angeben, Platzhalterzeichen und andere erweiterte Suchkriterien für die <paramref name="FindText" /> Argument. Beispielsweise "* (anzeigen)" sucht Wörter, endet "-Verknüpfung."</para>
          <para>Zum Suchen nach einem Symbolzeichen, geben Sie einem Caret-Zeichen (^), eine Null (0), und klicken Sie dann Zeichencode des Symbols. Beispielsweise "^ 0151" Geviertstrich (—) entspricht.</para>
          <para>, Sofern nicht anders angegeben, Ersatztext erbt das Format des Texts im Dokument. Angenommen, wenn Sie die Zeichenfolge "Abc" durch "Xyz" ersetzen, Vorkommen von "Abc" fett wurden ersetzt durch die Zeichenfolge "Xyz" fett.</para>
          <para>Auch, wenn <paramref name="MatchCase" /> ist <b>"false"</b>, werden jedes Vorkommen des Suchtexts in Großbuchstaben durch den Ersetzungstext unabhängig von der Groß-/Kleinschreibung des die Suche und den neuen Text in Großbuchstaben ersetzt. Verwenden das vorherige Beispiel, Vorkommen von "ABC" werden ersetzt durch "XYZ".</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute2007">
      <MemberSignature Language="C#" Value="public bool Execute2007 (ref object FindText, ref object MatchCase, ref object MatchWholeWord, ref object MatchWildcards, ref object MatchSoundsLike, ref object MatchAllWordForms, ref object Forward, ref object Wrap, ref object Format, ref object ReplaceWith, ref object Replace, ref object MatchKashida, ref object MatchDiacritics, ref object MatchAlefHamza, ref object MatchControl, ref object MatchPrefix, ref object MatchSuffix, ref object MatchPhrase, ref object IgnoreSpace, ref object IgnorePunct);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Execute2007([in]object&amp; FindText, [in]object&amp; MatchCase, [in]object&amp; MatchWholeWord, [in]object&amp; MatchWildcards, [in]object&amp; MatchSoundsLike, [in]object&amp; MatchAllWordForms, [in]object&amp; Forward, [in]object&amp; Wrap, [in]object&amp; Format, [in]object&amp; ReplaceWith, [in]object&amp; Replace, [in]object&amp; MatchKashida, [in]object&amp; MatchDiacritics, [in]object&amp; MatchAlefHamza, [in]object&amp; MatchControl, [in]object&amp; MatchPrefix, [in]object&amp; MatchSuffix, [in]object&amp; MatchPhrase, [in]object&amp; IgnoreSpace, [in]object&amp; IgnorePunct) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Find.Execute2007(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute2007 (Optional ByRef FindText As Object, Optional ByRef MatchCase As Object, Optional ByRef MatchWholeWord As Object, Optional ByRef MatchWildcards As Object, Optional ByRef MatchSoundsLike As Object, Optional ByRef MatchAllWordForms As Object, Optional ByRef Forward As Object, Optional ByRef Wrap As Object, Optional ByRef Format As Object, Optional ByRef ReplaceWith As Object, Optional ByRef Replace As Object, Optional ByRef MatchKashida As Object, Optional ByRef MatchDiacritics As Object, Optional ByRef MatchAlefHamza As Object, Optional ByRef MatchControl As Object, Optional ByRef MatchPrefix As Object, Optional ByRef MatchSuffix As Object, Optional ByRef MatchPhrase As Object, Optional ByRef IgnoreSpace As Object, Optional ByRef IgnorePunct As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(447)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FindText" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchCase" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchWholeWord" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchWildcards" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchSoundsLike" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchAllWordForms" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Forward" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Wrap" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReplaceWith" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Replace" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchKashida" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchDiacritics" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchAlefHamza" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchControl" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchPrefix" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchSuffix" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchPhrase" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreSpace" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnorePunct" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FindText">Der zu suchende Text. Verwenden Sie eine leere Zeichenfolge (""), wenn Sie nur nach Formatierungen suchen möchten. Sie können nach Sonderzeichen suchen, indem Sie entsprechende Zeichencodes angeben. Beispielsweise entspricht "^p" einer Absatzmarke und "^t" einem Tabstoppzeichen.</param>
        <param name="MatchCase">
          <b>True,</b> um anzugeben, dass der Suchtext die Groß-/Kleinschreibung beachtet werden soll. Entspricht dem Kontrollkästchen Übereinstimmung Groß-/Kleinschreibung im Dialogfeld Suchen und Ersetzen (Menü Bearbeiten).</param>
        <param name="MatchWholeWord">
            Bei <b>True</b> wird angegeben, dass nur nach ganzen Wörtern und nicht nach Textelementen in längeren Wörtern gesucht werden soll. Entspricht dem Kontrollkästchen Nur ganzes Wort suchen im Dialogfeld Suchen und Ersetzen.</param>
        <param name="MatchWildcards">
          <b>True</b>, um mithilfe eines bestimmten Suchoperators nach Text zu suchen. Entspricht dem Kontrollkästchen Platzhalter verwenden im Dialogfeld Suchen und Ersetzen.</param>
        <param name="MatchSoundsLike">
          <b>True</b>, um nach Wörtern zu suchen, die ähnlich lauten wie der Suchtext. Entspricht dem Kontrollkästchen Ähnl. Schreibweise im Dialogfeld Suchen und Ersetzen.</param>
        <param name="MatchAllWordForms">
          <b>True</b>, um alle Formen des Suchtexts zu suchen (so wird z. B. bei "sitzen" auch "sitzend" und "gesessen" gefunden). Entspricht dem Kontrollkästchen Alle Wortformen suchen im Dialogfeld Suchen und Ersetzen.</param>
        <param name="Forward">
          <b>True</b>, um vorwärts zu suchen (zum Dokumentende hin)</param>
        <param name="Wrap">Steuert, was geschieht, wenn die Suche an einem anderen Punkt als am Anfang des Dokuments beginnt und das Ende des Dokuments erreicht ist (oder umgekehrt, wenn <paramref name="Forward" /> auf <b>False</b>festgelegt ist). Dieses Argument steuert auch, was geschieht, wenn eine Auswahl vorhanden ist oder Bereich und der Suchtext wurde nicht gefunden, in der Markierung oder des Bereichs. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdFindWrap" /> Enumerationswerte.</param>
        <param name="Format">
          <b>True</b>, um neben dem Suchtext nach Formatierungen oder nach Formatierungen anstelle des Suchtexts zu suchen.</param>
        <param name="ReplaceWith">Gibt den Ersatztext an. So löschen Sie den angegebenen Text der <paramref name="Find" /> -Argument verwenden Sie eine leere Zeichenfolge (""). Sonderzeichen und erweiterte Suchkriterien nur Sie angeben, wie Sie für die <paramref name="Find" /> Argument. Um ein Graphic-Objekt oder ein anderes Element ohne Text als Ersatz anzugeben, das Element in die Zwischenablage zu verschieben, und geben Sie "^ c" für <paramref name="ReplaceWith" />.</param>
        <param name="Replace">Gibt an, wie viele Ersetzungen vorgenommen werden sollen: eine, alle oder keine. Kann eine <see cref="T:Microsoft.Office.Interop.Word.WdReplace" /> -Enumerationswert ab.</param>
        <param name="MatchKashida">
          <b>True</b>, wenn während eines Suchvorgangs in einem arabischsprachigen Dokument Text mit übereinstimmenden Kashidas beachtet werden soll. Je nach ausgewählter oder installierter Sprachunterstützung, z. B. Deutsch (Standard), ist dieses Argument möglicherweise nicht verfügbar.</param>
        <param name="MatchDiacritics">
          <b>True</b>, wenn während eines Suchvorgangs in einem Dokument mit Schreib-/Leserichtung von rechts nach links Text mit übereinstimmenden diakritischen Zeichen beachtet werden soll. Je nach ausgewählter oder installierter Sprachunterstützung, z. B. Deutsch (Standard), ist dieses Argument möglicherweise nicht verfügbar.</param>
        <param name="MatchAlefHamza">
          <b>True</b>, wenn während eines Suchvorgangs in einem arabischsprachigen Dokument Text mit übereinstimmenden Alef Hamzas beachtet werden soll. Je nach ausgewählter oder installierter Sprachunterstützung, z. B. Deutsch (Standard), ist dieses Argument möglicherweise nicht verfügbar.</param>
        <param name="MatchControl">
          <b>True</b>, wenn während eines Suchvorgangs in einem Dokument in einer Sprache mit Lese-/Schreibrichtung von rechts nach links Text mit übereinstimmenden bidirektionalen Steuerzeichen beachtet werden soll. Je nach ausgewählter oder installierter Sprachunterstützung, z. B. Deutsch (Standard), steht dieses Argument möglicherweise nicht zur Verfügung.</param>
        <param name="MatchPrefix">
            Bei <b>True</b> wird angegeben, dass Wörter abzugleichen sind, die mit der Suchzeichenfolge beginnen. Entspricht dem Kontrollkästchen Präfix beachten im Dialogfeld Suchen und Ersetzen.</param>
        <param name="MatchSuffix">
            Bei <b>True</b> wird angegeben, dass Wörter abzugleichen sind, die mit der Suchzeichenfolge enden. Entspricht dem Kontrollkästchen Suffix beachten im Dialogfeld Suchen und Ersetzen.</param>
        <param name="MatchPhrase">
            Durch <b>True</b> wird angegeben, dass alle Leerraum- und Steuerzeichen zwischen Wörtern ignoriert werden sollen.</param>
        <param name="IgnoreSpace">
          <b>True</b> gibt an, dass alle Leerzeichen zwischen Wörtern ignoriert werden sollen. Entspricht dem Kontrollkästchen Leerzeichen ignorieren im Dialogfeld Suchen und Ersetzen.</param>
        <param name="IgnorePunct">
          <b>True</b> gibt an, dass alle Interpunktionszeichen zwischen Wörtern ignoriert werden sollen. Entspricht dem Kontrollkästchen Interpunktionszeichen ignorieren im Dialogfeld Suchen und Ersetzen.</param>
        <summary>Führt den angegebenen Suchvorgang aus. Gibt <b>True</b> zurück, wenn die Suche erfolgreich ist.</summary>
        <returns>Ein <b>boolescher</b> Wert, der angibt, ob der Suchvorgang erfolgreich war.</returns>
        <remarks>
          <para>Wenn <paramref name="MatchWildcards" /> ist <b>True</b>, können Sie angeben, Platzhalterzeichen und andere erweiterte Suchkriterien für die <paramref name="FindText" /> Argument. Beispielsweise "* (anzeigen)" Wörter, sucht "-Verknüpfung" endet.</para>
          <para>Zum Suchen nach einem Symbolzeichen, geben Sie einem Caret-Zeichen (^), eine Null (0), und klicken Sie dann Zeichencode des Symbols. Beispielsweise "^ 0151" Geviertstrich (—) entspricht.</para>
          <para>, Sofern nicht anders angegeben, Ersatztext erbt das Format des Texts im Dokument. Angenommen, wenn Sie die Zeichenfolge "Abc" durch "Xyz" ersetzen, Vorkommen von "Abc" fett wurden ersetzt durch die Zeichenfolge "Xyz" fett.</para>
          <para>Auch, wenn <paramref name="MatchCase" /> ist <b>"false"</b>, werden jedes Vorkommen des Suchtexts in Großbuchstaben durch den Ersetzungstext, unabhängig von der Groß-/Kleinschreibung des den neuen Text in Großbuchstaben ersetzt. Verwenden das vorherige Beispiel, Vorkommen von "ABC" durch "XYZ" ersetzt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOld">
      <MemberSignature Language="C#" Value="public bool ExecuteOld (ref object FindText, ref object MatchCase, ref object MatchWholeWord, ref object MatchWildcards, ref object MatchSoundsLike, ref object MatchAllWordForms, ref object Forward, ref object Wrap, ref object Format, ref object ReplaceWith, ref object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExecuteOld([in]object&amp; FindText, [in]object&amp; MatchCase, [in]object&amp; MatchWholeWord, [in]object&amp; MatchWildcards, [in]object&amp; MatchSoundsLike, [in]object&amp; MatchAllWordForms, [in]object&amp; Forward, [in]object&amp; Wrap, [in]object&amp; Format, [in]object&amp; ReplaceWith, [in]object&amp; Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Find.ExecuteOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOld (Optional ByRef FindText As Object, Optional ByRef MatchCase As Object, Optional ByRef MatchWholeWord As Object, Optional ByRef MatchWildcards As Object, Optional ByRef MatchSoundsLike As Object, Optional ByRef MatchAllWordForms As Object, Optional ByRef Forward As Object, Optional ByRef Wrap As Object, Optional ByRef Format As Object, Optional ByRef ReplaceWith As Object, Optional ByRef Replace As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FindText" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchCase" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchWholeWord" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchWildcards" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchSoundsLike" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchAllWordForms" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Forward" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Wrap" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReplaceWith" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Replace" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FindText">To be added.</param>
        <param name="MatchCase">To be added.</param>
        <param name="MatchWholeWord">To be added.</param>
        <param name="MatchWildcards">To be added.</param>
        <param name="MatchSoundsLike">To be added.</param>
        <param name="MatchAllWordForms">To be added.</param>
        <param name="Forward">To be added.</param>
        <param name="Wrap">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="ReplaceWith">To be added.</param>
        <param name="Replace">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Font ^ Font { Microsoft::Office::Interop::Word::Font ^ get(); void set(Microsoft::Office::Interop::Word::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder Festlegen einer <see cref="T:Microsoft.Office.Interop.Word.Font" /> -Objekt, das die zeichenformatierung des angegebenen Objekts darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public bool Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Format { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(28)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(28)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ermitteln Sie, ob die Formatierung in der Suchvorgang enthalten ist.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn die Formatierung in den Suchvorgang, und <b>False</b> Wenn nicht enthalten ist. Legen Sie den Eigenschaftswert auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Forward">
      <MemberSignature Language="C#" Value="public bool Forward { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Forward" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Forward" />
      <MemberSignature Language="VB.NET" Value="Public Property Forward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Forward { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob der Suchvorgang vorwärts durch das Dokument durchsucht.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn der Suchvorgang vorwärts durchsucht das Dokument, und <b>False,</b> Wenn das Dokument rückwärts durchsucht. Legen Sie den Eigenschaftswert auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Found">
      <MemberSignature Language="C#" Value="public bool Found { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Found" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Found" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Found As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Found { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob die Suche für das angegebene Objekt eine Übereinstimmung erzeugt hat.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn die Suche eine Übereinstimmung, und <b>False,</b> Wenn nicht erzeugt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Frame">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Frame Frame { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Frame Frame" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Frame" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frame As Frame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Frame ^ Frame { Microsoft::Office::Interop::Word::Frame ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(26)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Frame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Frame" /> -Objekt, das den Formatierung für die angegebene Formatvorlage oder Such- und Ersetzungsvorgang Frame darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HanjaPhoneticHangul">
      <MemberSignature Language="C#" Value="public bool HanjaPhoneticHangul { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HanjaPhoneticHangul" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.HanjaPhoneticHangul" />
      <MemberSignature Language="VB.NET" Value="Public Property HanjaPhoneticHangul As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HanjaPhoneticHangul { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt einen Wert vom Typ <b>Boolean</b> zurück, der angibt, ob in einem Suchvorgang für Koreanisch phonetische Hangul- und Hanja-Zeichen gefunden werden sollen, oder legt diesen Wert fest. Lese-/Schreibzugriff.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Highlight">
      <MemberSignature Language="C#" Value="public int Highlight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Highlight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Highlight" />
      <MemberSignature Language="VB.NET" Value="Public Property Highlight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Highlight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(24)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(24)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob hervorgehobene Formatierung in die Suchkriterien aufgenommen wird.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Der Wert <b>WdUndefined</b> kann verwendet werden, mit der <see cref="T:Microsoft.Office.Interop.Word.Find" /> -Objekts ignoriert wird des Status der hervorgehobenen Formatierung in der Markierung oder den Bereich, der durchsucht wird.</para>
          <para>Gibt diese Eigenschaft <b>True</b> zurück, wenn hervorgehobene Formatierung in die Suchkriterien aufgenommen wird. Können zurückgeben oder auf <b>True</b>, <b>False</b>oder <b>WdUndefined</b>festgelegt sein.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitHighlight">
      <MemberSignature Language="C#" Value="public bool HitHighlight (ref object FindText, ref object HighlightColor, ref object TextColor, ref object MatchCase, ref object MatchWholeWord, ref object MatchPrefix, ref object MatchSuffix, ref object MatchPhrase, ref object MatchWildcards, ref object MatchSoundsLike, ref object MatchAllWordForms, ref object MatchByte, ref object MatchFuzzy, ref object MatchKashida, ref object MatchDiacritics, ref object MatchAlefHamza, ref object MatchControl, ref object IgnoreSpace, ref object IgnorePunct, ref object HanjaPhoneticHangul);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HitHighlight([in]object&amp; FindText, [in]object&amp; HighlightColor, [in]object&amp; TextColor, [in]object&amp; MatchCase, [in]object&amp; MatchWholeWord, [in]object&amp; MatchPrefix, [in]object&amp; MatchSuffix, [in]object&amp; MatchPhrase, [in]object&amp; MatchWildcards, [in]object&amp; MatchSoundsLike, [in]object&amp; MatchAllWordForms, [in]object&amp; MatchByte, [in]object&amp; MatchFuzzy, [in]object&amp; MatchKashida, [in]object&amp; MatchDiacritics, [in]object&amp; MatchAlefHamza, [in]object&amp; MatchControl, [in]object&amp; IgnoreSpace, [in]object&amp; IgnorePunct, [in]object&amp; HanjaPhoneticHangul) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Find.HitHighlight(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitHighlight (ByRef FindText As Object, Optional ByRef HighlightColor As Object, Optional ByRef TextColor As Object, Optional ByRef MatchCase As Object, Optional ByRef MatchWholeWord As Object, Optional ByRef MatchPrefix As Object, Optional ByRef MatchSuffix As Object, Optional ByRef MatchPhrase As Object, Optional ByRef MatchWildcards As Object, Optional ByRef MatchSoundsLike As Object, Optional ByRef MatchAllWordForms As Object, Optional ByRef MatchByte As Object, Optional ByRef MatchFuzzy As Object, Optional ByRef MatchKashida As Object, Optional ByRef MatchDiacritics As Object, Optional ByRef MatchAlefHamza As Object, Optional ByRef MatchControl As Object, Optional ByRef IgnoreSpace As Object, Optional ByRef IgnorePunct As Object, Optional ByRef HanjaPhoneticHangul As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(445)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FindText" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="HighlightColor" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="TextColor" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchCase" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchWholeWord" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchPrefix" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchSuffix" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchPhrase" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchWildcards" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchSoundsLike" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchAllWordForms" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchByte" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchFuzzy" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchKashida" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchDiacritics" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchAlefHamza" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MatchControl" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreSpace" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnorePunct" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="HanjaPhoneticHangul" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FindText">Gibt den zu suchenden Text an. Verwenden Sie eine leere Zeichenfolge (""), wenn Sie nur nach Formatierungen suchen möchten. Sie können nach Sonderzeichen suchen, indem Sie entsprechende Zeichencodes angeben. Beispielsweise entspricht "^p" einer Absatzmarke und "^t" einem Tabstoppzeichen.</param>
        <param name="HighlightColor">Gibt die Hervorhebungsfarbe für den Text. Kann eine beliebige RGB-Farbe oder eines der <see cref="T:Microsoft.Office.Interop.Word.WdColor" /> Enumerationswerte.</param>
        <param name="TextColor">Gibt die Farbe des Texts. Kann eine beliebige RGB-Farbe oder eines der <see cref="T:Microsoft.Office.Interop.Word.WdColor" /> Enumerationswerte.</param>
        <param name="MatchCase">
          <b>True</b> gibt an, dass beim Suchtext die Groß- und Kleinschreibung beachtet werden soll. Entspricht dem Kontrollkästchen Groß-/Kleinschreibung beachten im Dialogfeld Suchen und Ersetzen.</param>
        <param name="MatchWholeWord">
            Bei <b>True</b> wird angegeben, dass nur nach ganzen Wörtern und nicht nach Textelementen in längeren Wörtern gesucht werden soll. Entspricht dem Kontrollkästchen Nur ganzes Wort suchen im Dialogfeld Suchen und Ersetzen.</param>
        <param name="MatchPrefix">
            Bei <b>True</b> wird angegeben, dass Wörter abzugleichen sind, die mit der Suchzeichenfolge beginnen. Entspricht dem Kontrollkästchen Präfix beachten im Dialogfeld Suchen und Ersetzen.</param>
        <param name="MatchSuffix">
            Bei <b>True</b> wird angegeben, dass Wörter abzugleichen sind, die mit der Suchzeichenfolge enden. Entspricht dem Kontrollkästchen Suffix beachten im Dialogfeld Suchen und Ersetzen.</param>
        <param name="MatchPhrase">
            Durch <b>True</b> wird angegeben, dass alle Leerraum- und Steuerzeichen zwischen Wörtern ignoriert werden sollen.</param>
        <param name="MatchWildcards">
          <b>True</b>, um mithilfe eines bestimmten Suchoperators nach Text zu suchen. Entspricht dem Kontrollkästchen Platzhalter verwenden im Dialogfeld Suchen und Ersetzen.</param>
        <param name="MatchSoundsLike">
          <b>True</b>, um nach Wörtern zu suchen, die ähnlich lauten wie der Suchtext. Entspricht dem Kontrollkästchen Ähnl. Schreibweise im Dialogfeld Suchen und Ersetzen.</param>
        <param name="MatchAllWordForms">
          <b>True</b>, um alle Formen des Suchtexts zu suchen (so wird z. B. bei "sitzen" auch "sitzend" und "gesessen" gefunden). Entspricht dem Kontrollkästchen Alle Wortformen suchen im Dialogfeld Suchen und Ersetzen.</param>
        <param name="MatchByte">
          <b>True</b>, um während eines Suchvorgangs zwischen normal breiten und halb breiten Buchstaben und Zeichen zu unterscheiden.</param>
        <param name="MatchFuzzy">
          <b>True</b>, um während eines Suchvorgangs die nicht spezifischen Suchoptionen für japanischen Text zu verwenden. Lese-/Schreibzugriff.</param>
        <param name="MatchKashida">
          <b>True</b>, wenn während eines Suchvorgangs in einem arabischsprachigen Dokument Text mit übereinstimmenden Kashidas beachtet werden soll. Je nach ausgewählter oder installierter Sprachunterstützung, z. B. Deutsch (Standard), ist dieses Argument möglicherweise nicht verfügbar.</param>
        <param name="MatchDiacritics">
          <b>True</b>, wenn während eines Suchvorgangs in einem Dokument mit Schreib-/Leserichtung von rechts nach links Text mit übereinstimmenden diakritischen Zeichen beachtet werden soll. Je nach ausgewählter oder installierter Sprachunterstützung, z. B. Deutsch (Standard), ist dieses Argument möglicherweise nicht verfügbar.</param>
        <param name="MatchAlefHamza">
          <b>True</b>, wenn während eines Suchvorgangs in einem arabischsprachigen Dokument Text mit übereinstimmenden Alef Hamzas beachtet werden soll. Je nach ausgewählter oder installierter Sprachunterstützung, z. B. Deutsch (Standard), ist dieses Argument möglicherweise nicht verfügbar.</param>
        <param name="MatchControl">
          <b>True</b>, wenn während eines Suchvorgangs in einem Dokument in einer Sprache mit Lese-/Schreibrichtung von rechts nach links Text mit übereinstimmenden bidirektionalen Steuerzeichen beachtet werden soll. Je nach ausgewählter oder installierter Sprachunterstützung, z. B. Deutsch (Standard), steht dieses Argument möglicherweise nicht zur Verfügung.</param>
        <param name="IgnoreSpace">
          <b>True</b> gibt an, dass alle Leerzeichen zwischen Wörtern ignoriert werden sollen. Entspricht dem Kontrollkästchen Leerzeichen ignorieren im Dialogfeld Suchen und Ersetzen.</param>
        <param name="IgnorePunct">
          <b>True</b> gibt an, dass alle Interpunktionszeichen zwischen Wörtern ignoriert werden sollen. Entspricht dem Kontrollkästchen Interpunktionszeichen ignorieren im Dialogfeld Suchen und Ersetzen.</param>
        <param name="HanjaPhoneticHangul">
          <b>True</b> gibt an, dass phonetische Hangul- und Hanja-Zeichen ignoriert werden sollen. Steht nur zur Verfügung, wenn Koreanisch unterstützt wird.</param>
        <summary>
		Hebt alle gefundenen Treffer hervor und gibt einen Wert vom Typ <b>Boolean</b> zurück, der angibt, ob Treffer gefunden wurden.</summary>
        <returns>Boolean</returns>
        <remarks>
          <para>Die <b>HitHighlight</b> -Methode gilt in erster Linie Suchen Hervorhebung in Microsoft Office Outlook, wenn Microsoft Office Word als e-Mail-Editor angegeben ist.  Jedoch können Sie diese Methode bei Dokumenten in Word verwenden, wenn Sie den gefundenen Text hervorzuheben möchten.  Verwenden Sie andernfalls die <see cref="M:Microsoft.Office.Interop.Word.Find.Execute(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnorePunct">
      <MemberSignature Language="C#" Value="public bool IgnorePunct { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnorePunct" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.IgnorePunct" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnorePunct As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnorePunct { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt einen Wert vom Typ <b>Boolean</b> zurück, der angibt, ob in einem Suchvorgang die Interpunktion im gefundenen Text ignoriert werden soll, oder legt diesen Wert fest. Lese-/Schreibzugriff.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>
          <para>Diese Eigenschaft entspricht dem Kontrollkästchen ignorieren Zeichensetzung Zeichen im Dialogfeld Suchen und ersetzen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpace">
      <MemberSignature Language="C#" Value="public bool IgnoreSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.IgnoreSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreSpace { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt einen Wert vom Typ <b>Boolean</b> zurück, der angibt, ob in einem Suchvorgang zusätzliche Leerzeichen im gefundenen Text ignoriert werden sollen, oder legt diesen Wert fest. Lese-/Schreibzugriff.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>
          <para>Diese Eigenschaft entspricht das Kontrollkästchen Leerzeichen ignorieren im Dialogfeld Suchen und ersetzen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageID">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.LanguageID" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageID As WdLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdLanguageID LanguageID { Microsoft::Office::Interop::Word::WdLanguageID get(); void set(Microsoft::Office::Interop::Word::WdLanguageID value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder festlegen die Sprache für das angegebene Objekt.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Einige der <b>WdLanguageID</b> -Konstanten haben möglicherweise nicht zur Verfügung, abhängig von der Unterstützung der Sprache (Englisch USA), beispielsweise).</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageIDFarEast">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageIDFarEast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageIDFarEast" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.LanguageIDFarEast" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageIDFarEast As WdLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdLanguageID LanguageIDFarEast { Microsoft::Office::Interop::Word::WdLanguageID get(); void set(Microsoft::Office::Interop::Word::WdLanguageID value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(29)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(29)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(29)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder festlegen eine ostasiatische Sprache für das angegebene Objekt.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Dies ist die empfohlene Option zum Zurückgeben oder Festlegen der Sprache des ostasiatischen Text in einem Dokument in eine ostasiatische Version von Microsoft Word erstellt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageIDOther">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageIDOther { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageIDOther" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.LanguageIDOther" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageIDOther As WdLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdLanguageID LanguageIDOther { Microsoft::Office::Interop::Word::WdLanguageID get(); void set(Microsoft::Office::Interop::Word::WdLanguageID value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(60)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(60)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(60)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder festlegen die Sprache für das angegebene Objekt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchAlefHamza">
      <MemberSignature Language="C#" Value="public bool MatchAlefHamza { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchAlefHamza" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchAlefHamza" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchAlefHamza As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchAlefHamza { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob suchen Vorgänge match Text mit übereinstimmenden Alef Hamzas in einem Dokument für Arabisch.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn Find Vorgänge Text mit übereinstimmenden Alef Hamzas in einem Dokument und <b>False</b> Wenn nicht übereinstimmen. Legen Sie den Eigenschaftswert auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchAllWordForms">
      <MemberSignature Language="C#" Value="public bool MatchAllWordForms { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchAllWordForms" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchAllWordForms" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchAllWordForms As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchAllWordForms { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob alle Formen der den gesuchten Text von der Suchvorgang (z. B., wenn der zu suchende Text ist "sitzen", "sat" und "sitzen" auch gefunden werden) gefunden werden.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn alle Formen der den gesuchten Text durch den Suchvorgang (z. B., wenn der zu suchende Text ist "sitzen", "sat" und "sitzen" auch gefunden werden), und <b>False</b> Wenn nicht gefunden werden. Den Wert der Eigenschaft auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität festgelegt.</para>
          <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Word.Find.Text" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Word.Find" /> Objekt oder die <paramref name="FindText" /> Argument mit der <see cref="M:Microsoft.Office.Interop.Word.Find.Execute(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> -Methode, um den Text in einem Dokument gesucht werden angeben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchByte">
      <MemberSignature Language="C#" Value="public bool MatchByte { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchByte" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchByte" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchByte As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchByte { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(41)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(41)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(41)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob Microsoft Word während eines Suchvorgangs zwischen voller und halber Breite Buchstaben oder Zeichen unterschieden wird.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn Word während eines suchen, und <b>False</b> Wenn nicht zwischen voller und halber Breite Buchstaben oder Zeichen unterschieden wird. Legen Sie den Eigenschaftswert auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCase">
      <MemberSignature Language="C#" Value="public bool MatchCase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchCase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchCase" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchCase { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob der Suchvorgang Groß-/Kleinschreibung beachtet wird.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>true,</b> Wenn der Suchvorgang Groß-/Kleinschreibung beachtet wird, und <b>False</b> Wenn nicht. Der Standardwert ist <b>False</b>. Den Wert der Eigenschaft auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität festgelegt.</para>
          <para>Verwenden Sie die <see cref="P:Microsoft.Office.Interop.Word.Find.Text" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Word.Find" /> -Objekts, oder verwenden Sie die <paramref name="FindText" /> Argument mit der <see cref="M:Microsoft.Office.Interop.Word.Find.Execute(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> -Methode, um den Text in einem Dokument gesucht werden angeben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchControl">
      <MemberSignature Language="C#" Value="public bool MatchControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchControl" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob suchen Vorgänge Text mit übereinstimmenden bidirektionalen Steuerzeichen eines Dokuments in rechts-nach-links-Sprache übereinstimmen.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn Find Vorgänge Text mit übereinstimmenden bidirektionalen Steuerzeichen in einer rechts-nach-links-Sprache-Dokument, und <b>False,</b> Wenn nicht übereinstimmen. Legen Sie den Eigenschaftswert auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchDiacritics">
      <MemberSignature Language="C#" Value="public bool MatchDiacritics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchDiacritics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchDiacritics" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchDiacritics As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchDiacritics { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob suchen Vorgänge Text mit übereinstimmenden diakritischen Zeichen eines Dokuments in rechts-nach-links-Sprache übereinstimmen.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn Vorgänge match Text mit diakritischen Zeichen in einer rechts-nach-links-Sprache-Dokument, und <b>False,</b> Wenn nicht übereinstimmenden suchen. Legen Sie den Eigenschaftswert auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchFuzzy">
      <MemberSignature Language="C#" Value="public bool MatchFuzzy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchFuzzy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchFuzzy" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchFuzzy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchFuzzy { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(40)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(40)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(40)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob Microsoft Word während eines Suchvorgangs die nicht spezifischen Suchoptionen für japanischen Text verwendet.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn Word die nicht spezifischen Suchoptionen für japanischen Text während eines suchen, und <b>False</b> Wenn nicht verwendet. Legen Sie den Eigenschaftswert auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchKashida">
      <MemberSignature Language="C#" Value="public bool MatchKashida { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchKashida" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchKashida" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchKashida As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchKashida { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob suchen Vorgänge match Text mit übereinstimmenden Kashidas in einem Dokument für Arabisch.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn Find Vorgänge Text mit übereinstimmenden Kashidas in einem Dokument und <b>False</b> Wenn nicht übereinstimmen. Legen Sie den Eigenschaftswert auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchPhrase">
      <MemberSignature Language="C#" Value="public bool MatchPhrase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchPhrase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchPhrase" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchPhrase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchPhrase { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Durch <b>True</b> wird angegeben, dass alle Leerraum- und Steuerzeichen zwischen Wörtern ignoriert werden sollen. Lese­/Schreibzugriff.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchPrefix">
      <MemberSignature Language="C#" Value="public bool MatchPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchPrefix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchPrefix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchPrefix { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bei <b>True</b> wird angegeben, dass Wörter abzugleichen sind, die mit der Suchzeichenfolge beginnen. Lese-/Schreibzugriff.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>
          <para>Diese Eigenschaft entspricht dem Kontrollkästchen Präfix beachten im Dialogfeld Suchen und ersetzen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchSoundsLike">
      <MemberSignature Language="C#" Value="public bool MatchSoundsLike { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchSoundsLike" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchSoundsLike" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchSoundsLike As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchSoundsLike { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob Wörter, die den gesuchten Text ähnlich klingen, von der Suchvorgang zurückgegeben werden.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn Wörter, die ähnlichen den gesuchten Text durch den Suchvorgang und <b>False</b> zurückgegeben werden, wenn nicht. Den Wert der Eigenschaft auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität festgelegt.</para>
          <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Word.Find.Text" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Word.Find" /> Objekt oder die <paramref name="FindText" /> Argument mit der <see cref="M:Microsoft.Office.Interop.Word.Find.ExecuteOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> -Methode, um den Text in einem Dokument gesucht werden angeben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchSuffix">
      <MemberSignature Language="C#" Value="public bool MatchSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchSuffix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchSuffix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchSuffix { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bei <b>True</b>wird angegeben, dass Wörter abzugleichen sind, die mit der Suchzeichenfolge enden. Lese-/Schreibzugriff.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>
          <para>Diese Eigenschaft entspricht dem Kontrollkästchen Suffix beachten im Dialogfeld Suchen und ersetzen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchWholeWord">
      <MemberSignature Language="C#" Value="public bool MatchWholeWord { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchWholeWord" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchWholeWord" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchWholeWord As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchWholeWord { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob der Suchvorgang nur ganze Wörter sucht und keinen Text, der Teil eines größeren Worts ist.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn der Suchvorgang nur ganze Wörter sucht und keinen Text, der Teil eines längeren Wörtern und <b>False</b> Wenn nicht ist. Den Wert der Eigenschaft auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität festgelegt.</para>
          <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Word.Find.Text" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Word.Find" /> Objekt oder die <paramref name="FindText" /> Argument mit der <see cref="M:Microsoft.Office.Interop.Word.Find.Execute(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> -Methode, um den Text in einem Dokument gesucht werden angeben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchWildcards">
      <MemberSignature Language="C#" Value="public bool MatchWildcards { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchWildcards" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.MatchWildcards" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchWildcards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchWildcards { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob der zu suchende Text Platzhalter enthält.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn der zu suchende Text Platzhalter und <b>False,</b> Wenn nicht enthält. Den Wert der Eigenschaft auf <b>True</b> oder <b>False</b> , aktivieren oder deaktivieren Sie die Funktionalität festgelegt.</para>
          <para>Entspricht das Kontrollkästchen Platzhalter verwenden im Dialogfeld Suchen und Ersetzen (Menü Bearbeiten).</para>
          <para>Verwenden Sie die <see cref="P:Microsoft.Office.Interop.Word.Find.Text" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Word.Find" /> -Objekts, oder verwenden Sie die <paramref name="FindText" /> Argument mit der <see cref="M:Microsoft.Office.Interop.Word.Find.Execute(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> -Methode, um den Text in einem Dokument gesucht werden angeben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProofing">
      <MemberSignature Language="C#" Value="public int NoProofing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NoProofing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.NoProofing" />
      <MemberSignature Language="VB.NET" Value="Public Property NoProofing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NoProofing { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(34)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(34)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(34)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob Microsoft Word sucht, oder Text, der der Rechtschreib- und grammatikprüfung ignoriert ersetzt.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Gibt <b>True</b> zurück, wenn Word sucht, oder Text, der Rechtschreib- und grammatikprüfung ignoriert, und <b>False</b> Wenn nicht ersetzt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ParagraphFormat ParagraphFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ParagraphFormat ParagraphFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.ParagraphFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ParagraphFormat As ParagraphFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ParagraphFormat ^ ParagraphFormat { Microsoft::Office::Interop::Word::ParagraphFormat ^ get(); void set(Microsoft::Office::Interop::Word::ParagraphFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ParagraphFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder Festlegen einer <see cref="T:Microsoft.Office.Interop.Word.ParagraphFormat" /> -Objekt, das die Absatz Einstellungen für den angegebenen Bereich, Auswahl, Such-oder Ersetzungsvorgang oder Formatvorlage darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein Objekt zurück, das das übergeordnete Objekt des angegebenen Objekts darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replacement">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Replacement Replacement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Replacement Replacement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Replacement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Replacement As Replacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Replacement ^ Replacement { Microsoft::Office::Interop::Word::Replacement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(25)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(25)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Replacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Replacement" /> -Objekt, das die Kriterien für einen Ersetzungsvorgang enthält.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllFuzzyOptions">
      <MemberSignature Language="C#" Value="public void SetAllFuzzyOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAllFuzzyOptions() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Find.SetAllFuzzyOptions" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllFuzzyOptions ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllFuzzyOptions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(32)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktiviert alle nicht spezifischen Suchoptionen, die sich auf japanischen Text beziehen.</summary>
        <remarks>
          <para>Diese Methode wird die folgenden Eigenschaften auf <b>True</b>festgelegt:</para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyAY" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyBV" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyByte" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyCase" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyDash" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyDZ" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyHF" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyHiragana" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyIterationMark" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyKanji" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyKiKu" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyOldKana" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyProlongedSoundMark" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyPunctuation" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzySmallKana" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzySpace" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyTC" />
          </para>
          <para>
            <see cref="P:Microsoft.Office.Interop.Word.Options.MatchFuzzyZJ" />
          </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Style { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt zurück oder legt die Formatvorlage für das angegebene Objekt fest.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Zum Festlegen dieser Eigenschaft entweder den lokalen Namen der Formatvorlage, eine ganze Zahl, eine <see cref="T:Microsoft.Office.Interop.Word.WdBuiltinStyle" /> -Konstante oder ein Objekt, das die Formatvorlage darstellt.</para>
          <para>Nur der Stil des erste Zeichens oder Absatz wird zurückgegeben, wenn Sie die Formatvorlage für einen Bereich zurückgeben, mehr als eine Formatvorlage enthält,.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt zurück oder legt den Text gesucht oder im angegebenen Bereich oder der Markierung ersetzt.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Die <b>Text</b> -Eigenschaft gibt den unformatierten Text der Markierung oder des Bereichs zurück. Wenn Sie diese Eigenschaft festlegen, wird der Text des Bereichs oder der Markierung ersetzt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdFindWrap Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdFindWrap Wrap" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Find.Wrap" />
      <MemberSignature Language="VB.NET" Value="Public Property Wrap As WdFindWrap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdFindWrap Wrap { Microsoft::Office::Interop::Word::WdFindWrap get(); void set(Microsoft::Office::Interop::Word::WdFindWrap value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(27)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(27)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(27)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdFindWrap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt zurück oder legt sie fest, was geschieht, wenn die Suche an einem anderen Punkt als am Anfang des Dokuments beginnt und das Ende des Dokuments erreicht ist (oder umgekehrt, wenn <see cref="P:Microsoft.Office.Interop.Word.Find.Forward" /> auf <b>False</b>festgelegt ist) oder wenn Suchtext nicht in der angegebenen Markierung oder des Bereichs gefunden wird.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <see cref="T:Microsoft.Office.Interop.Word.WdFindWrap" /> kann eine der folgenden Konstanten sein:</para>
          <para>
            <b>WdFindAsk</b> nach der Suche in der Markierung oder der Bereich, Microsoft Word wird eine Meldung angezeigt, die Frage an, ob den Rest des Dokuments durchsucht.</para>
          <para>
            <b>WdFindContinue</b> der Suchvorgang wird fortgesetzt, wenn der Anfang oder das Ende des Suchbereichs erreicht wird.</para>
          <para>
            <b>WdFindStop</b> die Suche wird beendet, wenn der Anfang oder das Ende des Suchbereichs erreicht wird.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>