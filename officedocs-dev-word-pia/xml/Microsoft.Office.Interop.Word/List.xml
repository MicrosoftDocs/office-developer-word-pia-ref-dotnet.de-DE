<Type Name="List" FullName="Microsoft.Office.Interop.Word.List">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c96c6d13d4d1227e433e29ddde4d60eebf7ebe09" />
    <Meta Name="ms.sourcegitcommit" Value="9a6162e1f2c2145e95970c1fdb1ddcac1366d42f" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20670027" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface List" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract List" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.List" />
  <TypeSignature Language="VB.NET" Value="Public Interface List" />
  <TypeSignature Language="C++ CLI" Value="public interface class List" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020992-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine einzelne Listenformat, die an die angegebenen Absätze in einem Dokument angewendet wurde.</summary>
    <remarks>
      <para>Die <see cref="T:Microsoft.Office.Interop.Word.List" /> -Objekt ist ein Mitglied der <see cref="T:Microsoft.Office.Interop.Word.Lists" /> Auflistung.</para>
      <para>Verwenden von <b>Listen</b>(<paramref name="index" />), wobei <paramref name="index" /> die Indexnummer ist, zur Rückgabe eines einzelnen <see cref="T:Microsoft.Office.Interop.Word.List" /> -Objekt.</para>
      <para>, Um alle Absätze zurückzugeben, die listenformatierung, verwenden Sie die <see cref="P:Microsoft.Office.Interop.Word.List.ListParagraphs" /> Eigenschaft. Um die Absätze als Bereich zurückzugeben, verwenden Sie die <see cref="P:Microsoft.Office.Interop.Word.List.Range" /> -Eigenschaft.</para>
      <para>Einer vorhandenen Liste ein anderes Listenformat zuzuweisen, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.List.ApplyListTemplate(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@)" /> -Methode mit der <see cref="T:Microsoft.Office.Interop.Word.List" /> Objekt. Um eine neue Liste zu einem Dokument hinzuzufügen, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.ListFormat.ApplyListTemplate(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@,System.Object@)" /> -Methode mit der <see cref="T:Microsoft.Office.Interop.Word.ListFormat" /> -Objekt für einen angegebenen Bereich.</para>
      <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Word.List.CanContinuePreviousList(Microsoft.Office.Interop.Word.ListTemplate)" /> -Methode, um zu bestimmen, ob Sie fortfahren können die listenformatierung von einer Liste, die zuvor auf das Dokument angewendet wurde.</para>
      <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Word.List.CountNumberedItems(System.Object@,System.Object@)" /> -Methode zum Zurückgeben der Anzahl von Elementen in einer Liste mit Aufzählungszeichen, einschließlich LISTNUM-Felder.</para>
      <para>, Um festzustellen, ob eine Liste mehrere Listenvorlagen enthält, verwenden Sie die <see cref="P:Microsoft.Office.Interop.Word.List.SingleListTemplate" /> -Eigenschaft.</para>
      <para>Können Sie die einzelnen bearbeiten <see cref="T:Microsoft.Office.Interop.Word.List" /> Objekte innerhalb eines Dokuments, aber für eine genauere Steuerung arbeiten Sie mit der <see cref="T:Microsoft.Office.Interop.Word.ListFormat" /> -Objekt.</para>
      <para>Listen mit Bildaufzählungszeichen sind nicht enthalten, der <see cref="T:Microsoft.Office.Interop.Word.Lists" /> Auflistung und kann nicht bearbeitet werden, mit der <see cref="T:Microsoft.Office.Interop.Word.List" /> -Objekt.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Application" /> -Objekt, das die Microsoft Word-Anwendung darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyListTemplate">
      <MemberSignature Language="C#" Value="public void ApplyListTemplate (Microsoft.Office.Interop.Word.ListTemplate ListTemplate, ref object ContinuePreviousList, ref object DefaultListBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyListTemplate([in]class Microsoft.Office.Interop.Word.ListTemplate ListTemplate, [in]object&amp; ContinuePreviousList, [in]object&amp; DefaultListBehavior) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.ApplyListTemplate(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListTemplate" Type="Microsoft.Office.Interop.Word.ListTemplate" />
        <Parameter Name="ContinuePreviousList" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DefaultListBehavior" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ListTemplate">Erforderliche <see cref="T:Microsoft.Office.Interop.Word.ListTemplate" /> Objekt. Die anzuwendende Listenvorlage.</param>
        <param name="ContinuePreviousList">Optionales- <b>Objekt</b>. <b>True</b>, wenn die Nummerierung der vorherigen Liste fortgesetzt werden soll. <b>False</b>, wenn mit einer neuen Liste begonnen werden soll.</param>
        <param name="DefaultListBehavior">Optionales- <b>Objekt</b>. Festlegen eines Werts, das angibt, ob Microsoft Word neue weborientierte Formatierung zur besseren Listenanzeige verwendet. Kann eine der folgenden Konstanten sein: <b>wdWord8ListBehavior</b> (Verwendung mit Microsoft Word 97 kompatible Formatierung) oder <b>wdWord9ListBehavior</b> (Verwendung weborientierte Formatierung). Aus Gründen der Kompatibilität die Standardkonstante <b>wdWord8ListBehavior</b>ist, aber in neue Verfahren, die Sie <b>wdWord9ListBehavior</b> verwenden sollten, um verbesserte weborientierte Formatierung in Bezug auf Einzüge und mit mehreren Ebenen nutzen, sind.</param>
        <summary>Wendet eine Reihe von listenformatierungsmerkmalen an die angegebene Liste.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyListTemplateOld">
      <MemberSignature Language="C#" Value="public void ApplyListTemplateOld (Microsoft.Office.Interop.Word.ListTemplate ListTemplate, ref object ContinuePreviousList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyListTemplateOld([in]class Microsoft.Office.Interop.Word.ListTemplate ListTemplate, [in]object&amp; ContinuePreviousList) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.ApplyListTemplateOld(Microsoft.Office.Interop.Word.ListTemplate,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListTemplate" Type="Microsoft.Office.Interop.Word.ListTemplate" />
        <Parameter Name="ContinuePreviousList" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ListTemplate">To be added.</param>
        <param name="ContinuePreviousList">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyListTemplateWithLevel">
      <MemberSignature Language="C#" Value="public void ApplyListTemplateWithLevel (Microsoft.Office.Interop.Word.ListTemplate ListTemplate, ref object ContinuePreviousList, ref object DefaultListBehavior, ref object ApplyLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyListTemplateWithLevel([in]class Microsoft.Office.Interop.Word.ListTemplate ListTemplate, [in]object&amp; ContinuePreviousList, [in]object&amp; DefaultListBehavior, [in]object&amp; ApplyLevel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.ApplyListTemplateWithLevel(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListTemplate" Type="Microsoft.Office.Interop.Word.ListTemplate" />
        <Parameter Name="ContinuePreviousList" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DefaultListBehavior" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLevel" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ListTemplate">Die anzuwendende Listenvorlage.</param>
        <param name="ContinuePreviousList">
          <b>True</b>, wenn die Nummerierung der vorherigen Liste fortgesetzt werden soll. <b>False</b>, wenn mit einer neuen Liste begonnen werden soll.</param>
        <param name="DefaultListBehavior">Festlegen eines Werts, das angibt, ob Microsoft Word neue weborientierte Formatierung zur besseren Listenanzeige verwendet. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdDefaultListBehavior" /> Werte: <see cref="F:Microsoft.Office.Interop.Word.WdDefaultListBehavior.wdWord8ListBehavior" /> (mit Microsoft Word 97 kompatible Formatierung wird verwendet) oder <see cref="F:Microsoft.Office.Interop.Word.WdDefaultListBehavior.wdWord9ListBehavior" /> (weborientierte Formatierung verwenden). Aus Gründen der Kompatibilität wird die Standardkonstante <see cref="F:Microsoft.Office.Interop.Word.WdDefaultListBehavior.wdWord8ListBehavior" />, aber in neue Verfahren Sie verwenden <see cref="F:Microsoft.Office.Interop.Word.WdDefaultListBehavior.wdWord9ListBehavior" /> verbesserte weborientierte Formatierung mit nutzen Hinsicht Einzüge und mit mehreren Ebenen enthält.</param>
        <param name="ApplyLevel">Die Ebene, auf die die Listenvorlage angewendet wird</param>
        <summary>Wendet eine Reihe von Listenformatierungsmerkmalen an, optional für eine angegebene Ebene.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanContinuePreviousList">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdContinue CanContinuePreviousList (Microsoft.Office.Interop.Word.ListTemplate ListTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Word.WdContinue CanContinuePreviousList([in]class Microsoft.Office.Interop.Word.ListTemplate ListTemplate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.CanContinuePreviousList(Microsoft.Office.Interop.Word.ListTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::WdContinue CanContinuePreviousList(Microsoft::Office::Interop::Word::ListTemplate ^ ListTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdContinue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListTemplate" Type="Microsoft.Office.Interop.Word.ListTemplate" />
      </Parameters>
      <Docs>
        <param name="ListTemplate">Erforderliche <see cref="T:Microsoft.Office.Interop.Word.ListTemplate" /> Objekt. Eine Listenvorlage, die auf vorherige Absätze im Dokument angewendet wurde.</param>
        <summary>Gibt eine <see cref="T:Microsoft.Office.Interop.Word.WdContinue" /> Konstante (<b>WdContinueDisabled</b>, <b>WdResetList</b>oder <b>WdContinueList</b>), der angibt, ob die Formatierung der vorherigen Liste fortgeführt werden kann.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt den Status der Liste fortführen und neu starten, Nummerierung Optionen in die Aufzählungszeichen und Nummerierung im Dialogfeld für das angegebene Listenformat zurück. Um die Einstellungen dieser Optionen ändern, legen Sie die <paramref name="ContinuePreviousList" /> -Argument der der <see cref="M:Microsoft.Office.Interop.Word.List.ApplyListTemplate(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@)" /> Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertNumbersToText">
      <MemberSignature Language="C#" Value="public void ConvertNumbersToText (ref object NumberType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertNumbersToText([in]object&amp; NumberType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.ConvertNumbersToText(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConvertNumbersToText (Optional ByRef NumberType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberType" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NumberType">Optionales- <b>Objekt</b>. Der Typ der zu konvertierenden Zahl. Kann die <see cref="T:Microsoft.Office.Interop.Word.WdNumberType" /> Konstanten.</param>
        <summary>Ändert die Listennummern und LISTNUM-Felder in der angegebenen Liste in Text.</summary>
        <remarks>
          <para>Es gibt zwei Arten von Zahlen: vorgegebene Nummern (<b>WdNumberParagraph</b>), denen Sie Absätzen hinzufügen können, indem Sie im Dialogfeld; Nummerierung und Aufzählungszeichen eine Vorlage auswählen und LISTNUM-Felder (<b>WdNumberListNum</b>), denen Sie mehr als eine Anzahl pro Absatz hinzufügen können.</para>
          <para>
            <b>ConvertNumbersToText</b> -Methode ist nützlich, wenn Sie mit einem Dokument in einer anderen Anwendung arbeiten möchten, und dieser Anwendung nicht, listenformatierung oder LISTNUM-Felder erkennt.</para>
          <para>Listennummern in Text konvertiert wurde, Sie können nicht mehr bearbeitet werden in einer Liste.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountNumberedItems">
      <MemberSignature Language="C#" Value="public int CountNumberedItems (ref object NumberType, ref object Level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CountNumberedItems([in]object&amp; NumberType, [in]object&amp; Level) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.CountNumberedItems(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountNumberedItems (Optional ByRef NumberType As Object, Optional ByRef Level As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Level" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NumberType">Optionales- <b>Objekt</b>. Der Typ der zu zählenden Zahlen. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdNumberType" /> Konstanten: <b>WdNumberParagraph</b>, <b>WdNumberListNum</b>oder <b>WdNumberAllNumbers</b>. Der Standardwert ist <b>WdNumberAllNumbers</b>.</param>
        <param name="Level">Optionales- <b>Objekt</b>. Eine Zahl, die die Nummerierung Ebene entspricht, die Sie zählen möchten. Wenn dieses Argument ausgelassen wird, werden alle Ebenen gezählt.</param>
        <summary>Gibt die Anzahl der aufzählungs-oder Nummerierungszeichen und LISTNUM-Felder in der angegebenen Liste zurück.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Aufzählungspunkte werden gezählt, wenn entweder <b>WdNumberParagraph</b> oder <b>WdNumberAllNumbers</b> (Standard) für angegeben wird <paramref name="NumberType" />.</para>
          <para>Es gibt zwei Arten von Zahlen: voreingestellten Nummern (<b>WdNumberParagraph</b>), mit denen Sie Absätzen hinzufügen können, indem Sie im Dialogfeld; Nummerierung und Aufzählungszeichen eine Vorlage auswählen und LISTNUM-Felder (<b>WdNumberListNum</b>), die Ihnen ermöglichen, mehrere hinzufügen Anzahl pro Absatz.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das angegebene Objekt erstellt wurde.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Wenn das Objekt in Microsoft Word erstellt wurde, gibt diese Eigenschaft die Hexadezimalzahl 4D535744 zurück, die die Zeichenfolge "MSWD" darstellt. Dieser Wert kann auch durch die <b>WdCreatorCode</b>-Konstante dargestellt werden.</para>
          <para>Die <b>Creator</b> -Eigenschaft wurde in erster Linie auf dem Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Beispielsweise hat Microsoft Word den Erstellercode MSWD. Weitere Informationen zu dieser Eigenschaft finden Sie in der Sprachreferenzhilfe Lieferumfang von Microsoft Office Macintosh Edition.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListParagraphs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ListParagraphs ListParagraphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ListParagraphs ListParagraphs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.ListParagraphs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListParagraphs As ListParagraphs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ListParagraphs ^ ListParagraphs { Microsoft::Office::Interop::Word::ListParagraphs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ListParagraphs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.ListParagraphs" /> -Auflistung, die alle nummerierten Absätze in der Liste darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein Objekt zurück, das das übergeordnete Objekt des angegebenen Objekts darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Range { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range Range" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.Range" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Range ^ Range { Microsoft::Office::Interop::Word::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> -Objekt, das den Teil eines Dokuments darstellt, der im angegebenen Objekt enthalten ist.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Informationen darüber, wie einen Bereich aus einem Dokument oder ein Formbereich aus einer Auflistung von Formen finden Sie unter der <see cref="M:Microsoft.Office.Interop.Word._Document.Range(System.Object@,System.Object@)" /> Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveNumbers">
      <MemberSignature Language="C#" Value="public void RemoveNumbers (ref object NumberType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNumbers([in]object&amp; NumberType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.RemoveNumbers(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveNumbers (Optional ByRef NumberType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberType" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NumberType">Optionale <see cref="T:Microsoft.Office.Interop.Word.WdNumberType" />. Der zu entfernende Zahlentyp.</param>
        <summary>Entfernt Zahlen oder Aufzählungszeichen aus der angegebenen Liste.</summary>
        <remarks>
          <para>Wenn diese Methode angewendet wird, um ein <see cref="T:Microsoft.Office.Interop.Word.List" /> -Objekts, Zahlen nur von Absätzen in der angegebenen Liste übersprungen überlappende Zahlen aus anderen Listen entfernt. Wenn diese Methode, um angewendet wird die <see cref="T:Microsoft.Office.Interop.Word.ListFormat" /> -Objekts für einen Bereich von Text, Zahlen aus allen Listen im Bereich werden entfernt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleListTemplate">
      <MemberSignature Language="C#" Value="public bool SingleListTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SingleListTemplate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.SingleListTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SingleListTemplate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SingleListTemplate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True,</b> Wenn das Objekt für die gesamte Liste dieselbe Listenvorlage verwendet wird.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleName">
      <MemberSignature Language="C#" Value="public string StyleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StyleName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.StyleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StyleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StyleName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Namen der Formatvorlage auf der angegebenen AutoText-Eintrag angewendet.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>