<Type Name="List" FullName="Microsoft.Office.Interop.Word.List">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6082fc6429315024310244ff429fb70e8f66a012" /><Meta Name="ms.sourcegitcommit" Value="655244c9d9a99d41d118f4fa57b5d74d46c410d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/03/2020" /><Meta Name="ms.locfileid" Value="43924403" /></Metadata><TypeSignature Language="C#" Value="public interface List" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract List" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.List" />
  <TypeSignature Language="VB.NET" Value="Public Interface List" />
  <TypeSignature Language="C++ CLI" Value="public interface class List" />
  <TypeSignature Language="F#" Value="type List = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020992-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein einzelnes Listenformat dar, das angegebenen Absätzen in einem Dokument zugewiesen wurde.</summary>
    <remarks><para>Das- <see cref="T:Microsoft.Office.Interop.Word.List" /> Objekt ist ein Element der <see cref="T:Microsoft.Office.Interop.Word.Lists" /> Auflistung.</para>
      <para>Verwenden Sie <b>Listen</b>( <paramref name="index" /> ), wobei <paramref name="index" /> es sich um die Indexnummer handelt, um ein einzelnes Objekt zurückzugeben <see cref="T:Microsoft.Office.Interop.Word.List" /> .</para>
      <para>Wenn Sie alle Absätze mit Listenformatierung zurückgeben möchten, verwenden Sie die <see cref="P:Microsoft.Office.Interop.Word.List.ListParagraphs" /> -Eigenschaft. Um Sie als Bereich zurückzugeben, verwenden Sie die <see cref="P:Microsoft.Office.Interop.Word.List.Range" /> -Eigenschaft.</para>
      <para>Wenn Sie ein anderes Listenformat auf eine vorhandene Liste anwenden möchten, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.List.ApplyListTemplate(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@)" /> -Methode mit dem- <see cref="T:Microsoft.Office.Interop.Word.List" /> Objekt. Wenn Sie einem Dokument eine neue Liste hinzufügen möchten, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.ListFormat.ApplyListTemplate(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@,System.Object@)" /> -Methode mit dem- <see cref="T:Microsoft.Office.Interop.Word.ListFormat" /> Objekt für einen angegebenen Bereich.</para>
      <para>Verwenden <see cref="M:Microsoft.Office.Interop.Word.List.CanContinuePreviousList(Microsoft.Office.Interop.Word.ListTemplate)" /> Sie die-Methode, um zu bestimmen, ob Sie die Listenformatierung aus einer Liste fortsetzen können, die zuvor auf das Dokument angewendet wurde.</para>
      <para>Verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.List.CountNumberedItems(System.Object@,System.Object@)" /> -Methode, um die Anzahl der Elemente in einer nummerierten oder Aufzählungsliste zurückzugeben, einschließlich LISTNUM Felder.</para>
      <para>Um zu bestimmen, ob eine Liste mehr als eine Listenvorlage enthält, verwenden Sie die <see cref="P:Microsoft.Office.Interop.Word.List.SingleListTemplate" /> -Eigenschaft.</para>
      <para>Sie können die einzelnen <see cref="T:Microsoft.Office.Interop.Word.List" /> Objekte innerhalb eines Dokuments bearbeiten, aber um eine präzisere Kontrolle zu erhalten, sollten Sie mit dem <see cref="T:Microsoft.Office.Interop.Word.ListFormat" /> Objekt arbeiten.</para>
      <para>Listen mit Bild Aufzählungen sind nicht in der <see cref="T:Microsoft.Office.Interop.Word.Lists" /> Auflistung enthalten und können nicht mit dem Objekt bearbeitet werden <see cref="T:Microsoft.Office.Interop.Word.List" /> .</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : Microsoft.Office.Interop.Word.Application" Usage="Microsoft.Office.Interop.Word.List.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Application" /> Objekt zurück, das die Microsoft Word Anwendung darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyListTemplate">
      <MemberSignature Language="C#" Value="public void ApplyListTemplate (Microsoft.Office.Interop.Word.ListTemplate ListTemplate, ref object ContinuePreviousList, ref object DefaultListBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyListTemplate([in]class Microsoft.Office.Interop.Word.ListTemplate ListTemplate, [in]object&amp; ContinuePreviousList, [in]object&amp; DefaultListBehavior) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.ApplyListTemplate(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyListTemplate (ListTemplate As ListTemplate, Optional ByRef ContinuePreviousList As Object, Optional ByRef DefaultListBehavior As Object)" />
      <MemberSignature Language="F#" Value="abstract member ApplyListTemplate : Microsoft.Office.Interop.Word.ListTemplate * obj * obj -&gt; unit" Usage="list.ApplyListTemplate (ListTemplate, ContinuePreviousList, DefaultListBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListTemplate" Type="Microsoft.Office.Interop.Word.ListTemplate" />
        <Parameter Name="ContinuePreviousList" Type="System.Object" RefType="ref" />
        <Parameter Name="DefaultListBehavior" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ListTemplate">Erforderliches <see cref="T:Microsoft.Office.Interop.Word.ListTemplate" /> Objekt. Die anzuwendende Listenvorlage.</param>
        <param name="ContinuePreviousList">Optionales <b>Objekt</b>. <b>True</b>, wenn die Nummerierung der vorherigen Liste fortgesetzt werden soll. <b>False</b>, wenn mit einer neuen Liste begonnen werden soll.</param>
        <param name="DefaultListBehavior">Optionales <b>Objekt</b>. Legt einen Wert fest, der angibt, ob Microsoft Word für eine bessere Listenanzeige die neue weborientierte Formatierung verwendet. Kann eine der folgenden Konstanten sein: <b>wdWord8ListBehavior</b> (verwenden Sie die Formatierung, die mit Microsoft Word 97) oder <b>wdWord9ListBehavior</b> kompatibel ist (verwenden Sie die weborientierte Formatierung). Aus Kompatibilitätsgründen ist die Standardkonstante <b>wdWord8ListBehavior</b>, in neuen Prozeduren sollten Sie jedoch <b>wdWord9ListBehavior</b> verwenden, um die verbesserte weborientierte Formatierung in Bezug auf einrückungs-und Multilevel-Listen zu nutzen.</param>
        <summary>Wendet eine Reihe von Merkmalen der Listenformatierung auf die angegebene Liste an.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyListTemplateOld">
      <MemberSignature Language="C#" Value="public void ApplyListTemplateOld (Microsoft.Office.Interop.Word.ListTemplate ListTemplate, ref object ContinuePreviousList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyListTemplateOld([in]class Microsoft.Office.Interop.Word.ListTemplate ListTemplate, [in]object&amp; ContinuePreviousList) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.ApplyListTemplateOld(Microsoft.Office.Interop.Word.ListTemplate,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyListTemplateOld (ListTemplate As ListTemplate, Optional ByRef ContinuePreviousList As Object)" />
      <MemberSignature Language="F#" Value="abstract member ApplyListTemplateOld : Microsoft.Office.Interop.Word.ListTemplate * obj -&gt; unit" Usage="list.ApplyListTemplateOld (ListTemplate, ContinuePreviousList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListTemplate" Type="Microsoft.Office.Interop.Word.ListTemplate" />
        <Parameter Name="ContinuePreviousList" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ListTemplate">To be added.</param>
        <param name="ContinuePreviousList">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyListTemplateWithLevel">
      <MemberSignature Language="C#" Value="public void ApplyListTemplateWithLevel (Microsoft.Office.Interop.Word.ListTemplate ListTemplate, ref object ContinuePreviousList, ref object DefaultListBehavior, ref object ApplyLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyListTemplateWithLevel([in]class Microsoft.Office.Interop.Word.ListTemplate ListTemplate, [in]object&amp; ContinuePreviousList, [in]object&amp; DefaultListBehavior, [in]object&amp; ApplyLevel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.ApplyListTemplateWithLevel(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyListTemplateWithLevel (ListTemplate As ListTemplate, Optional ByRef ContinuePreviousList As Object, Optional ByRef DefaultListBehavior As Object, Optional ByRef ApplyLevel As Object)" />
      <MemberSignature Language="F#" Value="abstract member ApplyListTemplateWithLevel : Microsoft.Office.Interop.Word.ListTemplate * obj * obj * obj -&gt; unit" Usage="list.ApplyListTemplateWithLevel (ListTemplate, ContinuePreviousList, DefaultListBehavior, ApplyLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListTemplate" Type="Microsoft.Office.Interop.Word.ListTemplate" />
        <Parameter Name="ContinuePreviousList" Type="System.Object" RefType="ref" />
        <Parameter Name="DefaultListBehavior" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyLevel" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ListTemplate">Die anzuwendende Listenvorlage.</param>
        <param name="ContinuePreviousList"><b>True</b>, wenn die Nummerierung der vorherigen Liste fortgesetzt werden soll. <b>False</b>, wenn mit einer neuen Liste begonnen werden soll.</param>
        <param name="DefaultListBehavior">Legt einen Wert fest, der angibt, ob Microsoft Word für eine bessere Listenanzeige die neue weborientierte Formatierung verwendet. Dabei kann es sich um einen der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdDefaultListBehavior" /> Werte handeln: <see cref="F:Microsoft.Office.Interop.Word.WdDefaultListBehavior.wdWord8ListBehavior" /> (verwenden Sie die mit Microsoft Word 97 kompatible Formatierung) oder <see cref="F:Microsoft.Office.Interop.Word.WdDefaultListBehavior.wdWord9ListBehavior" /> (verwenden Sie die weborientierte Formatierung). Aus Kompatibilitätsgründen ist die Standardkonstante <see cref="F:Microsoft.Office.Interop.Word.WdDefaultListBehavior.wdWord8ListBehavior" /> , aber in neuen Prozeduren sollten Sie die <see cref="F:Microsoft.Office.Interop.Word.WdDefaultListBehavior.wdWord9ListBehavior" /> Vorteile einer verbesserten weborientierten Formatierung in Bezug auf Einrückung und Multilevel-Listen nutzen.</param>
        <param name="ApplyLevel">Die Ebene, auf die die Listenvorlage angewendet wird</param>
        <summary>Wendet eine Reihe von Listenformatierungsmerkmalen an, optional für eine angegebene Ebene.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanContinuePreviousList">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdContinue CanContinuePreviousList (Microsoft.Office.Interop.Word.ListTemplate ListTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Word.WdContinue CanContinuePreviousList([in]class Microsoft.Office.Interop.Word.ListTemplate ListTemplate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.CanContinuePreviousList(Microsoft.Office.Interop.Word.ListTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanContinuePreviousList (ListTemplate As ListTemplate) As WdContinue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::WdContinue CanContinuePreviousList(Microsoft::Office::Interop::Word::ListTemplate ^ ListTemplate);" />
      <MemberSignature Language="F#" Value="abstract member CanContinuePreviousList : Microsoft.Office.Interop.Word.ListTemplate -&gt; Microsoft.Office.Interop.Word.WdContinue" Usage="list.CanContinuePreviousList ListTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdContinue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListTemplate" Type="Microsoft.Office.Interop.Word.ListTemplate" />
      </Parameters>
      <Docs>
        <param name="ListTemplate">Erforderliches <see cref="T:Microsoft.Office.Interop.Word.ListTemplate" /> Objekt. Eine Listenvorlage, die auf vorherige Absätze im Dokument angewendet wurde.</param>
        <summary>Gibt eine <see cref="T:Microsoft.Office.Interop.Word.WdContinue" /> Konstante (<b>wdContinueDisabled</b>, <b>wdResetList</b>oder <b>wdContinueList</b>) zurück, die angibt, ob die Formatierung der vorherigen Liste fortgesetzt werden kann.</summary>
        <returns>To be added.</returns>
        <remarks><para>Diese Methode gibt den Status der Optionen Liste fortführen und Neu nummerieren im Dialogfeld Nummerierung und Aufzählungszeichen für das angegebene Listenformat zurück. Um die Einstellungen dieser Optionen zu ändern, legen Sie das <paramref name="ContinuePreviousList" /> Argument der <see cref="M:Microsoft.Office.Interop.Word.List.ApplyListTemplate(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@)" /> Methode fest.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertNumbersToText">
      <MemberSignature Language="C#" Value="public void ConvertNumbersToText (ref object NumberType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertNumbersToText([in]object&amp; NumberType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.ConvertNumbersToText(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConvertNumbersToText (Optional ByRef NumberType As Object)" />
      <MemberSignature Language="F#" Value="abstract member ConvertNumbersToText : obj -&gt; unit" Usage="list.ConvertNumbersToText NumberType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberType" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NumberType">Optionales <b>Objekt</b>. Der Typ der zu konvertierenden Zahl. Kann eine der Konstanten sein <see cref="T:Microsoft.Office.Interop.Word.WdNumberType" /> .</param>
        <summary>Ändert die Listennummern und LISTNUM-Felder in der angegebenen Liste in Text.</summary>
        <remarks><para>Es gibt zwei Arten von Zahlen: vordefinierte Nummern (<b>wdNumberParagraph</b>), die Sie zu Absätzen hinzufügen können, indem Sie eine Vorlage im Dialogfeld Nummerierung und Aufzählungszeichen auswählen. und LISTNUM-Felder (<b>wdNumberListNum</b>), mit denen Sie mehr als eine Zahl pro Absatz hinzufügen können.</para>
          <para>Die <b>ConvertNumbersToText</b> -Methode ist hilfreich, wenn Sie mit einem Dokument in einer anderen Anwendung arbeiten möchten und diese Anwendung keine Listenformatierungen oder LISTNUM-Felder erkennt.</para>
          <para>Nachdem Sie Listennummern in Text konvertiert haben, können Sie Sie nicht mehr in einer Liste bearbeiten.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountNumberedItems">
      <MemberSignature Language="C#" Value="public int CountNumberedItems (ref object NumberType, ref object Level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CountNumberedItems([in]object&amp; NumberType, [in]object&amp; Level) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.CountNumberedItems(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountNumberedItems (Optional ByRef NumberType As Object, Optional ByRef Level As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CountNumberedItems : obj * obj -&gt; int" Usage="list.CountNumberedItems (NumberType, Level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberType" Type="System.Object" RefType="ref" />
        <Parameter Name="Level" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NumberType">Optionales <b>Objekt</b>. Der Typ der zu zählenden Nummern. Kann eine der folgenden Konstanten sein <see cref="T:Microsoft.Office.Interop.Word.WdNumberType" /> : <b>wdNumberParagraph</b>, <b>wdNumberListNum</b>oder <b>wdNumberAllNumbers</b>. Der Standardwert ist <b>wdNumberAllNumbers</b>.</param>
        <param name="Level">Optionales <b>Objekt</b>. Eine Zahl, die der zu zählenden Nummerierungsebene entspricht. Wenn dieses Argument ausgelassen wird, werden alle Ebenen gezählt.</param>
        <summary>Gibt die Anzahl der Aufzählungs-oder nummerierten Elemente und LISTNUM-Felder in der angegebenen Liste zurück.</summary>
        <returns>To be added.</returns>
        <remarks><para>Aufzählungselemente werden gezählt, wenn entweder <b>wdNumberParagraph</b> oder <b>wdNumberAllNumbers</b> (der Standardwert) für angegeben ist <paramref name="NumberType" /> .</para>
          <para>Es gibt zwei Arten von Zahlen: vordefinierte Nummern (<b>wdNumberParagraph</b>), die Sie zu Absätzen hinzufügen können, indem Sie eine Vorlage im Dialogfeld Nummerierung und Aufzählungszeichen auswählen. und LISTNUM-Felder (<b>wdNumberListNum</b>), mit denen Sie mehr als eine Zahl pro Absatz hinzufügen können.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Interop.Word.List.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das angegebene Objekt erstellt wurde.</summary>
        <value>To be added.</value>
        <remarks><para>Wenn das Objekt in Microsoft Word erstellt wurde, gibt diese Eigenschaft die hexadezimale Zahl 4D535744 zurück, die die Zeichenfolge "MSWD" darstellt. Der Wert kann auch durch die <b>wdCreatorCode</b>-Konstante dargestellt werden.</para>
          <para>Die <b>Creator</b> -Eigenschaft wurde in erster Linie auf dem Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Beispielsweise hat Microsoft Word den Erstellercode MSWD. Weitere Informationen zu dieser Eigenschaft finden Sie in der Sprachreferenzhilfe von Microsoft Office Macintosh Edition enthalten.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListParagraphs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ListParagraphs ListParagraphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ListParagraphs ListParagraphs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.ListParagraphs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListParagraphs As ListParagraphs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ListParagraphs ^ ListParagraphs { Microsoft::Office::Interop::Word::ListParagraphs ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ListParagraphs : Microsoft.Office.Interop.Word.ListParagraphs" Usage="Microsoft.Office.Interop.Word.List.ListParagraphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ListParagraphs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <see cref="T:Microsoft.Office.Interop.Word.ListParagraphs" /> Auflistung zurück, die alle nummerierten Absätze in der Liste darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.Word.List.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein Objekt zurück, das das übergeordnete Objekt des angegebenen Objekts darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Range { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range Range" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.Range" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Range ^ Range { Microsoft::Office::Interop::Word::Range ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Range : Microsoft.Office.Interop.Word.Range" Usage="Microsoft.Office.Interop.Word.List.Range" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt zurück, das den Teil eines Dokuments darstellt, der im angegebenen Objekt enthalten ist.</summary>
        <value>To be added.</value>
        <remarks><para>Informationen zum Zurückgeben eines Bereichs aus einem Dokument oder Zurückgeben eines Formbereichs aus einer Auflistung von Formen finden Sie unter der <see cref="M:Microsoft.Office.Interop.Word._Document.Range(System.Object@,System.Object@)" /> -Methode.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveNumbers">
      <MemberSignature Language="C#" Value="public void RemoveNumbers (ref object NumberType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNumbers([in]object&amp; NumberType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.List.RemoveNumbers(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveNumbers (Optional ByRef NumberType As Object)" />
      <MemberSignature Language="F#" Value="abstract member RemoveNumbers : obj -&gt; unit" Usage="list.RemoveNumbers NumberType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberType" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NumberType">Optional <see cref="T:Microsoft.Office.Interop.Word.WdNumberType" /> . Der zu entfernende Zahlentyp.</param>
        <summary>Entfernt Zahlen oder Aufzählungszeichen aus der angegebenen Liste.</summary>
        <remarks><para>Wenn diese Methode auf ein Objekt angewendet wird <see cref="T:Microsoft.Office.Interop.Word.List" /> , werden nur Zahlen aus Absätzen in der angegebenen Liste entfernt, wobei alle Interleaved-Nummern aus anderen Listen übersprungen werden. Wenn diese Methode auf das <see cref="T:Microsoft.Office.Interop.Word.ListFormat" /> Objekt für einen Textbereich angewendet wird, werden alle Zahlen aus allen Listen im Bereich entfernt.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleListTemplate">
      <MemberSignature Language="C#" Value="public bool SingleListTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SingleListTemplate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.SingleListTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SingleListTemplate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SingleListTemplate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SingleListTemplate : bool" Usage="Microsoft.Office.Interop.Word.List.SingleListTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b> , wenn das gesamte Listenobjekt dieselbe Listenvorlage verwendet.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleName">
      <MemberSignature Language="C#" Value="public string StyleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StyleName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.List.StyleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StyleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StyleName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StyleName : string" Usage="Microsoft.Office.Interop.Word.List.StyleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Namen der Formatvorlage zurück, die dem angegebenen AutoText-Eintrag zugewiesen wurde.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
