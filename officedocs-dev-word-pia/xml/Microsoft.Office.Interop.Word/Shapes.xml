<Type Name="Shapes" FullName="Microsoft.Office.Interop.Word.Shapes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e31082ca8ce0c996cdaaa98405514b0b72c43eb4" /><Meta Name="ms.sourcegitcommit" Value="655244c9d9a99d41d118f4fa57b5d74d46c410d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/03/2020" /><Meta Name="ms.locfileid" Value="43924522" /></Metadata><TypeSignature Language="C#" Value="public interface Shapes : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Shapes implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.Shapes" />
  <TypeSignature Language="VB.NET" Value="Public Interface Shapes&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Shapes : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Shapes = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002099F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Eine Auflistung von <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekten, die alle Formen in einem Dokument oder alle Formen in allen Kopf-und Fußzeilen in einem Dokument darstellen.</summary>
    <remarks><para>Jedes <b>Shape</b> -Objekt stellt ein Objekt in der Zeichnungsebene, wie beispielsweise eine AutoForm, Freihandform, OLE-Objekt oder Bild dar.</para>
      <para>
        <b>Hinweis:</b>  Wenn Sie mit einer Teilmenge der Formen in einem Dokument arbeiten möchten (beispielsweise nur für die AutoFormen im Dokument oder nur für die ausgewählten Shapes), müssen Sie eine <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> Auflistung erstellen, die die Shapes enthält, mit denen Sie arbeiten möchten.</para>
      <para>Verwenden Sie die <see cref="P:Microsoft.Office.Interop.Word._Document.Shapes" /> -Eigenschaft, um die <b>Shapes</b> -Auflistung zurückzugeben.</para>
      <para>
        <b>Hinweis:</b>  Wenn Sie auf alle Formen in einem Dokument gleichzeitig (beispielsweise Löschen oder Festlegen einer Eigenschaft) verzichten möchten, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Shapes.Range(System.Object@)" /> -Methode zum Erstellen eines <b>ShapeRange</b> -Objekts, das alle Formen in der <b>Shapes</b> -Auflistung enthält, und wenden Sie dann die entsprechende Eigenschaft oder Methode auf das <b>ShapeRange</b> -Objekt an.</para>
      <para>Verwenden Sie eine der folgenden Methoden der <b>Shapes</b> -Auflistung: <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddCallout(Microsoft.Office.Core.MsoCalloutType,System.Single,System.Single,System.Single,System.Single,System.Object@)" /> , <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddCurve(System.Object@,System.Object@)" /> , <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddLabel(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single,System.Object@)" /> , <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddLine(System.Single,System.Single,System.Single,System.Single,System.Object@)" /> ,,, <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddOLEControl(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddOLEObject(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddPolyline(System.Object@,System.Object@)" /> , <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddShape(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Object@)" /> , <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddTextbox(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single,System.Object@)" /> , <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddTextEffect(Microsoft.Office.Core.MsoPresetTextEffect,System.String,System.String,System.Single,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single,System.Object@)" /> , oder <see cref="M:Microsoft.Office.Interop.Word.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> fügen Sie ein Shape zu einem Dokument hinzu, und geben Sie ein <b>Shape</b> -Objekt zurück, das die neu erstellte Form darstellt.</para>
      <para>Verwenden Sie <b>Shapes</b>( <paramref name="index" /> ), wobei <paramref name="index" /> es sich um den Namen oder die Indexnummer handelt, um ein einzelnes <b>Shape</b> -Objekt zurückzugeben.</para>
      <para>Jedes Shape erhält einen Standardnamen erstellt wird. Angenommen, wenn Sie drei verschiedene Formen zu einem Dokument hinzufügen, sie möglicherweise werden mit dem Namen "Rechteck 2", "Textfeld 3" und "Oval 4". Wenn Sie einer Form einen aussagekräftigeren Namen geben möchten, legen Sie die <see cref="P:Microsoft.Office.Interop.Word.Shape.Name" /> Eigenschaft fest.</para>
      <para>Die Shapes-Auflistung enthält keine <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> Objekte. <b>InlineShape</b> -Objekte werden wie Zeichen behandelt und innerhalb einer Textzeile wie Zeichen positioniert. <b>Shape</b> -Objekte sind an einem Textbereich verankert, können jedoch auf der Seite frei bewegt und positioniert werden. Sie können die <see cref="M:Microsoft.Office.Interop.Word.Shape.ConvertToInlineShape" /> -Methode und die <see cref="M:Microsoft.Office.Interop.Word.FreeformBuilder.ConvertToShape(System.Object@)" /> -Methode verwenden, um Formen von einem Typ in einen anderen zu konvertieren. Nur Bilder, OLE-Objekte und ActiveX-Steuerelemente können in Inlineformen konvertiert werden.</para>
      <para>Die <see cref="P:Microsoft.Office.Interop.Word.Shapes.Count" /> Eigenschaft für diese Auflistung in einem Dokument gibt nur die Anzahl der Elemente in der Hauptstory zurück. Um die Shapes in allen Kopf-und Fußzeilen zu zählen, verwenden Sie die <b>Shapes</b> -Auflistung mit einem beliebigen <see cref="T:Microsoft.Office.Interop.Word.HeaderFooter" /> Objekt.</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddCallout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddCallout (Microsoft.Office.Core.MsoCalloutType Type, float Left, float Top, float Width, float Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddCallout([in]valuetype Microsoft.Office.Core.MsoCalloutType Type, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddCallout(Microsoft.Office.Core.MsoCalloutType,System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCallout (Type As MsoCalloutType, Left As Single, Top As Single, Width As Single, Height As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddCallout : Microsoft.Office.Core.MsoCalloutType * single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddCallout (Type, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoCalloutType" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">Erforderlich <see cref="T:Microsoft.Office.Core.MsoCalloutType" /> . Der Typ der Legende. <b>MsoCalloutType</b> kann eine der folgenden Konstanten sein: <b>msoCalloutOne</b> – positioniert die Legendenlinie gerade nach unten am linken Rand des Legenden Felds. <b>msoCalloutTwo</b> – positioniert die Legendenlinie Diagonal nach unten und vom linken Rand des Legenden Felds Weg. <b>msoCalloutThree</b> – positioniert die Legendenlinie gerade aus und dann diagonal nach unten und von der linken Kante des Legenden Felds Weg. <b>msoCalloutFour</b> – positioniert die Legendenzeile am linken Rand des Legendentextfelds. <b>msoCalloutMixed</b> – ein Rückgabewert, der angibt, dass mehr als ein <b>MsoCalloutType</b> in einem Bereich oder einer Auswahl vorhanden ist.</param>
        <param name="Left">Erforderlicher <b>Single</b>-Wert. Die in Punkt gemessene Position des linken Rands des umgebenden Felds der Legende.</param>
        <param name="Top">Erforderlicher <b>Single</b>-Wert. Die in Punkt gemessene Position des oberen Rands des umgebenden Felds der Legende.</param>
        <param name="Width">Erforderlicher <b>Single</b>-Wert. Die in Punkt gemessene Breite des umgebenden Felds der Legende.</param>
        <param name="Height">Erforderlicher <b>Single</b>-Wert. Die in Punkt gemessene Höhe des umgebenden Felds der Legende.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt, das den Text darstellt, an den die Legende gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument ausgelassen wird, wird der Verankerungsbereich automatisch ausgewählt, und die Legende wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Fügt einem Dokument eine rahmenlose Linienbeschriftung hinzu. Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt zurück, das die Legende darstellt, und fügt es der <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> Auflistung hinzu.</summary>
        <returns>To be added.</returns>
        <remarks><para>Mithilfe der-Methode können Sie eine größere Vielzahl von Legenden wie Ballons und Wolken einfügen <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddShape(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Object@)" /> .</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCanvas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddCanvas (float Left, float Top, float Width, float Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddCanvas([in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddCanvas(System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCanvas (Left As Single, Top As Single, Width As Single, Height As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddCanvas : single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddCanvas (Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(25)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Left">Erforderlicher <b>Single</b>-Wert. Die Position (in Punkt) des linken Randes des Zeichenbereichs, relativ zur Verankerung.</param>
        <param name="Top">Erforderlicher <b>Single</b>-Wert. Die Position (in Punkt) des oberen Randes des Zeichenbereichs, relativ zur Verankerung.</param>
        <param name="Width">Erforderlicher <b>Single</b>-Wert. Die Breite (in Punkt) des Zeichenbereichs.</param>
        <param name="Height">Erforderlicher <b>Single</b>-Wert. Die Höhe (in Punkt) des Zeichenbereichs.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt, das den Text darstellt, an den die Leinwand gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument nicht angegeben wird, wird der Verankerungsbereich automatisch ausgewählt und der Zeichenbereich wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Fügt einen Zeichenbereich zu einem Dokument hinzu. Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt zurück, das den Zeichenbereich darstellt, und fügt es der <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> Auflistung hinzu.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddChart (Microsoft.Office.Core.XlChartType Type = (Microsoft.Office.Core.XlChartType) -1, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddChart([in]valuetype Microsoft.Office.Core.XlChartType Type, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddChart(Microsoft.Office.Core.XlChartType,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddChart (Optional Type As XlChartType = (Microsoft.Office.Core.XlChartType) -1, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddChart : Microsoft.Office.Core.XlChartType * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddChart (Type, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.XlChartType" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="Left">To be added.</param>
        <param name="Top">To be added.</param>
        <param name="Width">To be added.</param>
        <param name="Height">To be added.</param>
        <param name="Anchor">To be added.</param>
        <summary>Dieses Objekt, dieses Mitglied oder diese Aufzählung ist veraltet und kann nicht in Ihrem Code verwendet werden.</summary>
        <returns><see cref="T:Microsoft.Office.Interop.Word.Shape" /></returns>
        <remarks>To be added.</remarks>
        <example><para>Im folgenden Beispiel wird ein neues 3D-Säulendiagramm erstellt und dem aktiven Dokument hinzugefügt.</para></example>
      </Docs>
    </Member>
    <Member MemberName="AddChart2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddChart2 (int Style = -1, Microsoft.Office.Core.XlChartType Type = (Microsoft.Office.Core.XlChartType) -1, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor, ref object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddChart2([in]int32 Style, [in]valuetype Microsoft.Office.Core.XlChartType Type, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor, [in]object&amp; NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddChart2(System.Int32,Microsoft.Office.Core.XlChartType,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddChart2 (Optional Style As Integer = -1, Optional Type As XlChartType = (Microsoft.Office.Core.XlChartType) -1, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object, Optional ByRef NewLayout As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddChart2 : int * Microsoft.Office.Core.XlChartType * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddChart2 (Style, Type, Left, Top, Width, Height, Anchor, NewLayout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Style" Type="System.Int32" />
        <Parameter Name="Type" Type="Microsoft.Office.Core.XlChartType" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
        <Parameter Name="NewLayout" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Style">Das Diagrammformat.</param>
        <param name="Type">Der Typ des Diagramms.</param>
        <param name="Left">Die Position (in Punkten) des linken Rands des Diagramms, relativ zur Verankerung.</param>
        <param name="Top">Die Position (in Punkten) des oberen Rands des Diagramms relativ zur Verankerung.</param>
        <param name="Width">Die Breite des Diagramms in Punkten.</param>
        <param name="Height">Die Höhe des Diagramms in Punkten.</param>
        <param name="Anchor">Wenn <paramref name="NewLayout" /> ist true, wird das Diagramm mithilfe der neuen dynamischen Formatierungsregeln eingefügt (Titel ist auf, und Legende ist nur auf, wenn mehrere Datenreihen vorhanden sind).</param>
        <param name="NewLayout">Wenn <paramref name="NewLayout" /> ist true, wird das Diagramm mithilfe der neuen dynamischen Formatierungsregeln eingefügt (Titel ist auf, und Legende ist nur auf, wenn mehrere Datenreihen vorhanden sind).</param>
        <summary>Fügt einem Dokument ein Diagramm hinzu. Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt zurück, das ein Diagramm darstellt, und fügt es der angegebenen Auflistung hinzu.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConnector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddConnector (Microsoft.Office.Core.MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddConnector([in]valuetype Microsoft.Office.Core.MsoConnectorType Type, [in]float32 BeginX, [in]float32 BeginY, [in]float32 EndX, [in]float32 EndY) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddConnector(Microsoft.Office.Core.MsoConnectorType,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddConnector (Type As MsoConnectorType, BeginX As Single, BeginY As Single, EndX As Single, EndY As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::Shape ^ AddConnector(Microsoft::Office::Core::MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY);" />
      <MemberSignature Language="F#" Value="abstract member AddConnector : Microsoft.Office.Core.MsoConnectorType * single * single * single * single -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddConnector (Type, BeginX, BeginY, EndX, EndY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoConnectorType" />
        <Parameter Name="BeginX" Type="System.Single" />
        <Parameter Name="BeginY" Type="System.Single" />
        <Parameter Name="EndX" Type="System.Single" />
        <Parameter Name="EndY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="BeginX">To be added.</param>
        <param name="BeginY">To be added.</param>
        <param name="EndX">To be added.</param>
        <param name="EndY">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddCurve (ref object SafeArrayOfPoints, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddCurve([in]object&amp; SafeArrayOfPoints, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddCurve(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCurve (ByRef SafeArrayOfPoints As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddCurve : obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddCurve (SafeArrayOfPoints, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SafeArrayOfPoints" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="SafeArrayOfPoints">Erforderliches <b>Objekt</b>. Ein Array von Koordinatenpaaren, das Scheitelpunkte und Steuerpunkte der Kurve angibt. Der zuerst angegebene Punkt bildet den Scheitelpunkt, die beiden folgenden stellen Steuerpunkte für das erste Bézier-Segment dar. Geben Sie anschließend für jedes weitere Kurvensegment einen Scheitel und zwei Steuerpunkte an. Der zuletzt angegebene Punkt ist der Endscheitel der Kurve. Beachten Sie, dass immer 3n + 1 Punkte angegeben werden müssen, wobei n die Anzahl der Kurvensegmente ist.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt, das den Text darstellt, an den die Kurve gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument ausgelassen wird, wird der Verankerungsbereich automatisch ausgewählt, und die Kurve wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt zurück, das eine Bézier-Kurve in einem Dokument darstellt.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDiagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddDiagram (Microsoft.Office.Core.MsoDiagramType Type, float Left, float Top, float Width, float Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddDiagram([in]valuetype Microsoft.Office.Core.MsoDiagramType Type, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddDiagram(Microsoft.Office.Core.MsoDiagramType,System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDiagram (Type As MsoDiagramType, Left As Single, Top As Single, Width As Single, Height As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddDiagram : Microsoft.Office.Core.MsoDiagramType * single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddDiagram (Type, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoDiagramType" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">Erforderlich <see cref="T:Microsoft.Office.Core.MsoDiagramType" /> .<b> MsoDiagramType</b> kann eine der folgenden Konstanten sein: <b>msoDiagramCycle</b> – zeigt einen Prozess mit einem kontinuierlichen Zyklus an. <b>msoDiagramMixed wird</b> – wird mit dieser Methode nicht verwendet. <b>msoDiagramOrgChart</b> – zeigt hierarchische Beziehungen an. <b>msoDiagramPyramid</b> – zeigt Stiftungs basierte Beziehungen an. <b>msoDiagramRadial</b> – zeigt Beziehungen eines Kernelements an. <b>msoDiagramTarget</b> – zeigt Schritte zu einem Ziel. <b>msoDiagramVenn</b> – zeigt Bereiche der Überlappung zwischen Elementen an.</param>
        <param name="Left">Erforderlicher <b>Single</b>-Wert. Die in Punkten gemessene Position des linken Rands des Begrenzungsrechtecks des Diagramms relativ zum Anker.</param>
        <param name="Top">Erforderlicher <b>Single</b>-Wert. Die in Punkten gemessene Position des oberen Rands des Begrenzungsfelds des Diagramms relativ zum Anker.</param>
        <param name="Width">Erforderlicher <b>Single</b>-Wert. Die in Punkten gemessene Breite des Begrenzungsfelds des Diagramms.</param>
        <param name="Height">Erforderlicher <b>Single</b>-Wert. Die in Punkten gemessene Höhe des Begrenzungsfelds des Diagramms.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt, das den Text darstellt, an den das Diagramm gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument ausgelassen wird, wird der Verankerungsbereich automatisch ausgewählt, und das Diagramm wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt zurück, das ein neu erstelltes Diagramm in einem Dokument darstellt.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddLabel (Microsoft.Office.Core.MsoTextOrientation Orientation, float Left, float Top, float Width, float Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddLabel([in]valuetype Microsoft.Office.Core.MsoTextOrientation Orientation, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddLabel(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLabel (Orientation As MsoTextOrientation, Left As Single, Top As Single, Width As Single, Height As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddLabel : Microsoft.Office.Core.MsoTextOrientation * single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddLabel (Orientation, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Orientation" Type="Microsoft.Office.Core.MsoTextOrientation" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Orientation">Erforderlich <see cref="T:Microsoft.Office.Core.MsoTextOrientation" /> . Die Ausrichtung des Texts. <b>MsoTextOrientation</b> kann eine der folgenden Konstanten sein: <b>msoTextOrientationDownward </b> <b>msoTextOrientationHorizontal </b> <b>msoTextOrientationHorizontalRotatedFarEast </b> <b>msoTextOrientationMixed </b> <b>msoTextOrientationUpward </b> <b>msoTextOrientationVertical msoTextOrientationVerticalFarEast einige </b> <b> </b>dieser Konstanten stehen Ihnen möglicherweise nicht zur Verfügung, abhängig von der ausgewählten oder installierten Sprachunterstützung (beispielsweise US-Englisch).</param>
        <param name="Left">Erforderlicher <b>Single</b>-Wert. Die in Punkten gemessene Position des linken Rands der Beschriftung relativ zum Anker.</param>
        <param name="Top">Erforderlicher <b>Single</b>-Wert. Die in Punkten gemessene Position des oberen Rands der Beschriftung relativ zum Anker.</param>
        <param name="Width">Erforderlicher <b>Single</b>-Wert. Die Breite der Beschriftung in Punkt.</param>
        <param name="Height">Erforderlicher <b>Single</b>-Wert. Die Höhe der Beschriftung in Punkt.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt, das den Text darstellt, an den die Bezeichnung gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument ausgelassen wird, wird der Verankerungsbereich automatisch ausgewählt, und die Beschriftung wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Fügt einem Dokument eine Textbeschriftung hinzu. Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt zurück, das die Textbezeichnung darstellt, und fügt es der <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> Auflistung hinzu.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddLine (float BeginX, float BeginY, float EndX, float EndY, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddLine([in]float32 BeginX, [in]float32 BeginY, [in]float32 EndX, [in]float32 EndY, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddLine(System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLine (BeginX As Single, BeginY As Single, EndX As Single, EndY As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddLine : single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddLine (BeginX, BeginY, EndX, EndY, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BeginX" Type="System.Single" />
        <Parameter Name="BeginY" Type="System.Single" />
        <Parameter Name="EndX" Type="System.Single" />
        <Parameter Name="EndY" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="BeginX">Erforderlicher <b>Single</b>-Wert. Die in Punkten gemessene horizontale Position des Anfangspunkts der Verbindung relativ zum Anker.</param>
        <param name="BeginY">Erforderlicher <b>Single</b>-Wert. Die in Punkten gemessene vertikale Position des Anfangspunkts der Verbindung relativ zum Anker.</param>
        <param name="EndX">Erforderlicher <b>Single</b>-Wert. Die in Punkten gemessene horizontale Position des Endpunkts der Verbindung relativ zum Anker.</param>
        <param name="EndY">Erforderlicher <b>Single</b>-Wert. Die in Punkten gemessene vertikale Position des Endpunkts der Verbindung, relativ zum Anker.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt, das den Text darstellt, an den die Bezeichnung gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument ausgelassen wird, wird der Verankerungsbereich automatisch ausgewählt, und die Beschriftung wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Fügt einem Dokument eine Textreihe hinzu. Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt zurück, das die-Verbindung darstellt, und fügt es der <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddCallout(Microsoft.Office.Core.MsoCalloutType,System.Single,System.Single,System.Single,System.Single,System.Object@)" /> Auflistung hinzu.</summary>
        <returns>To be added.</returns>
        <remarks><para>Um einen Pfeil zu erstellen, verwenden Sie die <see cref="P:Microsoft.Office.Interop.Word.Shape.Line" /> -Eigenschaft, um eine gerade zu formatieren.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOLEControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddOLEControl (ref object ClassType, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddOLEControl([in]object&amp; ClassType, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddOLEControl(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOLEControl (Optional ByRef ClassType As Object, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddOLEControl : obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddOLEControl (ClassType, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object" RefType="ref" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ClassType">Optionales <b>Objekt</b>. Die Programm-ID für das zu erstellende ActiveX-Steuerelement.</param>
        <param name="Left">Optionales <b>Objekt</b>. Die Position (in Punkt) des linken Rands des neuen Objekts relativ zum Anker.</param>
        <param name="Top">Optionales <b>Objekt</b>. Die Position (in Punkt) des oberen Rands des neuen Objekts relativ zum Anker.</param>
        <param name="Width">Optionales <b>Objekt</b>. Die Breite des ActiveX-Steuerelements in Punkt.</param>
        <param name="Height">Optionales <b>Objekt</b>. Die Höhe des ActiveX-Steuerelements in Punkt.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Der Bereich, an den das ActiveX-Steuerelement gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument ausgelassen wird, wird der Anker jedoch automatisch platziert, und das ActiveX-Steuerelement wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Erstellt ein ActiveX-Steuerelement (früher als OLE-Steuerelement bezeichnet). Gibt das <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt zurück, das das neue ActiveX-Steuerelement darstellt.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOLEObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddOLEObject (ref object ClassType, ref object FileName, ref object LinkToFile, ref object DisplayAsIcon, ref object IconFileName, ref object IconIndex, ref object IconLabel, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddOLEObject([in]object&amp; ClassType, [in]object&amp; FileName, [in]object&amp; LinkToFile, [in]object&amp; DisplayAsIcon, [in]object&amp; IconFileName, [in]object&amp; IconIndex, [in]object&amp; IconLabel, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddOLEObject(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOLEObject (Optional ByRef ClassType As Object, Optional ByRef FileName As Object, Optional ByRef LinkToFile As Object, Optional ByRef DisplayAsIcon As Object, Optional ByRef IconFileName As Object, Optional ByRef IconIndex As Object, Optional ByRef IconLabel As Object, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddOLEObject : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddOLEObject (ClassType, FileName, LinkToFile, DisplayAsIcon, IconFileName, IconIndex, IconLabel, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object" RefType="ref" />
        <Parameter Name="FileName" Type="System.Object" RefType="ref" />
        <Parameter Name="LinkToFile" Type="System.Object" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object" RefType="ref" />
        <Parameter Name="IconIndex" Type="System.Object" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object" RefType="ref" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ClassType">Optionales <b>Objekt</b>. Der Name der Anwendung, die zum Aktivieren des angegebenen OLE-Objekts verwendet wird.</param>
        <param name="FileName">Optionales <b>Objekt</b>. Die Datei, aus der das Objekt erstellt werden soll. Wenn dieses Argument nicht angegeben ist, wird der aktuelle Ordner verwendet. Sie müssen entweder das <paramref name="ClassType" /> oder <paramref name="FileName" /> -Argument für das Objekt angeben, jedoch nicht beides.</param>
        <param name="LinkToFile">Optionales<b>Objekt</b>. <b>True</b>, wenn das OLE-Objekt mit der Datei verknüpft werden soll, aus der es erstellt wurde. <b>False</b>, wenn das OLE-Objekt als separate Kopie der Datei angelegt werden soll. Wenn Sie einen Wert für angegeben <paramref name="ClassType" /> haben, <paramref name="LinkToFile" /> muss das Argument auf <b>false</b>festgelegt sein. Der Standardwert ist <b>False</b>.</param>
        <param name="DisplayAsIcon">Optionales <b>Objekt</b>. <b>True</b>, wenn das OLE-Objekt als Symbol angezeigt werden soll. Der Standardwert ist <b>False</b>.</param>
        <param name="IconFileName">Optionales <b>Objekt</b>. Die Datei, die das anzuzeigende Symbol enthält.</param>
        <param name="IconIndex">Optionales <b>Objekt</b>. Die Indexnummer des Symbols in <paramref name="IconFileName" /> . Die Reihenfolge der Symbole in der angegebenen Datei entspricht der Reihenfolge, in der die Symbole im dialogfeldsymbol ändern (Menü Einfügen, Dialogfeldobjekt) angezeigt werden, wenn das Kontrollkästchen als Symbol anzeigen aktiviert ist. Das erste Symbol in der Datei weist die Indexnummer 0 (Null) auf. Wenn kein Symbol mit der angegebenen Indexnummer vorhanden <paramref name="IconFileName" /> ist, wird das Symbol mit der Indexnummer 1 (das zweite Symbol in der Datei) verwendet. Der Standardwert ist 0 (Null).</param>
        <param name="IconLabel">Optionales <b>Objekt</b>. Ein Bezeichnungsfeld (Beschriftung), das unter dem Symbol angezeigt wird.</param>
        <param name="Left">Optionales <b>Objekt</b>. Die Position (in Punkt) des linken Rands des neuen Objekts relativ zum Anker.</param>
        <param name="Top">Optionales <b>Objekt</b>. Die Position (in Punkt) des oberen Rands des neuen Objekts relativ zum Anker.</param>
        <param name="Width">Optionales <b>Objekt</b>. Die Breite des OLE-Objekts in Punkt.</param>
        <param name="Height">Optionales <b>Objekt</b>. Die Höhe des OLE-Objekts in Punkt.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Der Bereich, an den das OLE-Objekt gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes des Anker Bereichs positioniert. Wenn <paramref name="Anchor" /> nicht angegeben ist, wird der Anker automatisch platziert, und das OLE-Objekt wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Erstellt ein OLE-Objekt. Gibt das <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt zurück, das das neue OLE-Objekt darstellt.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPicture">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddPicture (string FileName, ref object LinkToFile, ref object SaveWithDocument, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddPicture([in]string FileName, [in]object&amp; LinkToFile, [in]object&amp; SaveWithDocument, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddPicture(System.String,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPicture (FileName As String, Optional ByRef LinkToFile As Object, Optional ByRef SaveWithDocument As Object, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddPicture : string * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddPicture (FileName, LinkToFile, SaveWithDocument, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="LinkToFile" Type="System.Object" RefType="ref" />
        <Parameter Name="SaveWithDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName"><b>String</b> erforderlich. Der Pfad und der Dateiname des Bilds.</param>
        <param name="LinkToFile">Optionales <b>Objekt</b>. <b>True</b>, wenn das Bild mit der Datei verknüpft werden soll, aus der es erstellt wurde. <b>False</b>, wenn das Bild als separate Kopie der Datei erstellt werden soll. Der Standardwert ist <b>False</b>.</param>
        <param name="SaveWithDocument">Optionales <b>Objekt</b>. <b>True</b>, wenn das verknüpfte Bild mit dem Dokument gespeichert werden soll. Der Standardwert ist <b>False</b>.</param>
        <param name="Left">Optionales <b>Objekt</b>. Die in Punkten gemessene Position des linken Rands des neuen Bilds relativ zum Anker.</param>
        <param name="Top">Optionales <b>Objekt</b>. Die in Punkten gemessene Position des oberen Rands des neuen Bilds relativ zum Anker.</param>
        <param name="Width">Optionales <b>Objekt</b>. Die Breite des Bilds in Punkt.</param>
        <param name="Height">Optionales <b>Objekt</b>. Die Höhe des Bilds in Punkt.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Der Bereich, an den das Bild gebunden wird. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument ausgelassen wird, wird der Anker jedoch automatisch platziert, und das Bild wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Fügt einem Dokument ein Bild hinzu. Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt zurück, das das Bild darstellt, und fügt es der <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> Auflistung hinzu.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolyline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddPolyline (ref object SafeArrayOfPoints, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddPolyline([in]object&amp; SafeArrayOfPoints, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddPolyline(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPolyline (ByRef SafeArrayOfPoints As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddPolyline : obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddPolyline (SafeArrayOfPoints, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SafeArrayOfPoints" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="SafeArrayOfPoints">Erforderliches <b>Objekt</b>. Ein Array von Koordinatenpaaren, das die Scheitelpunkte der Polylinienzeichnung angibt.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt, das den Text darstellt, an den die Polylinie gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument ausgelassen wird, wird der Verankerungsbereich automatisch ausgewählt, und die Linie wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Fügt einem Dokument ein geöffnetes oder Geschlossenes Polygon hinzu. Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt zurück, das das Polygon darstellt, und fügt es der <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> Auflistung hinzu.</summary>
        <returns>To be added.</returns>
        <remarks><para>Weisen Sie dem ersten und letzten Scheitelpunkt in der Polylinienzeichnung dieselben Koordinaten zu, um ein geschlossenes Vieleck zu bilden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddShape (int Type, float Left, float Top, float Width, float Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddShape([in]int32 Type, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddShape(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddShape (Type As Integer, Left As Single, Top As Single, Width As Single, Height As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddShape : int * single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddShape (Type, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Int32" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">Erforderliche <b>ganze Zahl</b>. Der Typ der zurückzugebenden Form. Kann eine beliebige <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" /> Konstante sein.</param>
        <param name="Left">Erforderlicher <b>Single</b>-Wert. Die in Punkt gemessene Position des linken Rands der AutoForm.</param>
        <param name="Top">Erforderlicher <b>Single</b>-Wert. Die in Punkt gemessene Position des oberen Rands der AutoForm.</param>
        <param name="Width">Erforderlicher <b>Single</b>-Wert. Die in Punkt gemessene Breite der AutoForm.</param>
        <param name="Height">Erforderlicher <b>Single</b>-Wert. Die in Punkt gemessene Höhe der AutoForm.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt, das den Text darstellt, an den die AutoForm gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument ausgelassen wird, wird der Verankerungsbereich automatisch ausgewählt, und die AutoForm wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Fügt einem Dokument eine AutoForm hinzu. Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt zurück, das die AutoForm darstellt, und fügt es der <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> Auflistung hinzu.</summary>
        <returns>To be added.</returns>
        <remarks><para>Um den Typ einer AutoForm zu ändern, die Sie hinzugefügt haben, legen Sie die <see cref="P:Microsoft.Office.Interop.Word.Shape.AutoShapeType" /> -Eigenschaft fest.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSmartArt">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddSmartArt (Microsoft.Office.Core.SmartArtLayout Layout, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddSmartArt([in]class Microsoft.Office.Core.SmartArtLayout Layout, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddSmartArt(Microsoft.Office.Core.SmartArtLayout,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSmartArt (Layout As SmartArtLayout, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddSmartArt : Microsoft.Office.Core.SmartArtLayout * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddSmartArt (Layout, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Layout" Type="Microsoft.Office.Core.SmartArtLayout" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Layout">Ein <see cref="T:Microsoft.Office.Core.SmartArtLayout" /> Objekt, das das Layout für die SmartArt-Grafik angibt.</param>
        <param name="Left">Der Abstand zwischen dem linken Folienrand und dem linken Rand der SmartArt-Grafik in Punkt.</param>
        <param name="Top">Der Abstand zwischen dem oberen Folienrand und dem oberen Rand der SmartArt-Grafik in Punkt.</param>
        <param name="Width">Die Breite der SmartArt-Grafik.</param>
        <param name="Height">Die Höhe der SmartArt-Grafik.</param>
        <param name="Anchor">Ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt, das den Text darstellt, an den die SmartArt-Grafik gebunden ist. Wenn Anchor angegeben ist, wird die Verankerung am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieser Parameter ausgelassen wird, wird der Verankerungsbereich automatisch ausgewählt, und die SmartArt-Grafik wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Fügt die angegebene SmartArt-Grafik in das aktive Dokument ein.</summary>
        <returns>Ein <see cref="T:Microsoft.Office.Interop.Word.Shape" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTextbox">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddTextbox (Microsoft.Office.Core.MsoTextOrientation Orientation, float Left, float Top, float Width, float Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddTextbox([in]valuetype Microsoft.Office.Core.MsoTextOrientation Orientation, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddTextbox(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTextbox (Orientation As MsoTextOrientation, Left As Single, Top As Single, Width As Single, Height As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddTextbox : Microsoft.Office.Core.MsoTextOrientation * single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddTextbox (Orientation, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Orientation" Type="Microsoft.Office.Core.MsoTextOrientation" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Orientation">Erforderlich <see cref="T:Microsoft.Office.Core.MsoTextOrientation" /> . Die Textausrichtung. Einige dieser Konstanten stehen Ihnen je nach ausgewählter oder installierter Sprachunterstützung (z. B. US-Englisch) möglicherweise nicht zur Verfügung.</param>
        <param name="Left">Erforderlicher <b>Single</b>-Wert. Die in Punkt gemessene Position des linken Rands des Textfelds.</param>
        <param name="Top">Erforderlicher <b>Single</b>-Wert. Die in Punkt gemessene Position des oberen Rands des Textfelds.</param>
        <param name="Width">Erforderlicher <b>Single</b>-Wert. Die in Punkt gemessene Breite des Textfelds.</param>
        <param name="Height">Erforderlicher <b>Single</b>-Wert. Die in Punkt gemessene Höhe des Textfelds.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt, das den Text darstellt, an den das Textfeld gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument ausgelassen wird, wird der Verankerungsbereich automatisch ausgewählt, und das Textfeld wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Fügt einem Dokument ein Textfeld hinzu. Gibt einen <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Wert vom Typs Object zurück, der das Textfeld darstellt, und fügt es der <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> Auflistung hinzu.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTextEffect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddTextEffect (Microsoft.Office.Core.MsoPresetTextEffect PresetTextEffect, string Text, string FontName, float FontSize, Microsoft.Office.Core.MsoTriState FontBold, Microsoft.Office.Core.MsoTriState FontItalic, float Left, float Top, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddTextEffect([in]valuetype Microsoft.Office.Core.MsoPresetTextEffect PresetTextEffect, [in]string Text, [in]string FontName, [in]float32 FontSize, [in]valuetype Microsoft.Office.Core.MsoTriState FontBold, [in]valuetype Microsoft.Office.Core.MsoTriState FontItalic, [in]float32 Left, [in]float32 Top, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddTextEffect(Microsoft.Office.Core.MsoPresetTextEffect,System.String,System.String,System.Single,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTextEffect (PresetTextEffect As MsoPresetTextEffect, Text As String, FontName As String, FontSize As Single, FontBold As MsoTriState, FontItalic As MsoTriState, Left As Single, Top As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddTextEffect : Microsoft.Office.Core.MsoPresetTextEffect * string * string * single * Microsoft.Office.Core.MsoTriState * Microsoft.Office.Core.MsoTriState * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddTextEffect (PresetTextEffect, Text, FontName, FontSize, FontBold, FontItalic, Left, Top, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PresetTextEffect" Type="Microsoft.Office.Core.MsoPresetTextEffect" />
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="FontName" Type="System.String" />
        <Parameter Name="FontSize" Type="System.Single" />
        <Parameter Name="FontBold" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="FontItalic" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="PresetTextEffect">Erforderlich <see cref="T:Microsoft.Office.Core.MsoPresetTextEffect" /> . Ein voreingestellter Texteffekt. Die Werte der <b>MsoPresetTextEffect</b> -Konstanten entsprechen den Formaten, die im Dialogfeld WordArt-Katalog aufgeführt sind (nummeriert von links nach rechts und von oben nach unten).</param>
        <param name="Text"><b>String</b> erforderlich. Der Text in der WordArt.</param>
        <param name="FontName"><b>String</b> erforderlich. Der Name der Schriftart, die in der WordArt verwendet wird.</param>
        <param name="FontSize">Erforderlicher <b>Single</b>-Wert. Die Größe (in Punkt) der Schriftart, die im WordArt-Objekts verwendet wird.</param>
        <param name="FontBold">Erforderlich <see cref="T:Microsoft.Office.Core.MsoTriState" /> . <b>MsoTrue</b>, wenn die im WordArt-Objekt verwendete Schriftart fett formatiert werden soll.</param>
        <param name="FontItalic">Erforderlich <see cref="T:Microsoft.Office.Core.MsoTriState" /> . <b>MsoTrue</b>, wenn die im WordArt-Objekt verwendete Schriftart kursiv formatiert werden soll.</param>
        <param name="Left">Erforderlicher <b>Single</b>-Wert. Die in Punkten gemessene Position des linken Rands der WordArt-Form relativ zum Anker.</param>
        <param name="Top">Erforderlicher <b>Single</b>-Wert. Die in Punkten gemessene Position des oberen Rands der WordArt-Form relativ zum Anker.</param>
        <param name="Anchor">Optionales <b>Objekt</b>. Ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Object, das den Text darstellt, an den das WordArt-Objekt gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument ausgelassen wird, wird der Verankerungsbereich automatisch ausgewählt, und das WordArt-Zeichen wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Fügt einem Dokument ein WordArt-Shape hinzu. Gibt einen Wert <see cref="T:Microsoft.Office.Interop.Word.Shape" /> vom Typs Object zurück, der das WordArt-Objekt darstellt, und fügt es der <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> Auflistung hinzu.</summary>
        <returns>To be added.</returns>
        <remarks><para>Wenn Sie einem Dokument WordArt hinzufügen, werden die Höhe und Breite der WordArt automatisch anhand der Höhe und Menge des angegebenen Texts festgelegt.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWebVideo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddWebVideo (string EmbedCode, ref object VideoWidth, ref object VideoHeight, ref object PosterFrameImage, ref object Url, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddWebVideo([in]string EmbedCode, [in]object&amp; VideoWidth, [in]object&amp; VideoHeight, [in]object&amp; PosterFrameImage, [in]object&amp; Url, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddWebVideo(System.String,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddWebVideo (EmbedCode As String, ByRef VideoWidth As Object, ByRef VideoHeight As Object, Optional ByRef PosterFrameImage As Object, Optional ByRef Url As Object, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddWebVideo : string * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddWebVideo (EmbedCode, VideoWidth, VideoHeight, PosterFrameImage, Url, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EmbedCode" Type="System.String" />
        <Parameter Name="VideoWidth" Type="System.Object" RefType="ref" />
        <Parameter Name="VideoHeight" Type="System.Object" RefType="ref" />
        <Parameter Name="PosterFrameImage" Type="System.Object" RefType="ref" />
        <Parameter Name="Url" Type="System.Object" RefType="ref" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="EmbedCode">Der einzubettende HTML-Code.</param>
        <param name="VideoWidth">Ein Integer-Wert, der die Breite des Webvideos in Pixel darstellt.</param>
        <param name="VideoHeight">Ein Integer-Wert, der die Höhe des Webvideos in Pixel darstellt.</param>
        <param name="PosterFrameImage">Eine Zeichenfolge, die auf die Datei zeigt, die als Plakatrahmen für das Webvideo verwendet werden soll.</param>
        <param name="Url">Ein String-Wert, der die URL des Webvideos enthält.</param>
        <param name="Left">Die in Punkten gemessene Position des linken Rands des Poster-Frames am Rand des Dokuments.</param>
        <param name="Top">Die in Punkten gemessene Position des oberen Rands des Poster-Frames am Rand des Dokuments.</param>
        <param name="Width">Die in Punkten gemessene Breite des Poster-Frames im Dokument.</param>
        <param name="Height">Die in Punkten gemessene Höhe des Poster-Frames im Dokument.</param>
        <param name="Anchor">Ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> Object-Objekt, das den Text darstellt, an den das Webvideo gebunden ist. Wenn <paramref name="Anchor" /> angegeben ist, wird der Anker am Anfang des ersten Absatzes im Verankerungsbereich positioniert. Wenn dieses Argument ausgelassen wird, wird der Verankerungsbereich automatisch ausgewählt, und das Video wird relativ zum oberen und linken Rand der Seite positioniert.</param>
        <summary>Fügt dem Dokument ein neues Webvideo hinzu.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Shapes.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : Microsoft.Office.Interop.Word.Application" Usage="Microsoft.Office.Interop.Word.Shapes.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Application" /> Objekt zurück, das die Microsoft Word Anwendung darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildFreeform">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.FreeformBuilder BuildFreeform (Microsoft.Office.Core.MsoEditingType EditingType, float X1, float Y1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.FreeformBuilder BuildFreeform([in]valuetype Microsoft.Office.Core.MsoEditingType EditingType, [in]float32 X1, [in]float32 Y1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildFreeform (EditingType As MsoEditingType, X1 As Single, Y1 As Single) As FreeformBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::FreeformBuilder ^ BuildFreeform(Microsoft::Office::Core::MsoEditingType EditingType, float X1, float Y1);" />
      <MemberSignature Language="F#" Value="abstract member BuildFreeform : Microsoft.Office.Core.MsoEditingType * single * single -&gt; Microsoft.Office.Interop.Word.FreeformBuilder" Usage="shapes.BuildFreeform (EditingType, X1, Y1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.FreeformBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EditingType" Type="Microsoft.Office.Core.MsoEditingType" />
        <Parameter Name="X1" Type="System.Single" />
        <Parameter Name="Y1" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="EditingType">Die Bearbeitungseigenschaft des ersten Knotens. Erforderlich <see cref="T:Microsoft.Office.Core.MsoEditingType" /> .<b> MsoEditingType</b> kann eine dieser Konstanten sein (kann nicht <b>msoEditingSmooth</b> oder <b>msoEditingSymmetric</b>sein). <b>msoEditingAuto </b> <b>msoEditingCorner</b></param>
        <param name="X1">Erforderlicher <b>Single</b>-Wert. Die Position (in Punkt) des ersten Knotens der Freihandzeichnung, relativ zur oberen linken Ecke des Dokuments.</param>
        <param name="Y1">Erforderlicher <b>Single</b>-Wert. Die Position (in Punkt) des ersten Knotens der Freihandzeichnung, relativ zur oberen linken Ecke des Dokuments.</param>
        <summary>Erstellt ein Freihandform-Objekt. Gibt ein <see cref="T:Microsoft.Office.Interop.Word.FreeformBuilder" /> Objekt zurück, das die Freihandform so darstellt, wie Sie erstellt wird.</summary>
        <returns>To be added.</returns>
        <remarks><para>Verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" /> -Methode, um der Freihandform Segmente hinzuzufügen. Nachdem Sie mindestens ein Segment zur Freihandform hinzugefügt haben, können Sie die <see cref="M:Microsoft.Office.Interop.Word.FreeformBuilder.ConvertToShape(System.Object@)" /> -Methode verwenden, um das <b>FreeformBuilder</b> -Objekt in ein Objekt zu konvertieren <see cref="T:Microsoft.Office.Interop.Word.Shape" /> , das über die geometrische Beschreibung verfügt, die Sie im <b>FreeformBuilder</b> -Objekt definiert haben.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Shapes.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Office.Interop.Word.Shapes.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Anzahl der Elemente in der angegebenen Auflistung zurück.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Shapes.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Interop.Word.Shapes.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das angegebene Objekt erstellt wurde.</summary>
        <value>To be added.</value>
        <remarks><para>Wenn das Objekt in Microsoft Word erstellt wurde, gibt diese Eigenschaft die hexadezimale Zahl 4D535744 zurück, die die Zeichenfolge "MSWD" darstellt. Der Wert kann auch durch die <b>wdCreatorCode</b>-Konstante dargestellt werden.</para>
          <para>Die <b>Creator</b> -Eigenschaft wurde in erster Linie auf dem Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Beispielsweise hat Microsoft Word den Erstellercode MSWD. Weitere Informationen zu dieser Eigenschaft finden Sie in der Sprachreferenzhilfe von Microsoft Office Macintosh Edition enthalten.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="shapes.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape this[ref object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Shape Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Shapes.Item(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(ByRef Index As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Shape ^ default[System::Object ^ %] { Microsoft::Office::Interop::Word::Shape ^ get(System::Object ^ % Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : Microsoft.Office.Interop.Word.Shape" Usage="Microsoft.Office.Interop.Word.Shapes.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Index">Ein <b>Objekt</b> , das die Ordnungsposition angibt, oder eine Zeichenfolge, die den Namen des einzelnen Objekts darstellt.</param>
        <summary>Gibt ein einzelnes Objekt in einer Auflistung zurück.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Shapes.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.Word.Shapes.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein Objekt zurück, das das übergeordnete Objekt des angegebenen Objekts darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ShapeRange Range (ref object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.ShapeRange Range([in]object&amp; Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.Range(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Range (ByRef Index As Object) As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::ShapeRange ^ Range(System::Object ^ % Index);" />
      <MemberSignature Language="F#" Value="abstract member Range : obj -&gt; Microsoft.Office.Interop.Word.ShapeRange" Usage="shapes.Range Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Index">Erforderliches <b>Objekt</b>. Gibt an, welche Formen im angegebenen Bereich enthalten sein sollen. Kann eine ganze Zahl sein, die die Indexnummer einer Form in der <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> Auflistung angibt, eine Zeichenfolge, die den Namen einer Form angibt, oder ein <b>Objekt</b> Array, das ganze Zahlen oder Zeichenfolgen enthält.</param>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> -Objekt zurück.</summary>
        <returns>To be added.</returns>
        <remarks><para>Zeichenpositionswerte beginnen am Anfang des Dokuments bei 0 (null). Alle Zeichen werden mitgezählt, auch die nicht druckbaren Zeichen. Verborgene Zeichen werden mitgezählt, auch wenn sie nicht angezeigt werden. Wenn Sie die Anfangs-und Endzeichenpositionen für die <b>Range</b> -Methode nicht angeben, wird das gesamte Dokument als Objekt zurückgegeben <see cref="T:Microsoft.Office.Interop.Word.Range" /> .</para>
          <para>
            <b>ShapeRange</b> -Objekte enthalten keine <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> Objekte. Ein <b>InlineShape</b>-Objekt ist äquivalent zu einem Zeichen und wird wie ein Zeichen innerhalb eines Textbereichs positioniert. <see cref="T:Microsoft.Office.Interop.Word.Shape" />Objekte werden in einem Textbereich verankert (standardmäßig die Auswahl), Sie können jedoch an beliebiger Stelle auf der Seite positioniert werden. Ein <b>Shape</b> -Objekt wird immer auf derselben Seite wie der Bereich angezeigt, an dem es verankert ist.</para>
          <para>Die meisten Operationen, die Sie mit einem <b>Shape</b>-Objekt ausführen können, können Sie auch mit einem <b>ShapeRange</b>-Objekt durchführen, das eine einzige Form enthält. Einige Operationen führen zu einem Fehler, wenn sie für ein <b>ShapeRange</b>-Objekt durchgeführt werden, das mehrere Formen enthält.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="abstract member SelectAll : unit -&gt; unit" Usage="shapes.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Markiert alle Formen im Haupt Text, in einem Canvas-Bereich oder in Kopf-und Fußzeilen eines Dokuments.</summary>
        <remarks><para>Diese Methode wählt keine <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> Objekte aus.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
