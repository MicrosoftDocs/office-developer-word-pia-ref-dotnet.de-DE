<Type Name="Selection" FullName="Microsoft.Office.Interop.Word.Selection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae34a49cf650ea9cc7dda266dabbcc92fadbd127" />
    <Meta Name="ms.sourcegitcommit" Value="9a6162e1f2c2145e95970c1fdb1ddcac1366d42f" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20669446" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Selection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Selection" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.Selection" />
  <TypeSignature Language="VB.NET" Value="Public Interface Selection" />
  <TypeSignature Language="C++ CLI" Value="public interface class Selection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020975-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die aktuelle Auswahl in einem Fenster oder Bereich an.</summary>
    <remarks>
      <para>Eine Auswahl entweder einen markierten (oder hervorgehobenen) Bereich im Dokument darstellt, oder, falls kein Element im Dokument ausgewählt ist, die Einfügemarke dar. Es kann nur eine sein <see cref="T:Microsoft.Office.Interop.Word.Selection" /> -Objekt pro Fensterausschnitt eines Dokuments und nur jeweils ein <see cref="T:Microsoft.Office.Interop.Word.Selection" /> -Objekt in der gesamten Anwendung kann aktiv sein.</para>
      <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Word.Pane.Selection" /> zurückzugebende Eigenschaft der <see cref="T:Microsoft.Office.Interop.Word.Selection" /> Objekt. Wenn kein Objektbezeichner verwendet wird, mit der <see cref="P:Microsoft.Office.Interop.Word.Window.Selection" /> -Eigenschaft, gibt Microsoft Word die Auswahl aus den aktiven Ausschnitt des aktiven Dokumentfensters.</para>
      <para>Das Dokument muss nicht aktiv sein, um dessen aktuelle Auswahl aufzurufen sein.</para>
      <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Word.Selection.Text" /> -Eigenschaft festlegen oder Zurückgeben des Texts in der aktuellen Markierung.</para>
      <para>Der <see cref="T:Microsoft.Office.Interop.Word.Selection" /> Objekt enthält verschiedene Methoden und Eigenschaften, mit denen Sie können:</para>
      <list type="bullet">
        <item>
          <para>Reduzieren, erweitern oder anderweitig ändern die aktuelle Markierung.</para>
        </item>
        <item>
          <para>Ausgewählten Text in einem Dokument bearbeiten.</para>
        </item>
        <item>
          <para>Ändern der Formatierung von der aktuellen Markierung.</para>
        </item>
      </list>
      <para>Mit Eigenschaften wie <see cref="P:Microsoft.Office.Interop.Word.Selection.Flags" />, <see cref="P:Microsoft.Office.Interop.Word.Selection.Information(Microsoft.Office.Interop.Word.WdInformation)" />, und <see cref="P:Microsoft.Office.Interop.Word.Selection.Type" /> Informationen über die aktuelle Markierung zurückgeben.</para>
      <para>Gerade, wenn eine Auswahl zu einer Einfügemarke reduziert wird, ist es nicht unbedingt leer. Beispielsweise die <see cref="P:Microsoft.Office.Interop.Word.Selection.Text" /> -Eigenschaft gibt immer noch das Zeichen rechts neben der Einfügemarke; zurück Dieses Zeichen wird auch in der <see cref="T:Microsoft.Office.Interop.Word.Characters" /> -Auflistung der <see cref="T:Microsoft.Office.Interop.Word.Selection" /> Objekt. Aufrufen von Methoden wie jedoch <see cref="M:Microsoft.Office.Interop.Word.Selection.Cut" /> oder <see cref="M:Microsoft.Office.Interop.Word.Selection.Copy" /> von einer reduzierten Markierung verursacht einen Fehler.</para>
      <para>Ist es möglich, dass der Benutzer einen Bereich in einem Dokument auswählen, der nicht zusammenhängenden Text (beispielsweise, wenn Sie die ALT-Taste mit der Maus verwenden). Da das Verhalten einer derartigen Markierung zu unvorhersehbaren sein kann, sollen einen Schritt in Ihrem Code einfügen, die überprüft die <see cref="P:Microsoft.Office.Interop.Word.Selection.Type" /> -Eigenschaft des eine Auswahl, bevor Sie es Operationen ausführen. In ähnlicher Weise können Auswahl, die Tabellenzellen enthalten auch zu unvorhersehbaren führen. Die <see cref="P:Microsoft.Office.Interop.Word.Selection.Information(Microsoft.Office.Interop.Word.WdInformation)" /> -Eigenschaft informiert Sie, ob eine Auswahl in einer Tabelle befindet.</para>
      <para>, Da <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekte nutzen viele derselben Methoden und Eigenschaften als <see cref="T:Microsoft.Office.Interop.Word.Selection" /> -Objekte mit <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekte ist für das Bearbeiten eines Dokuments, wenn es kein Grund so ändern Sie die aktuelle Auswahl physisch vorzuziehen.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="public bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Active" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Active { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob die Markierung im angegebenen Fenster oder Bereich aktiv ist.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn die Auswahl in das angegebene Fenster oder den Bereich aktiv sind, und <b>False,</b> Wenn dem nicht so ist.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word._Application" /> -Objekt, das die Microsoft Word-Anwendung darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoldRun">
      <MemberSignature Language="C#" Value="public void BoldRun ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BoldRun() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.BoldRun" />
      <MemberSignature Language="VB.NET" Value="Public Sub BoldRun ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BoldRun();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(602)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Formatiert die aktuelle Textfolge fett oder entfernt die Fettformatierung.</summary>
        <remarks>
          <para>Wenn die Textfolge sowohl fett als auch nicht fett formatierten Text enthält, mit dieser Methode die gesamte Textfolge fett hinzugefügt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BookmarkID">
      <MemberSignature Language="C#" Value="public int BookmarkID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BookmarkID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.BookmarkID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BookmarkID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BookmarkID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Anzahl der Textmarke, die den Anfang der angegebenen Auswahl oder 0 (null) einschließt, wenn keine entsprechende Textmarke vorhanden ist.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Die Nummer entspricht der Position der Textmarke im Dokument – 1 für die erste Textmarke, 2 für die zweite usw..</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bookmarks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Bookmarks Bookmarks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Bookmarks Bookmarks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Bookmarks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bookmarks As Bookmarks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Bookmarks ^ Bookmarks { Microsoft::Office::Interop::Word::Bookmarks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Bookmarks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Bookmarks" /> -Auflistung, die alle Textmarken in einer Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Borders Borders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Borders" />
      <MemberSignature Language="VB.NET" Value="Public Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Borders ^ Borders { Microsoft::Office::Interop::Word::Borders ^ get(); void set(Microsoft::Office::Interop::Word::Borders ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Borders" /> -Auflistung, die alle Rahmen für das angegebene Objekt darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public float Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Function Calculate () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(172)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Berechnet einen mathematischen Ausdruck innerhalb einer Markierung.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Cells Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Cells Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Cells" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Cells ^ Cells { Microsoft::Office::Interop::Word::Cells ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Cells</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Cells" /> -Auflistung, die die Tabellenzellen in einer Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Characters Characters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Characters Characters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Characters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Characters As Characters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Characters ^ Characters { Microsoft::Office::Interop::Word::Characters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Characters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Characters" /> -Auflistung, die die Zeichen in einer Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildShapeRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ShapeRange ChildShapeRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ShapeRange ChildShapeRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.ChildShapeRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildShapeRange As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ShapeRange ^ ChildShapeRange { Microsoft::Office::Interop::Word::ShapeRange ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ShapeRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> -Objekt, das die untergeordneten Formen einer Markierung darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCharacterAllFormatting">
      <MemberSignature Language="C#" Value="public void ClearCharacterAllFormatting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCharacterAllFormatting() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterAllFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCharacterAllFormatting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCharacterAllFormatting();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
		Entfernt jegliche Zeichenformatierung (Formatierungen, die über Zeichenformatvorlagen angewendet wurden, oder manuell angewendete Formatierungen) aus dem markierten Text.</summary>
        <remarks>
          <para>Diese Methode entfernt alle zeichenformatierung. Wenn entfernte Formatierung mithilfe von formatzeichenvorlagen angewendet werden sollen, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterStyle" /> Methode.  Verwenden Sie zum Entfernen von zeichenformatierungen, die der Benutzer mithilfe von Microsoft Office Word zeichenformatierung Features manuell angewendet hat die <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterDirectFormatting" /> -Methode.</para>
          <para>
            <b>Hinweis</b>: zum Entfernen von absatzformatierungen finden Sie unter der <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphAllFormatting" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphDirectFormatting" />, oder <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphStyle" /> -Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCharacterDirectFormatting">
      <MemberSignature Language="C#" Value="public void ClearCharacterDirectFormatting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCharacterDirectFormatting() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterDirectFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCharacterDirectFormatting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCharacterDirectFormatting();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1033)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt zeichenformatierungen (Formatierungen, die manuell mithilfe der Schaltflächen auf der Multifunktionsleiste oder über Dialogfelder angewendet wurden), aus dem markierten Text.</summary>
        <remarks>
          <para>Diese Methode wird nicht entfernt zeichenformatierungen, die mithilfe einer Zeichenformatvorlage angewendet wurde. Verwenden Sie zum Entfernen von zeichenformatierungen, dass der Benutzer mithilfe von Zeichenformatvorlagen angewendet hat die <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterStyle" /> Methode.  Verwenden Sie zum Entfernen aller zeichenformatierung, unabhängig davon, ob der Benutzer sie Zeichenformatvorlagen mit oder manuell mithilfe der Formatierung Features in Microsoft Office Word angewendet hat die <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterAllFormatting" /> -Methode.</para>
          <para>
            <b>Hinweis</b>: zum Entfernen von absatzformatierungen finden Sie unter der <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphAllFormatting" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphDirectFormatting" />, oder <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphStyle" /> -Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCharacterStyle">
      <MemberSignature Language="C#" Value="public void ClearCharacterStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCharacterStyle() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCharacterStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCharacterStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1032)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
		Entfernt die Zeichenformatierung, die mithilfe von Formatzeichenvorlagen angewendet wurde, aus dem markierten Text.</summary>
        <remarks>
          <para>Diese Methode wird nicht entfernt zeichenformatierungen, die ein Benutzer manuell angewendet wurde. Verwenden, um manuell angewendete Formatierung entfernen, die <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterDirectFormatting" /> Methode.  Entfernt jegliche zeichenformatierung, sowohl Stil und manuelle Formatierung, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterAllFormatting" /> -Methode.</para>
          <para>
            <b>Hinweis</b>: zum Entfernen von absatzformatierungen finden Sie unter der <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphAllFormatting" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphDirectFormatting" />, oder <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphStyle" /> -Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormatting">
      <MemberSignature Language="C#" Value="public void ClearFormatting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearFormatting() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ClearFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearFormatting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearFormatting();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1009)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt Text- und Absatzformatierungen aus einer Markierung.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearParagraphAllFormatting">
      <MemberSignature Language="C#" Value="public void ClearParagraphAllFormatting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearParagraphAllFormatting() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphAllFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearParagraphAllFormatting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearParagraphAllFormatting();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt jegliche Absatzformatierung (Formatierungen, die über Absatzformatvorlagen angewendet wurden, oder manuell angewendete Formatierungen) aus dem markierten Text.</summary>
        <remarks>
          <para>Diese Methode entfernt alle absatzformatierungen im. Wenn Sie entfernen müssen absatzformatierung mithilfe von Absatzformatvorlagen angewendet, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphStyle" /> Methode.  Zum Entfernen von absatzformatierungen, die der Benutzer mithilfe von Microsoft Office Word Absatzformate Features manuell angewendet wurde, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphDirectFormatting" /> -Methode.</para>
          <para>
            <b>Hinweis</b>: zum Entfernen von zeichenformatierungen finden Sie unter der <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterAllFormatting" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterDirectFormatting" />, oder <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterStyle" /> -Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearParagraphDirectFormatting">
      <MemberSignature Language="C#" Value="public void ClearParagraphDirectFormatting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearParagraphDirectFormatting() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphDirectFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearParagraphDirectFormatting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearParagraphDirectFormatting();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1040)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt die absatzformatierung, die manuell angewendet wurde (mithilfe der Schaltflächen auf der Multifunktionsleiste oder über Dialogfelder) aus dem markierten Text.</summary>
        <remarks>
          <para>Diese Methode entfernt nicht die absatzformatierung, die mithilfe einer Absatzformatvorlage angewendet wurde. Zum Entfernen von absatzformatierungen, dass der Benutzer mithilfe von Absatzformatvorlagen angewendet wurde, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphStyle" /> Methode.  Verwenden Sie alle absatzformatierung, sowohl Stil und manuelle Formatierung entfernen die <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphAllFormatting" /> -Methode.</para>
          <para>
            <b>Hinweis</b>: zum Entfernen von zeichenformatierungen finden Sie unter der <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterAllFormatting" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterDirectFormatting" />, oder <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterStyle" /> -Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearParagraphStyle">
      <MemberSignature Language="C#" Value="public void ClearParagraphStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearParagraphStyle() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearParagraphStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearParagraphStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1030)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
		
		Entfernt die Absatzformatierung, die mithilfe von Absatzformatvorlagen angewendet wurde, aus dem markierten Text.</summary>
        <remarks>
          <para>Diese Methode entfernt nicht die absatzformatierung, die ein Benutzer manuell angewendet wurde. Um manuell angewendete absatzformatierung zu entfernen, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphDirectFormatting" /> Methode.  Verwenden Sie alle absatzformatierung, sowohl Stil und manuelle Formatierung entfernen die <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearParagraphAllFormatting" /> -Methode.</para>
          <para>
            <b>Hinweis</b>: zum Entfernen von zeichenformatierungen finden Sie unter der <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterAllFormatting" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterDirectFormatting" />, oder <see cref="M:Microsoft.Office.Interop.Word.Selection.ClearCharacterStyle" /> -Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (ref object Direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Collapse([in]object&amp; Direction) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Collapse(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse (Optional ByRef Direction As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Direction">Optionales- <b>Objekt</b>. Die Richtung, in dem die Auswahl reduziert werden soll. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdCollapseDirection" /> Konstanten: <b>WdCollapseEnd</b> oder <b>WdCollapseStart</b>. Der Standardwert ist <b>WdCollapseStart</b>.</param>
        <summary>Wird eine Auswahl auf die Anfangs- oder Endposition reduziert.</summary>
        <remarks>
          <para>Wenn Sie <b>WdCollapseEnd</b> verwenden, um eine Auswahl zu reduzieren, die auf einen ganzen Absatz verweist, befindet sich die Auswahl hinter der Absatzmarke (am Anfang des nächsten Absatzes). Sie können jedoch verschieben, die Auswahl ein Zeichen zurück, mit der <see cref="M:Microsoft.Office.Interop.Word.Selection.MoveEnd(System.Object@,System.Object@)" /> -Methode, nachdem die Auswahl nicht reduziert ist.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Columns Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Columns Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Columns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Columns ^ Columns { Microsoft::Office::Interop::Word::Columns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Columns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Columns" /> -Auflistung, die alle Tabellenspalten in der Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnSelectMode">
      <MemberSignature Language="C#" Value="public bool ColumnSelectMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColumnSelectMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.ColumnSelectMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnSelectMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColumnSelectMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob die Spaltenauswahlmodus aktiv ist.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn Column Auswahlmodus aktiv sind, und <b>False,</b> Wenn nicht.</para>
          <para>Wenn dieser Modus aktiv ist, die Buchstaben "SP" in der Statusleiste angezeigt angezeigt werden</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As Comments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Comments ^ Comments { Microsoft::Office::Interop::Word::Comments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(56)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(56)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Comments" /> -Auflistung, die alle Kommentare in der angegebenen Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentControls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ContentControls ContentControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ContentControls ContentControls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.ContentControls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentControls As ContentControls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ContentControls ^ ContentControls { Microsoft::Office::Interop::Word::ContentControls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1034)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1034)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ContentControls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.ContentControls" /> -Auflistung, die Inhaltssteuerelemente in einem Bereich darstellt. Schreibgeschützt.</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.ContentControls" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Table ConvertToTable (ref object Separator, ref object NumRows, ref object NumColumns, ref object InitialColumnWidth, ref object Format, ref object ApplyBorders, ref object ApplyShading, ref object ApplyFont, ref object ApplyColor, ref object ApplyHeadingRows, ref object ApplyLastRow, ref object ApplyFirstColumn, ref object ApplyLastColumn, ref object AutoFit, ref object AutoFitBehavior, ref object DefaultTableBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Table ConvertToTable([in]object&amp; Separator, [in]object&amp; NumRows, [in]object&amp; NumColumns, [in]object&amp; InitialColumnWidth, [in]object&amp; Format, [in]object&amp; ApplyBorders, [in]object&amp; ApplyShading, [in]object&amp; ApplyFont, [in]object&amp; ApplyColor, [in]object&amp; ApplyHeadingRows, [in]object&amp; ApplyLastRow, [in]object&amp; ApplyFirstColumn, [in]object&amp; ApplyLastColumn, [in]object&amp; AutoFit, [in]object&amp; AutoFitBehavior, [in]object&amp; DefaultTableBehavior) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ConvertToTable(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToTable (Optional ByRef Separator As Object, Optional ByRef NumRows As Object, Optional ByRef NumColumns As Object, Optional ByRef InitialColumnWidth As Object, Optional ByRef Format As Object, Optional ByRef ApplyBorders As Object, Optional ByRef ApplyShading As Object, Optional ByRef ApplyFont As Object, Optional ByRef ApplyColor As Object, Optional ByRef ApplyHeadingRows As Object, Optional ByRef ApplyLastRow As Object, Optional ByRef ApplyFirstColumn As Object, Optional ByRef ApplyLastColumn As Object, Optional ByRef AutoFit As Object, Optional ByRef AutoFitBehavior As Object, Optional ByRef DefaultTableBehavior As Object) As Table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Table</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumRows" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumColumns" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InitialColumnWidth" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyBorders" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyShading" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyFont" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyColor" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyHeadingRows" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLastRow" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyFirstColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLastColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AutoFit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AutoFitBehavior" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DefaultTableBehavior" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Separator">Optionales- <b>Objekt</b>. Gibt das Zeichen zum Trennen von Text in Zellen verwendet. Kann ein Zeichen oder eine von der <see cref="T:Microsoft.Office.Interop.Word.WdTableFieldSeparator" /> Konstanten. Wenn dieses Argument ausgelassen wird, wird der Wert der <b>DefaultTableSeparator</b> -Eigenschaft verwendet.</param>
        <param name="NumRows">Optionales- <b>Objekt</b>. Die Anzahl der Zeilen in der Tabelle. Wenn dieses Argument ausgelassen wird, wird Word die Anzahl der Zeilen, basierend auf dem Inhalt der Markierung.</param>
        <param name="NumColumns">Optionales- <b>Objekt</b>. Die Anzahl der Spalten in der Tabelle. Wenn dieses Argument ausgelassen wird, wird Word die Anzahl der Spalten, basierend auf dem Inhalt der Markierung.</param>
        <param name="InitialColumnWidth">Optionales- <b>Objekt</b>. Die ursprüngliche Breite jeder Spalte, die in Punkt. Wenn dieses Argument ausgelassen wird, wird von Word berechnet und passt die Breite der Spalten, sodass die Tabelle von einem Seitenrand zum nächsten erstreckt.</param>
        <param name="Format">Optionales- <b>Objekt</b>. Gibt eine der vordefinierten Formate im Dialogfeld Tabelle AutoFormat (Menü Tabelle) aufgeführt. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdTableFormat" /> Konstanten.</param>
        <param name="ApplyBorders">Optionales- <b>Objekt</b>. <b>True</b>, um die Eigenschaften für den Rahmen des angegebenen Formats zu übernehmen.</param>
        <param name="ApplyShading">Optionales- <b>Objekt</b>. <b>True</b>, um die Eigenschaften für die Schattierung des angegebenen Formats zu übernehmen.</param>
        <param name="ApplyFont">Optionales- <b>Objekt</b>. <b>True</b>, um die Eigenschaften für die Schriftart des angegebenen Formats zu übernehmen.</param>
        <param name="ApplyColor">Optionales- <b>Objekt</b>. <b>True</b>, um die Eigenschaften für die Farbe des angegebenen Formats zu übernehmen.</param>
        <param name="ApplyHeadingRows">Optionales- <b>Objekt</b>. <b>True</b>, um die Eigenschaften für die Kopfzeile des angegebenen Formats zu übernehmen.</param>
        <param name="ApplyLastRow">Optionales- <b>Objekt</b>. <b>True</b>, um die Eigenschaften für die letzte Zeile des angegebenen Formats zu übernehmen.</param>
        <param name="ApplyFirstColumn">Optionales- <b>Objekt</b>. <b>True</b>, um die Eigenschaften für die erste Spalte des angegebenen Formats zu übernehmen.</param>
        <param name="ApplyLastColumn">Optionales- <b>Objekt</b>. <b>True</b>, um die Eigenschaften für die letzte Spalte des angegebenen Formats zu übernehmen.</param>
        <param name="AutoFit">Optionales- <b>Objekt</b>. <b>True</b>, wenn die Breite der Tabellenspalten so weit wie möglich verkleinert werden soll, ohne die Art zu ändern, wie der Text in den Zellen umbrochen wird.</param>
        <param name="AutoFitBehavior">Optionales- <b>Objekt</b>. Legt die AutoAnpassen-Regeln für die Größe einer Tabelle wie Word fest. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdAutoFitBehavior" /> Konstanten. Wenn <paramref name="DefaultTableBehavior" /><b>wdWord8TableBehavior</b>, ist dieses Argument wird ignoriert.</param>
        <param name="DefaultTableBehavior">Optionales- <b>Objekt</b>. Festlegen eines Werts, das angibt, ob Microsoft Word automatisch, Zellen in einer Tabelle ändert an den Inhalt (AutoAnpassen) an. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdDefaultTableBehavior" /> Konstanten.</param>
        <summary>Konvertiert Text in einer Auswahl in einer Tabelle.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToTableOld">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Table ConvertToTableOld (ref object Separator, ref object NumRows, ref object NumColumns, ref object InitialColumnWidth, ref object Format, ref object ApplyBorders, ref object ApplyShading, ref object ApplyFont, ref object ApplyColor, ref object ApplyHeadingRows, ref object ApplyLastRow, ref object ApplyFirstColumn, ref object ApplyLastColumn, ref object AutoFit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Table ConvertToTableOld([in]object&amp; Separator, [in]object&amp; NumRows, [in]object&amp; NumColumns, [in]object&amp; InitialColumnWidth, [in]object&amp; Format, [in]object&amp; ApplyBorders, [in]object&amp; ApplyShading, [in]object&amp; ApplyFont, [in]object&amp; ApplyColor, [in]object&amp; ApplyHeadingRows, [in]object&amp; ApplyLastRow, [in]object&amp; ApplyFirstColumn, [in]object&amp; ApplyLastColumn, [in]object&amp; AutoFit) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ConvertToTableOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToTableOld (Optional ByRef Separator As Object, Optional ByRef NumRows As Object, Optional ByRef NumColumns As Object, Optional ByRef InitialColumnWidth As Object, Optional ByRef Format As Object, Optional ByRef ApplyBorders As Object, Optional ByRef ApplyShading As Object, Optional ByRef ApplyFont As Object, Optional ByRef ApplyColor As Object, Optional ByRef ApplyHeadingRows As Object, Optional ByRef ApplyLastRow As Object, Optional ByRef ApplyFirstColumn As Object, Optional ByRef ApplyLastColumn As Object, Optional ByRef AutoFit As Object) As Table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Table</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumRows" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumColumns" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InitialColumnWidth" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyBorders" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyShading" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyFont" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyColor" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyHeadingRows" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLastRow" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyFirstColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLastColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AutoFit" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Separator">To be added.</param>
        <param name="NumRows">To be added.</param>
        <param name="NumColumns">To be added.</param>
        <param name="InitialColumnWidth">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="ApplyBorders">To be added.</param>
        <param name="ApplyShading">To be added.</param>
        <param name="ApplyFont">To be added.</param>
        <param name="ApplyColor">To be added.</param>
        <param name="ApplyHeadingRows">To be added.</param>
        <param name="ApplyLastRow">To be added.</param>
        <param name="ApplyFirstColumn">To be added.</param>
        <param name="ApplyLastColumn">To be added.</param>
        <param name="AutoFit">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(120)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kopiert das angegebene Objekt in die Zwischenablage.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyAsPicture">
      <MemberSignature Language="C#" Value="public void CopyAsPicture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyAsPicture() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.CopyAsPicture" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyAsPicture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyAsPicture();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(167)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kopiert das angegebene Objekt in die Zwischenablage.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFormat">
      <MemberSignature Language="C#" Value="public void CopyFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFormat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.CopyFormat" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFormat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFormat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(509)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kopiert die Zeichenformatierung des ersten Zeichens im markierten Text.</summary>
        <remarks>
          <para>Wenn eine Absatzmarke ausgewählt ist, Microsoft Word kopiert Absatzformat an zeichenformatierung außerdem.</para>
          <para>Können Sie anwenden, die kopierte Formatierung auf eine andere Auswahl mithilfe der <see cref="M:Microsoft.Office.Interop.Word.Selection.PasteFormat" /> -Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAutoTextEntry">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.AutoTextEntry CreateAutoTextEntry (string Name, string StyleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.AutoTextEntry CreateAutoTextEntry([in]string Name, [in]string StyleName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.CreateAutoTextEntry(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAutoTextEntry (Name As String, StyleName As String) As AutoTextEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::AutoTextEntry ^ CreateAutoTextEntry(System::String ^ Name, System::String ^ StyleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(534)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.AutoTextEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="StyleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name">
          <b>String</b> erforderlich. Der vom Benutzer einzugebende Text zum Aufrufen des neuen AutoText-Eintrags.</param>
        <param name="StyleName">
          <b>String</b> erforderlich. Die Kategorie, in der im Menü AutoText der neue AutoText-Eintrag aufgelistet wird.</param>
        <summary>Fügt ein neues <see cref="T:Microsoft.Office.Interop.Word.AutoTextEntry" /> -Objekt wird an die <see cref="T:Microsoft.Office.Interop.Word.AutoTextEntries" /> Auflistung auf Grundlage der aktuellen Auswahl.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTextbox">
      <MemberSignature Language="C#" Value="public void CreateTextbox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateTextbox() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.CreateTextbox" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateTextbox ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateTextbox();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(523)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zieht ein Textfeld mit Standardgröße um die Markierung.</summary>
        <remarks>
          <para>, Wenn die Auswahl um eine Einfügemarke handelt, diese Methode ändert den Zeiger in ein Fadenkreuz, sodass der Benutzer das Textfeld zeichnen kann.</para>
          <para>Mit dieser Methode entspricht dem Klicken auf die Schaltfläche Textfeld auf der Symbolleiste Zeichnen. Ein Textfeld ist ein Rechteck mit einer zugeordneten Textrahmen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das angegebene Objekt erstellt wurde.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Wenn das angegebene Objekt in Microsoft Word erstellt wurde, gibt diese Eigenschaft die Hexadezimalzahl 4D535744 zurück, die die Zeichenfolge "MSWD" darstellt. Dieser Wert kann auch durch die <b>WdCreatorCode</b>-Konstante dargestellt werden.</para>
          <para>Die <b>Creator</b> -Eigenschaft wurde in erster Linie auf dem Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Beispielsweise hat Microsoft Word den Erstellercode MSWD. Weitere Informationen zu dieser Eigenschaft finden Sie in der Sprachreferenzhilfe Lieferumfang von Microsoft Office Macintosh Edition.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(119)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt das angegebene Objekt aus dem Dokument und fügt es in die Zwischenablage ein.</summary>
        <remarks>
          <para>Die Inhalte des Objekts in die Zwischenablage ausgeschnitten werden, aber das reduzierte Objekt verbleibt im Dokument.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Delete([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Delete(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionales- <b>Objekt</b>. Die Einheit, um die der reduzierte Bereich oder die Auswahl gelöscht werden soll. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> Konstanten: <b>WdCharacter</b> (Standardwert) oder <b>WdWord</b>.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die Anzahl der Einheiten gelöscht werden soll. Reduzieren Sie die Markierung und eine positive Zahl, um Einheiten nach der Markierung zu löschen. Zum Löschen von Einheiten vor der Markierung reduzieren Sie die Markierung, und verwenden Sie eine negative Zahl.</param>
        <summary>Löscht die angegebene Anzahl von Zeichen oder Wörtern.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt <b>einen Ganzzahlwert, der die Anzahl der gelöschten Elemente angibt</b> , oder sie gibt 0 (null) zurück, wenn der Löschvorgang nicht erfolgreich war.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectLanguage">
      <MemberSignature Language="C#" Value="public void DetectLanguage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetectLanguage() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.DetectLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Sub DetectLanguage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DetectLanguage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(535)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Analysiert den angegebenen Text, um festzustellen, in welcher Sprache er geschrieben ist.</summary>
        <remarks>
          <para>Die Ergebnisse der <b>DetectLanguage</b> -Methode werden gespeichert, der <see cref="P:Microsoft.Office.Interop.Word.Selection.LanguageID" /> -Eigenschaft Zeichen für Zeichen. Um die <b>LanguageID</b> -Eigenschaft zu lesen, müssen Sie zuerst eine Auswahl von Text angeben.</para>
          <para>, Wenn die <b>DetectLanguage</b> -Methode bereits auf den angegebenen Text angewendet wurde die <see cref="P:Microsoft.Office.Interop.Word.Selection.LanguageDetected" /> -Eigenschaft auf <b>True</b>festgelegt ist. Um die Sprache des angegebenen Texts erneut auszuwerten, müssen Sie zunächst die <b>LanguageDetected</b> -Eigenschaft auf <b>False</b>festlegen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Document Document" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As Document" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Document ^ Document { Microsoft::Office::Interop::Word::Document ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1003)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1003)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Document" /> -Objekt der angegebenen Auswahl zugeordnet.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Editors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Editors Editors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Editors Editors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Editors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Editors As Editors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Editors ^ Editors { Microsoft::Office::Interop::Word::Editors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Editors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Editors" /> -Objekt, das alle Benutzer darstellt, die zum Bearbeiten einer Auswahl eines Dokuments berechtigt sind.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public int End { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 End" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.End" />
      <MemberSignature Language="VB.NET" Value="Public Property End As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int End { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt zurück oder legt die Position des letzten Zeichens einer Auswahl.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Wenn diese Eigenschaft auf einen Wert kleiner als festgelegt ist die <see cref="P:Microsoft.Office.Interop.Word.Selection.Start" /> Eigenschaft, wird die <b>Start</b> -Eigenschaft auf denselben Wert fest (d. h., <b>Start</b> und <b>End</b> -Eigenschaft sind gleich) festgelegt.</para> Die <b>Auswahl</b>, 
          <para><see cref="T:Microsoft.Office.Interop.Word.Range" />, und <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> Objekte alle eine Anfangsposition und eine Endposition haben. Die Endposition ist der Punkt weitesten vom Anfang des Textabschnitts.</para><para>Gibt diese Eigenschaft die Endzeichenposition relativ zum Anfang des Textabschnitts. Der Hauptartikel (<b>WdMainTextStory</b>) beginnt mit der Zeichenposition 0 (null). Sie können die Größe einer Auswahl, einem Bereich oder einer Textmarke durch Festlegen dieser Eigenschaft ändern.</para><para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndKey">
      <MemberSignature Language="C#" Value="public int EndKey (ref object Unit, ref object Extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndKey([in]object&amp; Unit, [in]object&amp; Extend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.EndKey(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndKey (Optional ByRef Unit As Object, Optional ByRef Extend As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Extend" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionales- <b>Objekt</b>. Die Einheit, um die die Auswahl verschoben oder erweitert werden soll. <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />.</param>
        <param name="Extend">Optionales- <b>Objekt</b>. Die Einheit, um die die Auswahl verschoben oder erweitert werden soll. <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />.</param>
        <summary>Verschiebt oder erweitert die Markierung bis zum Ende der angegebenen Einheit.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt eine ganze Zahl, die die Anzahl der Zeichen angibt, die Auswahl oder das aktive Ende tatsächlich verschoben wurde, oder sie gibt 0 (null) zurück, wenn die Verschiebung nicht erfolgreich war.</para>
          <para>Diese Methode entspricht der Funktionalität der Ende-Taste.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndnoteOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.EndnoteOptions EndnoteOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.EndnoteOptions EndnoteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.EndnoteOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndnoteOptions As EndnoteOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::EndnoteOptions ^ EndnoteOptions { Microsoft::Office::Interop::Word::EndnoteOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1025)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1025)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.EndnoteOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.EndnoteOptions" /> -Objekt, das die Endnoten in einer Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endnotes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Endnotes Endnotes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Endnotes Endnotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Endnotes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endnotes As Endnotes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Endnotes ^ Endnotes { Microsoft::Office::Interop::Word::Endnotes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Endnotes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Endnotes" /> -Auflistung, die alle Endnoten in einer Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOf">
      <MemberSignature Language="C#" Value="public int EndOf (ref object Unit, ref object Extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndOf([in]object&amp; Unit, [in]object&amp; Extend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.EndOf(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndOf (Optional ByRef Unit As Object, Optional ByRef Extend As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Extend" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionales- <b>Objekt</b>. Die Einheit, um die die Endzeichenposition verschoben wird. <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />.</param>
        <param name="Extend">Optionales- <b>Objekt</b>. <see cref="T:Microsoft.Office.Interop.Word.WdMovementType" />.</param>
        <summary>Verschiebt oder erweitert die Position des letzten Zeichens einer Auswahl an dem Ende der nächsten angegebenen Texteinheit.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt einen Wert, der angibt, die Anzahl der Zeichenpositionen die Markierung verschoben oder erweitert wurde (Verschiebung erfolgt im Dokument vorwärts).</para>
          <para>Wenn die die Start- und Enddatum Endposition der Auswahl bereits am Ende der angegebenen Einheit sind, diese Methode nicht verschieben oder Erweitern der Auswahl bis.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnhMetaFileBits">
      <MemberSignature Language="C#" Value="public object EnhMetaFileBits { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EnhMetaFileBits" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.EnhMetaFileBits" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnhMetaFileBits As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EnhMetaFileBits { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <b>Objekt</b> , das eine bilddarstellung der Darstellung einer Auswahl von Text darstellt.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt ein Array von Bytes, die mit der Microsoft Windows 32 Anwendungsprogrammierschnittstelle innerhalb der Entwicklungsumgebung verwendet werden kann.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeKey">
      <MemberSignature Language="C#" Value="public void EscapeKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EscapeKey() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.EscapeKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub EscapeKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EscapeKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(506)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht einen Modus ab, z. B. den Erweiterungsmodus oder die Spaltenmarkierung (entspricht dem Drücken der Taste ESC).</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public int Expand (ref object Unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Expand([in]object&amp; Unit) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Expand(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Expand (Optional ByRef Unit As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionales- <b>Objekt</b>. Die Einheit, um die Auswahl zu erweitern. <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />.</param>
        <summary>Die angegebene Auswahl erweitert.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt die Anzahl der Zeichen, die der Auswahl hinzugefügt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (string OutputFileName, Microsoft.Office.Interop.Word.WdExportFormat ExportFormat, bool OpenAfterExport = false, Microsoft.Office.Interop.Word.WdExportOptimizeFor OptimizeFor = Microsoft.Office.Interop.Word.WdExportOptimizeFor.wdExportOptimizeForPrint, bool ExportCurrentPage = false, Microsoft.Office.Interop.Word.WdExportItem Item = Microsoft.Office.Interop.Word.WdExportItem.wdExportDocumentContent, bool IncludeDocProps = false, bool KeepIRM = false, Microsoft.Office.Interop.Word.WdExportCreateBookmarks CreateBookmarks = Microsoft.Office.Interop.Word.WdExportCreateBookmarks.wdExportCreateNoBookmarks, bool DocStructureTags = false, bool BitmapMissingFonts = false, bool UseISO19005_1 = false, ref object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]string OutputFileName, [in]valuetype Microsoft.Office.Interop.Word.WdExportFormat ExportFormat, [in]bool OpenAfterExport, [in]valuetype Microsoft.Office.Interop.Word.WdExportOptimizeFor OptimizeFor, [in]bool ExportCurrentPage, [in]valuetype Microsoft.Office.Interop.Word.WdExportItem Item, [in]bool IncludeDocProps, [in]bool KeepIRM, [in]valuetype Microsoft.Office.Interop.Word.WdExportCreateBookmarks CreateBookmarks, [in]bool DocStructureTags, [in]bool BitmapMissingFonts, [in]bool UseISO19005_1, [in]object&amp; FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ExportAsFixedFormat(System.String,Microsoft.Office.Interop.Word.WdExportFormat,System.Boolean,Microsoft.Office.Interop.Word.WdExportOptimizeFor,System.Boolean,Microsoft.Office.Interop.Word.WdExportItem,System.Boolean,System.Boolean,Microsoft.Office.Interop.Word.WdExportCreateBookmarks,System.Boolean,System.Boolean,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (OutputFileName As String, ExportFormat As WdExportFormat, Optional OpenAfterExport As Boolean = false, Optional OptimizeFor As WdExportOptimizeFor = Microsoft.Office.Interop.Word.WdExportOptimizeFor.wdExportOptimizeForPrint, Optional ExportCurrentPage As Boolean = false, Optional Item As WdExportItem = Microsoft.Office.Interop.Word.WdExportItem.wdExportDocumentContent, Optional IncludeDocProps As Boolean = false, Optional KeepIRM As Boolean = false, Optional CreateBookmarks As WdExportCreateBookmarks = Microsoft.Office.Interop.Word.WdExportCreateBookmarks.wdExportCreateNoBookmarks, Optional DocStructureTags As Boolean = false, Optional BitmapMissingFonts As Boolean = false, Optional UseISO19005_1 As Boolean = false, Optional ByRef FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1036)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OutputFileName" Type="System.String" />
        <Parameter Name="ExportFormat" Type="Microsoft.Office.Interop.Word.WdExportFormat" />
        <Parameter Name="OpenAfterExport" Type="System.Boolean" />
        <Parameter Name="OptimizeFor" Type="Microsoft.Office.Interop.Word.WdExportOptimizeFor" />
        <Parameter Name="ExportCurrentPage" Type="System.Boolean" />
        <Parameter Name="Item" Type="Microsoft.Office.Interop.Word.WdExportItem" />
        <Parameter Name="IncludeDocProps" Type="System.Boolean" />
        <Parameter Name="KeepIRM" Type="System.Boolean" />
        <Parameter Name="CreateBookmarks" Type="Microsoft.Office.Interop.Word.WdExportCreateBookmarks" />
        <Parameter Name="DocStructureTags" Type="System.Boolean" />
        <Parameter Name="BitmapMissingFonts" Type="System.Boolean" />
        <Parameter Name="UseISO19005_1" Type="System.Boolean" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="OutputFileName">Der Pfad und der Dateiname der neuen PDF- oder XPS-Datei.</param>
        <param name="ExportFormat">Gibt das Format PDF oder das Format XPS an.</param>
        <param name="OpenAfterExport">Öffnet die neue Datei nach dem Exportieren des Inhalts.</param>
        <param name="OptimizeFor">Gibt an, ob eine Optimierung für die Anzeige auf dem Bildschirm und zum Drucken erfolgt.</param>
        <param name="ExportCurrentPage">Gibt an, ob die aktuelle Seite exportiert wird. Bei <b>True</b> wird die gesamte Seite exportiert. Bei <b>False</b> wird lediglich die aktuelle Markierung exportiert.</param>
        <param name="Item">Gibt an, ob nur Text oder auch Text mit Markup exportiert wird.</param>
        <param name="IncludeDocProps">Gibt an, ob Dokumenteigenschaften in die neu exportierte Datei integriert werden.</param>
        <param name="KeepIRM">Gibt an, ob IRM-Berechtigungen in ein XPS-Dokument kopiert, wenn das Quelldokument IRM-Schutz verfügt. Standardwert ist <b>True</b>.</param>
        <param name="CreateBookmarks">Gibt an, ob Textmarken exportiert werden, und gibt den Typ der zu exportierenden Textmarken an.</param>
        <param name="DocStructureTags">Gibt an, ob zusätzliche Daten zur Unterstützung der Bildschirmsprachausgabe, z. B. Informationen über den Fluss und die logische Organisation des Inhalts, einbezogen werden sollen. Der Standardwert ist  <b>True</b>.</param>
        <param name="BitmapMissingFonts">Gibt an, ob eine Bitmap des Texts einzufügen. Legen Sie diesen Parameter auf <b>true fest,</b> Wenn die Schriftartlizenzen eine Schriftart, die in der PDF-Datei eingebettet werden nicht zulassen. Wenn <b>False</b>, wird die Schriftart verwiesen, und der Zeichnungsanzeige Computer eine entsprechende Schriftart ersetzt, wenn die erstellter nicht verfügbar ist. Standardwert ist <b>True</b>.</param>
        <param name="UseISO19005_1">Gibt an, ob die Verwendung von PDF auf die PDF-Teilmenge beschränken als ISO 19005-1 standardisiert. Wenn <b>True</b>, die daraus resultierenden Dateien sind eigenständig zuverlässiger, aber größer oder werden weitere visuelle Artefakte aufgrund der Einschränkungen des Formats anzeigen. Standardwert ist <b>False</b>.</param>
        <param name="FixedFormatExtClassPtr">Gibt einen Zeiger auf ein Add-in, das Anrufe an eine alternative Implementierung von Code ermöglicht. Die alternative Implementierung von Code interpretiert die EMF und EMF + Seite Beschreibungen, die von Clientanwendungen so tätigen einen eigenen PDF oder XPS generiert werden. Weitere Informationen finden Sie unter "<a href="bd5ab634-71c4-4d29-a264-05969eded844">Erweitern von Office (2007) Fixed-Format Export Feature</a></param>
        <summary>Speichert die aktuelle Auswahl als PDF oder XPS-Format.
.</summary>
        <remarks>
          <para>Sie können nur nach der Installation eines Add-Ins als PDF- oder XPS-Datei aus einem 2007 Microsoft Office System-Programm speichern.  Das Add-in kann aus dem <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=4D951911-3E7E-4AE6-B059-A2E79ED87041&amp;displaylang=enOnline">Microsoft Download Center</a> heruntergeladen werden</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extend">
      <MemberSignature Language="C#" Value="public void Extend (ref object Character);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Extend([in]object&amp; Character) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Extend(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Extend (Optional ByRef Character As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Character" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Character">Optionales- <b>Objekt</b>. Das Zeichen, über den die Auswahl erweitert wird. Dieses Argument wird Groß-und Kleinschreibung berücksichtigt und muss es sich um eine <b>Zeichenfolge</b> oder ein Fehler auftritt. Auch wenn der Wert dieses Arguments länger als ein einzelnes Zeichen ist, ignoriert Microsoft Word den Befehl vollständig.</param>
        <summary>Schaltet Erweiterungsmodus oder erweitert die Markierung auf der nächsten größeren Einheit des Texts, wenn der Erweiterungsmodus bereits aktiviert ist.</summary>
        <remarks>
          <para>Die <b>Extend</b> -Methode legt die <see cref="P:Microsoft.Office.Interop.Word.Selection.ExtendMode" /> -Eigenschaft auf <b>True</b>,</para>
          <para>der Verlauf der ausgewählten Texteinheiten lautet wie folgt: Word, Satz, Absatz, Abschnitt, Gesamtes Dokument. Wenn <paramref name="Character" /> angegeben ist, erweitert die Markierung bis zum nächsten Vorkommen des angegebenen Zeichens. Die Auswahl wird durch Verschieben das aktive Ende der Markierung erweitert.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendMode">
      <MemberSignature Language="C#" Value="public bool ExtendMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtendMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.ExtendMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExtendMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob der Erweiterungsmodus aktiviert ist.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn Erweiterungsmodus aktiv sind, und <b>False,</b> Wenn dem nicht so ist.</para> Beim Erweitern 
          <para>Modus aktiv ist, ist die <paramref name="Extend" /> Argument der folgenden Methoden in der Standardeinstellung ist <b>True</b> : <see cref="M:Microsoft.Office.Interop.Word.Selection.EndKey(System.Object@,System.Object@)" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.HomeKey(System.Object@,System.Object@)" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.MoveDown(System.Object@,System.Object@,System.Object@)" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.MoveLeft(System.Object@,System.Object@,System.Object@)" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.MoveRight(System.Object@,System.Object@,System.Object@)" />, und <see cref="M:Microsoft.Office.Interop.Word.Selection.MoveUp(System.Object@,System.Object@,System.Object@)" />. Darüber hinaus die Buchstaben "ERW" angezeigt werden, in der Statusleiste angezeigt</para><para>Diese Eigenschaft kann nur während der Laufzeit festgelegt werden. Die <paramref name="Extend" /> Argumente von den <see cref="M:Microsoft.Office.Interop.Word.Selection.EndOf(System.Object@,System.Object@)" /> und <see cref="M:Microsoft.Office.Interop.Word.Selection.StartOf(System.Object@,System.Object@)" /> Methoden werden von dieser Eigenschaft nicht betroffen.</para><para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Fields Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Fields Fields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Fields" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fields As Fields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Fields ^ Fields { Microsoft::Office::Interop::Word::Fields ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Fields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein schreibgeschütztes <see cref="T:Microsoft.Office.Interop.Word.Fields" /> -Auflistung, die alle Felder in der Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Find Find { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Find Find" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Find" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Find As Find" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Find ^ Find { Microsoft::Office::Interop::Word::Find ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Find</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Find" /> -Objekt, das die Kriterien für einen Suchvorgang enthält.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Wenn der Suchvorgang erfolgreich ist, wird die Markierung geändert.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FitTextWidth">
      <MemberSignature Language="C#" Value="public float FitTextWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 FitTextWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.FitTextWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property FitTextWidth As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float FitTextWidth { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1008)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1008)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1008)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder festlegen die Breite (in der aktuellen Maßeinheit) in der Microsoft Word den Text in der aktuellen Auswahl anpasst.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdSelectionFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdSelectionFlags Flags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As WdSelectionFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdSelectionFlags Flags { Microsoft::Office::Interop::Word::WdSelectionFlags get(); void set(Microsoft::Office::Interop::Word::WdSelectionFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdSelectionFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder Festlegen der Eigenschaften der Auswahl.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Der Rückgabewert der <b>Flags</b> -Eigenschaft ist die Summe der <b>WdSelectionFlags</b> -Konstanten, die für die Auswahl gelten.</para>
          <para>Festlegen der Flags-Eigenschaft auf <b>WdSelAtEOL</b> das Ende der Markierung wird aktivieren.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Font ^ Font { Microsoft::Office::Interop::Word::Font ^ get(); void set(Microsoft::Office::Interop::Word::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder Festlegen einer <see cref="T:Microsoft.Office.Interop.Word.Font" /> -Objekt, das die zeichenformatierung des angegebenen Objekts darstellt.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Geben Sie zum Festlegen dieser Eigenschaft einen Ausdruck, der ein <b>Font</b> -Objekt zurückgibt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FootnoteOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.FootnoteOptions FootnoteOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.FootnoteOptions FootnoteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.FootnoteOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FootnoteOptions As FootnoteOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::FootnoteOptions ^ FootnoteOptions { Microsoft::Office::Interop::Word::FootnoteOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.FootnoteOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <see cref="T:Microsoft.Office.Interop.Word.FootnoteOptions" /> Objekt, das die Fußnoten in einer Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Footnotes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Footnotes Footnotes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Footnotes Footnotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Footnotes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Footnotes As Footnotes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Footnotes ^ Footnotes { Microsoft::Office::Interop::Word::Footnotes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Footnotes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Footnotes" /> -Auflistung, die alle Fußnoten in einer Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattedText">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range FormattedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range FormattedText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.FormattedText" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattedText As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Range ^ FormattedText { Microsoft::Office::Interop::Word::Range ^ get(); void set(Microsoft::Office::Interop::Word::Range ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder Festlegen einer <see cref="T:Microsoft.Office.Interop.Word.Range" /> -Objekt, das den formatierten Text in der angegebenen Auswahl enthält.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt ein <b>Range</b> -Objekt mit dem zeichenformatierung und Text aus dem angegebenen Bereich oder einer Auswahl. Absatzformatierung in das <b>Range</b> -Objekt enthalten ist, befindet sich in dem Bereich oder einer Auswahl eine Absatzmarke.</para>
          <para>Beim Festlegen dieser Eigenschaft wird der Text im Bereich wird durch formatierten Text ersetzt. Wenn Sie nicht den vorhandenen Text ersetzen möchten, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Selection.Collapse(System.Object@)" /> Methode, bevor Sie die Verwendung dieser Eigenschaft.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormFields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.FormFields FormFields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.FormFields FormFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.FormFields" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormFields As FormFields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::FormFields ^ FormFields { Microsoft::Office::Interop::Word::FormFields ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(65)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.FormFields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.FormFields" /> -Auflistung, die alle Formularfelder in der Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Frames Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Frames Frames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As Frames" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Frames ^ Frames { Microsoft::Office::Interop::Word::Frames ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(66)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(66)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Frames</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Frames" /> -Auflistung, die alle Rahmen in einer Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoTo (ref object What, ref object Which, ref object Count, ref object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoTo([in]object&amp; What, [in]object&amp; Which, [in]object&amp; Count, [in]object&amp; Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.GoTo(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoTo (Optional ByRef What As Object, Optional ByRef Which As Object, Optional ByRef Count As Object, Optional ByRef Name As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(173)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Which" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Name" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="What">Optionales- <b>Objekt</b>. Die Art des Elements, dem die Auswahl verschoben wird. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" /> Konstanten.</param>
        <param name="Which">Optionales- <b>Objekt</b>. Das Element, zu dem die Auswahl verschoben wird. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdGoToDirection" /> Konstanten.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die Nummer des Elements im Dokument. Der Standardwert ist 1. nur positive Werte gültig sind. Um ein Element anzugeben, das Range- oder Selection vorangestellt ist, verwenden Sie <b>WdGoToPrevious</b> als die <paramref name="Which" /> Argument, und geben Sie eine <paramref name="Count" /> Wert.</param>
        <param name="Name">Optionales- <b>Objekt</b>. Wenn die <paramref name="What" /> -Argument ist <b>entweder WdGoToBookmark</b>, <b>WdGoToComment</b>, <b>WdGoToField</b>oder <b>WdGoToObject</b>, gibt dieses Argument einen Namen.</param>
        <summary>Verschiebt die Einfügemarke zu der Zeichenposition unmittelbar vor dem angegebenen Element.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Wenn Sie die <b>GoTo</b> -Methode mit den <b>Konstanten WdGoToGrammaticalError</b>, <b>WdGoToProofreadingError</b>oder <b>WdGoToSpellingError</b> -Konstante verwenden die <see cref="T:Microsoft.Office.Interop.Word.Range" /> zurückgegeben wird, enthält alle Grammatikfehlertext oder Rechtschreibfehlertext.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToEditableRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToEditableRange (ref object EditorID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToEditableRange([in]object&amp; EditorID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.GoToEditableRange(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoToEditableRange (Optional ByRef EditorID As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EditorID" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="EditorID">Optionales- <b>Objekt</b>. Kann eine <b>Zeichenfolge</b> , die E-mail-Adresse des Benutzers (sofern in derselben Domäne), eine E-mail-Adresse oder einem <see cref="T:Microsoft.Office.Interop.Word.WdEditorType" /> -Konstante, die eine Gruppe von Benutzern darstellt. Wenn Length angegeben, wählt alle Bereiche, die für die alle Benutzer Berechtigungen zum Bearbeiten von verfügen.</param>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> -Objekt, das einen Bereich eines Dokuments darstellt, durch den angegebenen Benutzer oder die Gruppe von Benutzern geändert werden können.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Sie können auch die <see cref="P:Microsoft.Office.Interop.Word.Editor.NextRange" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Word.Editor" /> -Objekt, das den nächsten Bereich zurückzugeben, für den der Benutzer über Berechtigungen zum Ändern verfügt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToNext (Microsoft.Office.Interop.Word.WdGoToItem What);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToNext([in]valuetype Microsoft.Office.Interop.Word.WdGoToItem What) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.GoToNext(Microsoft.Office.Interop.Word.WdGoToItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoToNext (What As WdGoToItem) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::Range ^ GoToNext(Microsoft::Office::Interop::Word::WdGoToItem What);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(174)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="Microsoft.Office.Interop.Word.WdGoToItem" />
      </Parameters>
      <Docs>
        <param name="What">Erforderliche <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" />.</param>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> -Objekt, das auf die Startposition des nächsten Elements oder vom angegebenen Speicherort verweist die <paramref name="What" /> Argument.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>GoToNext</b> -Methode verschiebt die Markierung zum angegebenen Element (außer für die Konstanten <b>WdGoToGrammaticalError</b>, <b>WdGoToProofreadingError</b>und <b>WdGoToSpellingError</b> ).</para>
          <para>Wenn Sie diese Methode mit den <b>Konstanten WdGoToGrammaticalError</b>, <b>WdGoToProofreadingError</b>oder <b>WdGoToSpellingError</b> -Konstante verwenden, enthält das zurückgegebene <b>Range</b> -Objekt Grammatikfehlertext oder Rechtschreibfehlertext.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToPrevious (Microsoft.Office.Interop.Word.WdGoToItem What);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToPrevious([in]valuetype Microsoft.Office.Interop.Word.WdGoToItem What) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.GoToPrevious(Microsoft.Office.Interop.Word.WdGoToItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoToPrevious (What As WdGoToItem) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::Range ^ GoToPrevious(Microsoft::Office::Interop::Word::WdGoToItem What);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(175)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="Microsoft.Office.Interop.Word.WdGoToItem" />
      </Parameters>
      <Docs>
        <param name="What">Das Element, das den angegebenen Bereich oder einer Auswahl ist in verschoben werden soll. <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" />.</param>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> -Objekt, das auf die Startposition des vorherigen Elements oder einer angegebenen Position verweist.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>GoToPrevious</b> -Methode verschiebt die Auswahl zum angegebenen Element.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildShapeRange">
      <MemberSignature Language="C#" Value="public bool HasChildShapeRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildShapeRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.HasChildShapeRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildShapeRange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildShapeRange { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1022)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1022)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob die Auswahl untergeordneten Formen enthält.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn die Auswahl untergeordneten Formen und <b>False,</b> Wenn nicht enthält.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderFooter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.HeaderFooter HeaderFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.HeaderFooter HeaderFooter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.HeaderFooter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderFooter As HeaderFooter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::HeaderFooter ^ HeaderFooter { Microsoft::Office::Interop::Word::HeaderFooter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.HeaderFooter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.HeaderFooter" /> -Objekt für die angegebene Auswahl.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Ein Fehler tritt auf, wenn bei der Auswahl befinden sich innerhalb einer Kopf- oder Fußzeile nicht.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HomeKey">
      <MemberSignature Language="C#" Value="public int HomeKey (ref object Unit, ref object Extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 HomeKey([in]object&amp; Unit, [in]object&amp; Extend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.HomeKey(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function HomeKey (Optional ByRef Unit As Object, Optional ByRef Extend As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Extend" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionales- <b>Objekt</b>. Die Einheit, um die die Auswahl verschoben oder erweitert werden soll. <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />.</param>
        <param name="Extend">Optionales- <b>Objekt</b>. Gibt an, wie die Markierung verschoben wird. <see cref="T:Microsoft.Office.Interop.Word.WdMovementType" />.</param>
        <summary>Verschiebt oder erweitert die Markierung an dem Anfang der angegebenen Einheit.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode entspricht der Funktionalität der POS1-Taste.</para>
          <para>Diese Methode gibt eine ganze Zahl, die die Anzahl der Zeichen angibt, die Auswahl tatsächlich verschoben wurde, oder sie gibt 0 (null) zurück, wenn die Verschiebung nicht erfolgreich war.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLDivisions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.HTMLDivisions HTMLDivisions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.HTMLDivisions HTMLDivisions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.HTMLDivisions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HTMLDivisions As HTMLDivisions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::HTMLDivisions ^ HTMLDivisions { Microsoft::Office::Interop::Word::HTMLDivisions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1011)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1011)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.HTMLDivisions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.HTMLDivisions" /> -Objekt, das einen HTML-Bereich in einem Webdokument darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Word::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(156)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Hyperlinks" /> -Auflistung, die alle Hyperlinks in der angegebenen Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Information">
      <MemberSignature Language="C#" Value="public object Information[Microsoft.Office.Interop.Word.WdInformation Type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Information(valuetype Microsoft.Office.Interop.Word.WdInformation)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Information(Microsoft.Office.Interop.Word.WdInformation)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Information(Type As WdInformation) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Information[Microsoft::Office::Interop::Word::WdInformation] { System::Object ^ get(Microsoft::Office::Interop::Word::WdInformation Type); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Word.WdInformation" />
      </Parameters>
      <Docs>
        <param name="Type">Erforderliche <see cref="T:Microsoft.Office.Interop.Word.WdInformation" />. Der Informationstyp.</param>
        <summary>Informationen zu der angegebenen Markierung oder des Bereichs zurückgegeben.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineShapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShapes InlineShapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.InlineShapes InlineShapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.InlineShapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InlineShapes As InlineShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::InlineShapes ^ InlineShapes { Microsoft::Office::Interop::Word::InlineShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> -Auflistung, die alle stellt die <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> Objekte in einer Auswahl.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InRange">
      <MemberSignature Language="C#" Value="public bool InRange (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InRange([in]class Microsoft.Office.Interop.Word.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InRange(Microsoft.Office.Interop.Word.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InRange(Microsoft::Office::Interop::Word::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">Erforderliche <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt. Der Bereich, den die Auswahl verglichen werden soll.</param>
        <summary>Bestimmt, ob die Auswahl, auf die die Methode angewandt wird, in einem angegebenen Bereich enthalten ist.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt <b>True</b> zurück, wenn die Auswahl, auf die die Methode angewandt wird, vom angegebenen Bereich enthalten ist die <paramref name="Range" /> Argument und <b>False,</b> Wenn nicht.</para>
          <para>Dieser Methode wird bestimmt, ob die Auswahl im angegebenen Bereich enthalten ist, indem Vergleich Start- und Enddatum Positionen als auch die Artikelart.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public void InsertAfter (string Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter([in]string Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertAfter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAfter (Text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAfter(System::String ^ Text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">
          <b>String</b> erforderlich. Der Text, der eingefügt werden soll.</param>
        <summary>Fügt den angegebenen Text am Ende einer Auswahl.</summary>
        <remarks>
          <para>Nach Anwendung dieser Methode wird die Auswahl erweitert, damit der neuen Text einbezogen.</para>
          <para>, Wenn Sie diese Methode mit einer Auswahl verwenden, die auf einen ganzen Absatz, der Text ist nach der abschließenden Absatzmarke eingefügt (der Text wird am Anfang des nächsten Absatzes angezeigt). Zum Einfügen von Text am Ende eines Absatzes bestimmen den Endpunkt, und subtrahieren 1 aus diesem Speicherort (die Absatzmarke ist ein Zeichen).</para>
          <para>Jedoch die Auswahl mit einer Absatzmarke endet, die auch das Ende des Dokuments darstellt, fügt Microsoft Word den Text vor der letzten Absatzmarke, anstatt einen neuen Absatz am Ende des Dokuments zu erstellen.</para>
          <para>Auch, wenn die Auswahl einer Textmarke besteht, Word fügt den angegebenen Text, aber nicht erweitert die Markierung oder die Textmarke der neue Text einbezogen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public void InsertBefore (string Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore([in]string Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertBefore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertBefore (Text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertBefore(System::String ^ Text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">
          <b>String</b> erforderlich. Der Text, der eingefügt werden soll.</param>
        <summary>Fügt den angegebenen Text vor der angegebenen Auswahl.</summary>
        <remarks>
          <para>Nachdem der Text eingefügt wird, wird die Auswahl erweitert, damit der neuen Text einbezogen wird. Wenn die Auswahl einer Textmarke besteht, wird auch die Textmarke erweitert, um den Text einzuschließen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBreak">
      <MemberSignature Language="C#" Value="public void InsertBreak (ref object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBreak([in]object&amp; Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertBreak(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertBreak (Optional ByRef Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">Optionales- <b>Objekt</b>. Der Typ des Umbruchs eingefügt werden soll. <see cref="T:Microsoft.Office.Interop.Word.WdBreakType" /></param>
        <summary>Fügt einen Seiten-, Spalten- oder Abschnittsumbruch ein.</summary>
        <remarks>
          <para>Wenn Sie einen Seiten- oder Spaltenumbruch einfügen, wird die Markierung durch den Umbruch ersetzt. Wenn Sie nicht die Auswahl ersetzen möchten, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Selection.Collapse(System.Object@)" /> Methode, bevor Sie mit der <b>InsertBreak</b> -Methode. Wenn Sie einen Abschnittsumbruch einfügen, der Umbruch wird eingefügt unmittelbar vor der <see cref="T:Microsoft.Office.Interop.Word.Selection" /> -Objekt.</para>
          <para>Einige der <b>WdBreakType</b> -Konstanten können möglicherweise nicht zur Verfügung, abhängig von der Unterstützung der Sprache (Englisch USA), beispielsweise), die Sie ausgewählt oder installiert haben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCaption">
      <MemberSignature Language="C#" Value="public void InsertCaption (ref object Label, ref object Title, ref object TitleAutoText, ref object Position, ref object ExcludeLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCaption([in]object&amp; Label, [in]object&amp; Title, [in]object&amp; TitleAutoText, [in]object&amp; Position, [in]object&amp; ExcludeLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertCaption(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCaption (ByRef Label As Object, Optional ByRef Title As Object, Optional ByRef TitleAutoText As Object, Optional ByRef Position As Object, Optional ByRef ExcludeLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Label" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Title" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="TitleAutoText" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Position" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ExcludeLabel" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Label">
          <b>Objekt</b>erforderlich. Die Beschriftungskategorie eingefügt werden soll. <see cref="T:Microsoft.Office.Interop.Word.WdCaptionLabelID" />.</param>
        <param name="Title">Optionales- <b>Objekt</b>. Die Zeichenfolge, die unmittelbar nach der Kategorie in der Beschriftung eingefügt werden soll (ignoriert, wenn <paramref name="TitleAutoText" /> angegeben ist).</param>
        <param name="TitleAutoText">Optionales- <b>Objekt</b>. Der AutoText-Eintrag, dessen Inhalt unmittelbar nach der Kategorie in der Beschriftung eingefügt werden soll (überschreibt den Text vom angegebenen <paramref name="Title" />).</param>
        <param name="Position">Optionales- <b>Objekt</b>. Gibt an, ob die Beschriftung oberhalb oder unterhalb eingefügt wird der <see cref="T:Microsoft.Office.Interop.Word.Selection" /> Objekt. <see cref="T:Microsoft.Office.Interop.Word.WdCaptionPosition" />.</param>
        <param name="ExcludeLabel">Optionales- <b>Objekt</b>. <b>True,</b> enthält keine Beschriftung, im Sinne der <paramref name="Label" /> -Parameter. <b>False</b> schließt die angegebene Beschriftung.</param>
        <summary>Fügt unmittelbar vor oder nach der angegebenen Auswahl eine Beschriftung ein.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCaptionXP">
      <MemberSignature Language="C#" Value="public void InsertCaptionXP (ref object Label, ref object Title, ref object TitleAutoText, ref object Position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCaptionXP([in]object&amp; Label, [in]object&amp; Title, [in]object&amp; TitleAutoText, [in]object&amp; Position) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertCaptionXP(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCaptionXP (ByRef Label As Object, Optional ByRef Title As Object, Optional ByRef TitleAutoText As Object, Optional ByRef Position As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Label" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Title" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="TitleAutoText" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Position" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Label">To be added.</param>
        <param name="Title">To be added.</param>
        <param name="TitleAutoText">To be added.</param>
        <param name="Position">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCells">
      <MemberSignature Language="C#" Value="public void InsertCells (ref object ShiftCells);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCells([in]object&amp; ShiftCells) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertCells(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCells (Optional ByRef ShiftCells As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(214)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ShiftCells" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ShiftCells">Optionale <see cref="T:Microsoft.Office.Interop.Word.WdInsertCells" />.</param>
        <summary>Fügt Zellen in eine vorhandene Tabelle ein.</summary>
        <remarks>
          <para>Die Anzahl der eingefügten Zellen ist gleich der Anzahl der Zellen in der Auswahl.</para>
          <para>Sie können auch Zellen einfügen, mithilfe der <see cref="M:Microsoft.Office.Interop.Word.Cells.Add(System.Object@)" /> -Methode des der <see cref="T:Microsoft.Office.Interop.Word.Cells" /> -Objekt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertColumns">
      <MemberSignature Language="C#" Value="public void InsertColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertColumns() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertColumns" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertColumns ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertColumns();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(529)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fügt links neben der Spalte mit der Markierung Spalten ein.</summary>
        <remarks>
          <para>Wenn die Markierung in einer Tabelle befindet, tritt ein Fehler auf.</para>
          <para>Ist die Anzahl der Spalten eingefügt, die gleich der Anzahl der ausgewählten Spalten. Sie können auch Spalten einfügen, mithilfe der <see cref="M:Microsoft.Office.Interop.Word.Columns.Add(System.Object@)" /> -Methode des der <see cref="T:Microsoft.Office.Interop.Word.Columns" /> -Objekt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertColumnsRight">
      <MemberSignature Language="C#" Value="public void InsertColumnsRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertColumnsRight() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertColumnsRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertColumnsRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertColumnsRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(538)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fügt rechts neben der aktuellen Markierung Spalten ein.</summary>
        <remarks>
          <para>Microsoft Word eingefügt wie viele Spalten in der aktuellen Markierung vorhanden sind.</para>
          <para>, Um diese Methode verwenden, muss sich die aktuelle Markierung in einer Tabelle.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCrossReference">
      <MemberSignature Language="C#" Value="public void InsertCrossReference (ref object ReferenceType, Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, ref object ReferenceItem, ref object InsertAsHyperlink, ref object IncludePosition, ref object SeparateNumbers, ref object SeparatorString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCrossReference([in]object&amp; ReferenceType, [in]valuetype Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, [in]object&amp; ReferenceItem, [in]object&amp; InsertAsHyperlink, [in]object&amp; IncludePosition, [in]object&amp; SeparateNumbers, [in]object&amp; SeparatorString) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertCrossReference(System.Object@,Microsoft.Office.Interop.Word.WdReferenceKind,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCrossReference (ByRef ReferenceType As Object, ReferenceKind As WdReferenceKind, ByRef ReferenceItem As Object, Optional ByRef InsertAsHyperlink As Object, Optional ByRef IncludePosition As Object, Optional ByRef SeparateNumbers As Object, Optional ByRef SeparatorString As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReferenceType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReferenceKind" Type="Microsoft.Office.Interop.Word.WdReferenceKind" />
        <Parameter Name="ReferenceItem" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsHyperlink" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IncludePosition" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SeparateNumbers" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SeparatorString" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ReferenceType">
          <b>Objekt</b>erforderlich. Der Typ des Elements, für den ein Querverweis eingefügt werden soll. Kann eine <see cref="T:Microsoft.Office.Interop.Word.WdReferenceType" /> oder <see cref="T:Microsoft.Office.Interop.Word.WdCaptionLabelID" /> -Konstante oder eine benutzerdefinierte Beschriftungskategorie.</param>
        <param name="ReferenceKind">Erforderliche <see cref="T:Microsoft.Office.Interop.Word.WdReferenceKind" />. Die Informationen, die in dem Querverweis eingeschlossen sein sollen.</param>
        <param name="ReferenceItem">
          <b>Objekt</b>erforderlich. Wenn <paramref name="ReferenceType" /> ist der <b>Wert wdRefTypeBookmark festgelegt</b>, gibt dieses Argument ein Textmarkenname. Für alle anderen <paramref name="ReferenceType" /> Werte, gibt dieses Argument die Nummer oder den Namen in den Verweistyp Feld im Dialogfeld Querverweis. Verwendung der <see cref="M:Microsoft.Office.Interop.Word._Document.GetCrossReferenceItems(System.Object@)" /> -Methode zum Zurückgeben eine Liste mit Elementnamen, die mit diesem Argument verwendet werden kann.</param>
        <param name="InsertAsHyperlink">Optionales- <b>Objekt</b>. <b>True</b>, wenn der Querverweis als Hyperlink auf das verwiesene Element eingefügt werden soll.</param>
        <param name="IncludePosition">Optionales- <b>Objekt</b>. <b>True</b>, um die Einfügung in Abhängigkeit von der Position des Referenzelements im Verhältnis zum Querverweis "darüber" oder "darunter" vorzunehmen.</param>
        <param name="SeparateNumbers">Optionales- <b>Objekt</b>. <b>True</b> , wenn ein Trennzeichen zum Trennen der Zahlen vom dazugehörigen Text zu verwenden. (Nur verwenden, wenn die <paramref name="ReferenceType" /> Parameter <b>WdRefTypeNumberedItem</b> festgelegt ist und die <paramref name="ReferenceKind" /> Parameter <b>WdNumberFullContext</b>festgelegt ist.)</param>
        <param name="SeparatorString">Optionales- <b>Objekt</b>. Gibt die Zeichenfolge an, die als Trennzeichen verwendet werden soll, wenn der Parameter <b>SeparateNumbers</b> auf <b>True</b> festgelegt ist.</param>
        <summary>Fügt einen Querverweis in eine Überschrift, Textmarke, Fußnote oder Endnote oder in ein Element ein, für das eine Beschriftungskategorie definiert wurde (z. B. eine Gleichung, Abbildung oder Tabelle).</summary>
        <remarks>
          <para>Wenn Sie <b>WdPageNumber</b> als Wert der angeben <paramref name="ReferenceKind" />, müssen Sie möglicherweise das Dokument durchführen, um die korrekten Informationen finden Sie unter.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCrossReference_2002">
      <MemberSignature Language="C#" Value="public void InsertCrossReference_2002 (ref object ReferenceType, Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, ref object ReferenceItem, ref object InsertAsHyperlink, ref object IncludePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCrossReference_2002([in]object&amp; ReferenceType, [in]valuetype Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, [in]object&amp; ReferenceItem, [in]object&amp; InsertAsHyperlink, [in]object&amp; IncludePosition) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertCrossReference_2002(System.Object@,Microsoft.Office.Interop.Word.WdReferenceKind,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCrossReference_2002 (ByRef ReferenceType As Object, ReferenceKind As WdReferenceKind, ByRef ReferenceItem As Object, Optional ByRef InsertAsHyperlink As Object, Optional ByRef IncludePosition As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReferenceType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReferenceKind" Type="Microsoft.Office.Interop.Word.WdReferenceKind" />
        <Parameter Name="ReferenceItem" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsHyperlink" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IncludePosition" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ReferenceType">To be added.</param>
        <param name="ReferenceKind">To be added.</param>
        <param name="ReferenceItem">To be added.</param>
        <param name="InsertAsHyperlink">To be added.</param>
        <param name="IncludePosition">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDateTime">
      <MemberSignature Language="C#" Value="public void InsertDateTime (ref object DateTimeFormat, ref object InsertAsField, ref object InsertAsFullWidth, ref object DateLanguage, ref object CalendarType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDateTime([in]object&amp; DateTimeFormat, [in]object&amp; InsertAsField, [in]object&amp; InsertAsFullWidth, [in]object&amp; DateLanguage, [in]object&amp; CalendarType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertDateTime(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertDateTime (Optional ByRef DateTimeFormat As Object, Optional ByRef InsertAsField As Object, Optional ByRef InsertAsFullWidth As Object, Optional ByRef DateLanguage As Object, Optional ByRef CalendarType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateTimeFormat" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsField" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsFullWidth" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DateLanguage" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CalendarType" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DateTimeFormat">Optionales- <b>Objekt</b>. Das Format für die Anzeige der Datum oder Uhrzeit oder beides verwendet werden. Wenn dieses Argument ausgelassen wird, verwendet Microsoft Word das kurzen Datumsformat aus der Windows-Systemsteuerung (Regionaleinstellungen-Symbol).</param>
        <param name="InsertAsField">Optionales- <b>Objekt</b>. <b>True</b> , wenn die angegebenen Informationen als TIME-Feld einzufügen. Der Standardwert ist <b>True</b>.</param>
        <param name="InsertAsFullWidth">Optionales- <b>Objekt</b>. <b>True</b>, wenn die angegebenen Informationen als Double-Byte-Ziffern einzufügen. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <param name="DateLanguage">Optionales- <b>Objekt</b>. Die Sprache, in dem die Datums- oder Uhrzeitwerte angezeigt wird. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdDateLanguage" /> Konstanten: <b>WdDateLanguageBidi</b> oder <b>WdDateLanguageLatin</b>. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <param name="CalendarType">Optionales- <b>Objekt</b>. Legt den beim Anzeigen des Datums oder Uhrzeit zu verwendenden Kalendertyp an. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdCalendarTypeBi" /> Konstanten: <b>WdCalendarTypeBidi</b> oder <b>WdCalendarTypeGregorian</b>. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <summary>Fügt das aktuelle Datum, die aktuelle Zeit oder beides als Text oder TIME-Feld ein.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDateTimeOld">
      <MemberSignature Language="C#" Value="public void InsertDateTimeOld (ref object DateTimeFormat, ref object InsertAsField, ref object InsertAsFullWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDateTimeOld([in]object&amp; DateTimeFormat, [in]object&amp; InsertAsField, [in]object&amp; InsertAsFullWidth) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertDateTimeOld(System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertDateTimeOld (Optional ByRef DateTimeFormat As Object, Optional ByRef InsertAsField As Object, Optional ByRef InsertAsFullWidth As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateTimeFormat" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsField" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsFullWidth" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DateTimeFormat">To be added.</param>
        <param name="InsertAsField">To be added.</param>
        <param name="InsertAsFullWidth">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertFile">
      <MemberSignature Language="C#" Value="public void InsertFile (string FileName, ref object Range, ref object ConfirmConversions, ref object Link, ref object Attachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertFile([in]string FileName, [in]object&amp; Range, [in]object&amp; ConfirmConversions, [in]object&amp; Link, [in]object&amp; Attachment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertFile(System.String,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertFile (FileName As String, Optional ByRef Range As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef Link As Object, Optional ByRef Attachment As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Range" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Link" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Attachment" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">
          <b>String</b> erforderlich. Der Pfad und Dateiname der Datei eingefügt werden soll. Wenn Sie einen Pfad angeben, wird Microsoft Word davon ausgegangen, dass die Datei im aktuellen Ordner.</param>
        <param name="Range">Optionales- <b>Objekt</b>. Wenn die angegebene Datei ein Word-Dokument ist, bezieht sich dieser Parameter auf eine Textmarke. Wenn die Datei auf einen anderen Typ (beispielsweise ein Microsoft Excel-Arbeitsblatt) ist, bezieht sich dieser Parameter auf einen benannten Bereich oder einen Zellbereich (beispielsweise R1C1: R3C4).</param>
        <param name="ConfirmConversions">Optionales- <b>Objekt</b>. <b>True</b>, wenn Sie beim Einfügen von Dateien, die nicht im Word-Dokumentformat vorliegen, von Word zum Bestätigen der Konvertierung aufgefordert werden möchten.</param>
        <param name="Link">Optionales- <b>Objekt</b>. <b>True</b>, um die Datei mithilfe eines INCLUDETEXT-Felds einzufügen.</param>
        <param name="Attachment">Optionales- <b>Objekt</b>. <b>True</b>, um die Datei als Anlage an eine E-Mail-Nachricht anzufügen.</param>
        <summary>Fügt die gesamte oder einen Teil der angegebenen Datei ein.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertFormula">
      <MemberSignature Language="C#" Value="public void InsertFormula (ref object Formula, ref object NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertFormula([in]object&amp; Formula, [in]object&amp; NumberFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertFormula(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertFormula (Optional ByRef Formula As Object, Optional ByRef NumberFormat As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(530)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Formula" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumberFormat" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Formula">Optionales- <b>Objekt</b>. Die mathematische Formel, die das = (Formula)-Feld auswerten soll. Tabellenbezüge zu Tabellenzellen sind gültig. Beispielsweise gibt "=Sum(a4:C4)""die ersten drei Werte in der vierten Zeile an.</param>
        <param name="NumberFormat">Optionales- <b>Objekt</b>. Ein Format für das Ergebnis des = (Formula)-Feld.</param>
        <summary>Fügt an der Markierung ein =(Formel)-Feld ein, das eine Formel enthält.</summary>
        <remarks>
          <para>Die Formel ersetzt die Markierung, wenn die Auswahl nicht reduziert ist.</para>
          <para>Wenn Sie eine tabellenkalkulationsanwendung, wie beispielsweise Microsoft Excel, alle einbetten oder Teil eines Arbeitsblatts in einem Dokument häufig einfacher ist als das = (Formula)-Feld in einer Tabelle.</para>
          <para>Der <paramref name="Formula" /> -Argument ist optional, nur, wenn die Auswahl befindet sich in einer Zelle und mindestens eine Zelle, die oben einen Wert enthält oder links neben der Zelle, die die Einfügemarke enthält. Wenn die Zellen über der Einfügemarke Werte enthalten, ist das eingefügte Feld {=SUM(über)}; Wenn die Zellen links von der Einfügemarke enthalten Sie Werte, die eingefügten Felds ist {=SUM(links)}. Wenn sowohl die Zellen über der Einfügemarke auch die Zellen links davon Werte enthalten, Microsoft Word verwendet die folgenden Regeln zum bestimmen, welche SUM-Funktion einfügen:</para>
          <list type="bullet">
            <item>
              <para>, wenn die Zelle unmittelbar über der Einfügemarke einen Wert enthält, fügt Word {=SUM(über)}.</para>
            </item>
            <item>
              <para>Wenn die Zelle unmittelbar über der Einfügemarke keinen Wert enthält, aber die Zelle unmittelbar links neben der Einfügemarke fügt Word, {=SUM(links)}.</para>
            </item>
            <item>
              <para>Wenn weder unmittelbar über der Einfügemarke noch die Zelle Zelle unmittelbar darunter sie einen Wert, fügt Word enthält {=SUM(über)}.</para>
            </item>
            <item>
              <para>Wenn Sie keinen <paramref name="Formula" /> und alle Zellen oberhalb und links neben der Einfügemarke leer sind, wird das = (Formula)-Feld wird ein Fehler ausgegeben.</para>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertNewPage">
      <MemberSignature Language="C#" Value="public void InsertNewPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertNewPage() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertNewPage" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertNewPage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertNewPage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
		Fügt an der Position der Einfügemarke eine neue Seite ein.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraph">
      <MemberSignature Language="C#" Value="public void InsertParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraph() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertParagraph();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ersetzt die angegebene Auswahl durch einen neuen Absatz.</summary>
        <remarks>
          <para>Nach Verwendung dieser Methode wird die Auswahl der neue Absatz.</para>
          <para>, Wenn Sie nicht möchten, ersetzen Sie den Bereich oder einer Auswahl, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Selection.Collapse(System.Object@)" /> Methode, bevor Sie diese Methode verwenden. Die <see cref="M:Microsoft.Office.Interop.Word.Selection.InsertParagraphAfter" /> -Methode fügt einen neuen Absatz ein <b>Selection</b> -Objekt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphAfter">
      <MemberSignature Language="C#" Value="public void InsertParagraphAfter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraphAfter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertParagraphAfter" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertParagraphAfter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertParagraphAfter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fügt nach einer Auswahl eine Absatzmarke ein.</summary>
        <remarks>
          <para>Nachdem diese Methode angewendet wird, wird die Auswahl erweitert, um den neuen Absatz einzuschließen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBefore">
      <MemberSignature Language="C#" Value="public void InsertParagraphBefore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraphBefore() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertParagraphBefore" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertParagraphBefore ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertParagraphBefore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ein neuer Absatz vor der angegebenen Auswahl eingefügt.</summary>
        <remarks>
          <para>Nachdem diese Methode angewendet wird, wird die Auswahl erweitert, um den neuen Absatz einzuschließen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRows">
      <MemberSignature Language="C#" Value="public void InsertRows (ref object NumRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRows([in]object&amp; NumRows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertRows(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertRows (Optional ByRef NumRows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumRows" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NumRows">Optionales- <b>Objekt</b>. Die Anzahl der hinzuzufügenden Zeilen.</param>
        <summary>Fügt die angegebene Anzahl von neuen Zeilen oberhalb der Zeile mit der Auswahl ein.</summary>
        <remarks>
          <para>Wenn die Markierung in einer Tabelle befindet, tritt ein Fehler auf.</para>
          <para>Sie können Zeilen auch einfügen, indem die <see cref="M:Microsoft.Office.Interop.Word.Rows.Add(System.Object@)" /> -Methode des der <see cref="P:Microsoft.Office.Interop.Word.Selection.Rows" /> -Objekt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowsAbove">
      <MemberSignature Language="C#" Value="public void InsertRowsAbove (ref object NumRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRowsAbove([in]object&amp; NumRows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertRowsAbove(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertRowsAbove (Optional ByRef NumRows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(539)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumRows" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NumRows">Optionales- <b>Objekt</b>. Die Anzahl der hinzuzufügenden Zeilen.</param>
        <summary>Fügt oberhalb der aktuellen Markierung Zeilen ein.</summary>
        <remarks>
          <para>Microsoft Word eingefügt wie viele Zeilen in der aktuellen Markierung vorhanden sind.</para>
          <para>, Um diese Methode verwenden, muss sich die aktuelle Markierung in einer Tabelle.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowsBelow">
      <MemberSignature Language="C#" Value="public void InsertRowsBelow (ref object NumRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRowsBelow([in]object&amp; NumRows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertRowsBelow(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertRowsBelow (Optional ByRef NumRows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(537)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumRows" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NumRows">Optionales- <b>Objekt</b>. Die Anzahl der hinzuzufügenden Zeilen.</param>
        <summary>Fügt Zeilen unterhalb der aktuellen Markierung ein.</summary>
        <remarks>
          <para>Microsoft Word eingefügt wie viele Zeilen in der aktuellen Markierung vorhanden sind.</para>
          <para>, Um diese Methode verwenden, muss sich die aktuelle Markierung in einer Tabelle.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertStyleSeparator">
      <MemberSignature Language="C#" Value="public void InsertStyleSeparator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertStyleSeparator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertStyleSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertStyleSeparator ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertStyleSeparator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1020)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fügt eine besondere, verborgene Absatzmarke ein, mit die Microsoft Word Absätze, die mit unterschiedlichen Formatvorlagen formatiert beitreten kann.</summary>
        <remarks>
          <para>Diese Methode ermöglicht das einleitende Überschriften in ein Inhaltsverzeichnis eingefügt werden soll.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertSymbol">
      <MemberSignature Language="C#" Value="public void InsertSymbol (int CharacterNumber, ref object Font, ref object Unicode, ref object Bias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertSymbol([in]int32 CharacterNumber, [in]object&amp; Font, [in]object&amp; Unicode, [in]object&amp; Bias) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertSymbol(System.Int32,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertSymbol (CharacterNumber As Integer, Optional ByRef Font As Object, Optional ByRef Unicode As Object, Optional ByRef Bias As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharacterNumber" Type="System.Int32" />
        <Parameter Name="Font" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Unicode" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Bias" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CharacterNumber">
          <b>Integer</b>erforderlich. Die Anzahl der Zeichen für das angegebene Symbol. Dieser Wert ist immer, die die Summe von 31 und der Zahl, die die Position des Symbols in der Tabelle der Symbole (von links nach rechts gezählt) entspricht. Um ein Delta an Position 37 in der Tabelle der Symbole in der Schriftart Symbol anzugeben, legen Sie beispielsweise <paramref name="CharacterNumber" /> auf 68.</param>
        <param name="Font">Optionales- <b>Objekt</b>. Der Name der Schriftart, die das Symbol enthält.</param>
        <param name="Unicode">Optionales- <b>Objekt</b>. <b>True</b> , wenn das Unicode-Zeichen angegeben durch Einfügen <paramref name="CharacterNumber" />; <b>False</b> , wenn das angegebene von ANSI-Zeichen eingefügt <paramref name="CharacterNumber" />. Der Standardwert lautet <b>False</b>.</param>
        <param name="Bias">Optionales- <b>Objekt</b>. Legt die zeichenneigung für Symbole. Dieses Argument ist nützlich für das Festlegen der richtigen zeichenneigung für ostasiatische Zeichen. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdFontBias" /> Konstanten: <b>WdFontBiasDefault</b>, <b>WdFontBiasDontCare</b>oder <b>WdFontBiasFareast</b>. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <summary>Fügt an der Stelle der angegebenen Auswahl ein Symbol ein.</summary>
        <remarks>
          <para>Wenn Sie nicht die Auswahl ersetzen möchten, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Selection.Collapse(System.Object@)" /> -Methode auf, bevor Sie diese Methode verwenden.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertXML">
      <MemberSignature Language="C#" Value="public void InsertXML (string XML, ref object Transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertXML([in]string XML, [in]object&amp; Transform) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InsertXML(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertXML (XML As String, Optional ByRef Transform As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1028)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XML" Type="System.String" />
        <Parameter Name="Transform" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="XML">
          <b>String</b> erforderlich. Der XML-Text einfügen.</param>
        <param name="Transform">Optionales- <b>Objekt</b>. Die Transformation, die auf den eingefügten XML-Text angewendet.</param>
        <summary>Den angegebenen XML-Text in der angegebenen Auswahl eingefügt.</summary>
        <remarks>
          <para>Wenn der angegebene Bereich oder die Markierung Text enthält, ersetzt die <b>InsertXML</b> -Methode den vorhandenen Text.</para>
          <para>Verwenden die <b>InsertXML</b> -Methode zum Einfügen von Text mit beliebigem XML oder Word-XML-gekennzeichnet. Der XML-Code muss wohlgeformt sein. Wenn Word XML verwendet wird, müssen Sie es auch gültig gemäß dem Word-XML-Schema sein. Weitere Informationen zum Word-XML-Schema finden Sie unter im Word XML Content Development Kit, die sich auf der Microsoft Developer Network (MSDN)-Website.</para>
          <para>Eine Fehlermeldung wird angezeigt, wenn der angegebene XML-Text in den angegebenen Bereich oder die Markierung eingefügt werden kann,.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InStory">
      <MemberSignature Language="C#" Value="public bool InStory (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InStory([in]class Microsoft.Office.Interop.Word.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.InStory(Microsoft.Office.Interop.Word.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InStory(Microsoft::Office::Interop::Word::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(125)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">Erforderliche <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt. Das <b>Range</b> -Objekt, dessen Artikel mit demjenigen verglichen wird, die angegebene Auswahl enthält.</param>
        <summary>Bestimmt, ob die Markierung auf die diese Methode angewendet wird in demselben Artikel befindet wie der angegebene Bereich befindet.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt <b>True</b> zurück, wenn die Auswahl auf den diese Methode angewendet wird in demselben Artikel befindet wie der Bereich durch angegeben ist die <paramref name="Range" /> -Argument, und <b>False,</b> Wenn nicht.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPAtEndOfLine">
      <MemberSignature Language="C#" Value="public bool IPAtEndOfLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IPAtEndOfLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.IPAtEndOfLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IPAtEndOfLine As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IPAtEndOfLine { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob die Einfügemarke am Ende einer Zeile befindet, der in die nächste Zeile umbrochen wird.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn die Einfügemarke am Ende einer Zeile, der in die nächste Zeile und <b>False</b> umbrochen wird befindet, wenn die Auswahl nicht reduziert, wenn die Einfügemarke nicht am Ende einer Zeile ist oder die Einfügemarke vor einer Absatzmarke .</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEndOfRowMark">
      <MemberSignature Language="C#" Value="public bool IsEndOfRowMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEndOfRowMark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.IsEndOfRowMark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEndOfRowMark As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEndOfRowMark { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob die angegebene Auswahl reduziert, und befindet sich unter dem Ende der Zeile gleichgesetzt in einer Tabelle.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>True</b> zurück, wenn die angegebene Auswahl reduziert und befindet sich unter dem Ende der Zeile gleichgesetzt in einer Tabelle, oder <b>False</b> , wenn nicht.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public bool IsEqual (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEqual([in]class Microsoft.Office.Interop.Word.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.IsEqual(Microsoft.Office.Interop.Word.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEqual(Microsoft::Office::Interop::Word::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(171)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">Erforderliche <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt. Das <b>Range</b> -Objekt, das mit der angegebenen Auswahl verglichen wird.</param>
        <summary>Bestimmt, ob die Auswahl auf den diese Methode angewendet wird vom angegebenen Bereich entspricht der <paramref name="Range" /> Argument.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt <b>True</b> zurück, wenn die Auswahl, auf die diese Methode angewandt wird, vom angegebenen Bereich entspricht der <paramref name="Range" /> Argument und <b>False,</b> Wenn nicht.</para> Geben Sie diese Methode vergleicht die Positionen der Start- und Enddatum sowie die Geschichte 
          <para>. Wenn alle drei dieser Elemente für beide Objekte identisch sind, sind die Objekte gleich.</para><para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="ItalicRun">
      <MemberSignature Language="C#" Value="public void ItalicRun ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ItalicRun() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ItalicRun" />
      <MemberSignature Language="VB.NET" Value="Public Sub ItalicRun ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ItalicRun();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Formatiert die aktuelle Textfolge kursiv oder entfernt die Kursivformatierung.</summary>
        <remarks>
          <para>Wenn die Textfolge sowohl kursiv als auch nicht kursiv formatierten Text enthält, mit dieser Methode die gesamte Textfolge kursiv hinzugefügt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageDetected">
      <MemberSignature Language="C#" Value="public bool LanguageDetected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LanguageDetected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.LanguageDetected" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageDetected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LanguageDetected { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1007)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1007)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1007)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder festlegen ein Werts, das angibt, ob Microsoft Word die Sprache des angegebenen Texts erkannt hat.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Überprüfen Sie die <see cref="P:Microsoft.Office.Interop.Word.Selection.LanguageID" /> -Eigenschaft nach den Ergebnissen aller bisherigen Spracherkennungen.</para>
          <para>Die <b>LanguageDetected</b> -Eigenschaft auf <b>True</b> festgelegt ist bei der <see cref="M:Microsoft.Office.Interop.Word.Selection.DetectLanguage" /> -Methode aufgerufen wird. Um die Sprache des angegebenen Texts erneut auszuwerten, müssen Sie zunächst die <b>LanguageDetected</b> -Eigenschaft auf <b>False</b>festlegen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageID">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.LanguageID" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageID As WdLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdLanguageID LanguageID { Microsoft::Office::Interop::Word::WdLanguageID get(); void set(Microsoft::Office::Interop::Word::WdLanguageID value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(153)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(153)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(153)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder festlegen die Sprache für das angegebene Objekt.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Einige der <b>WdLanguageID</b> -Konstanten haben möglicherweise nicht zur Verfügung, abhängig von der Unterstützung der Sprache (Englisch USA), beispielsweise).</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageIDFarEast">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageIDFarEast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageIDFarEast" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.LanguageIDFarEast" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageIDFarEast As WdLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdLanguageID LanguageIDFarEast { Microsoft::Office::Interop::Word::WdLanguageID get(); void set(Microsoft::Office::Interop::Word::WdLanguageID value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(154)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(154)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(154)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder festlegen eine ostasiatische Sprache für das angegebene Objekt.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Dies ist die empfohlene Option zum Zurückgeben oder Festlegen der Sprache des ostasiatischen Text in einem Dokument in eine ostasiatische Version von Microsoft Word erstellt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageIDOther">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageIDOther { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageIDOther" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.LanguageIDOther" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageIDOther As WdLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdLanguageID LanguageIDOther { Microsoft::Office::Interop::Word::WdLanguageID get(); void set(Microsoft::Office::Interop::Word::WdLanguageID value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(155)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(155)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(155)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder festlegen die Sprache für das angegebene Objekt.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Dies ist die empfohlene Option zum Zurückgeben oder Festlegen der Sprache eines westlichen Texts in einem Dokument in einer rechts-nach-links-Sprache-Version von Microsoft Word erstellt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LtrPara">
      <MemberSignature Language="C#" Value="public void LtrPara ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LtrPara() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.LtrPara" />
      <MemberSignature Language="VB.NET" Value="Public Sub LtrPara ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LtrPara();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(606)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt die angegebenen Absätze auf Leserichtung und Ausrichtung von links nach rechts fest.</summary>
        <remarks>
          <para>Für alle ausgewählten Absätze diese Methode die leserichtung auf von links-nach-rechts festgelegt. Wenn ein Absatz mit einer rechts-nach-links-Lesereihenfolge auch rechts ausgerichtet ist, wird diese Methode macht die Lesereihenfolge und wird die Ausrichtung des Absatzes auf linksbündig ausgerichteten.</para>
          <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Word.Paragraph.ReadingOrder" /> -Eigenschaft die Lesereihenfolge geändert, ohne die Ausrichtung des Absatzes.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LtrRun">
      <MemberSignature Language="C#" Value="public void LtrRun ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LtrRun() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.LtrRun" />
      <MemberSignature Language="VB.NET" Value="Public Sub LtrRun ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LtrRun();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(601)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt die angegebene Textfolge auf Leserichtung und Ausrichtung von links nach rechts fest.</summary>
        <remarks>
          <para>Für die angegebene Textfolge, diese Methode die leserichtung auf von links-nach-rechts festgelegt. Wenn ein Absatz im Lauf mit einer rechts-nach-links-Lesereihenfolge auch rechts ausgerichtet ist, wird diese Methode macht die Lesereihenfolge und wird die Ausrichtung des Absatzes auf linksbündig ausgerichteten.</para>
          <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Word.Paragraph.ReadingOrder" /> -Eigenschaft die Lesereihenfolge geändert, ohne die Ausrichtung des Absatzes.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public int Move (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Move([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Move(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Move (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionales- <b>Objekt</b>. Die Einheit, um die reduzierte Auswahl verschoben werden soll. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> Konstanten: <b>WdCharacter</b>, <b>WdWord</b>, <b>WdLine</b>, <b>WdSentence</b>, <b>WdParagraph</b>, <b>WdSection</b>, <b>WdStory</b>, <b>WdCell</b>, <b>WdColumn</b>, <b>WdRow</b>oder <b>WdTable</b>. Der Standardwert ist <b>WdCharacter</b>.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die Anzahl der Einheiten, um die die angegebene Auswahl verschoben werden soll. Wenn <paramref name="Count" /> eine positive Zahl ist, wird das Objekt zu seiner Endposition reduziert und im Dokument um die angegebene Anzahl von Einheiten nach hinten verschoben wird. Wenn <paramref name="Count" /> eine negative Zahl ist, wird das Objekt zu seiner Startposition reduziert und um die angegebene Anzahl von Einheiten nach vorn verschoben. Der Standardwert ist 1. Sie können auch die Richtung reduzieren steuern, mit der <see cref="M:Microsoft.Office.Interop.Word.Selection.Collapse(System.Object@)" /> Methode, bevor Sie die <b>Move</b> -Methode verwenden. Wenn der Bereich oder die Auswahl in der Mitte eine Einheit ist oder nicht reduziert ist, wird in der Anfang oder das Ende der Einheit verschieben als verschieben um eine vollständige Einheit gezählt.</param>
        <summary>Reduziert die angegebene Auswahl auf seine Position Start- oder Endzeit und verschiebt das reduzierte Objekt um die angegebene Anzahl von Einheiten.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt einen <b>Integer</b> -Wert, der die Anzahl der Einheiten angibt, um die das Objekt tatsächlich verschoben wurde, oder sie gibt 0 (null) zurück, wenn die Verschiebung nicht erfolgreich war.</para>
          <para>Die Startposition und Endposition einer reduzierten Auswahl sind gleich.</para>
          <para>Verschieben einer <see cref="T:Microsoft.Office.Interop.Word.Selection" /> -Objekt wird die Auswahl reduziert und die Einfügemarke entweder vorwärts oder rückwärts im Dokument verschoben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveDown">
      <MemberSignature Language="C#" Value="public int MoveDown (ref object Unit, ref object Count, ref object Extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveDown([in]object&amp; Unit, [in]object&amp; Count, [in]object&amp; Extend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.MoveDown(System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveDown (Optional ByRef Unit As Object, Optional ByRef Count As Object, Optional ByRef Extend As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Extend" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionale <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />. Die Einheit, um die die Auswahl verschoben werden soll.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die Anzahl der Einheiten, um die Auswahl verschoben werden soll. Der Standardwert ist 1.</param>
        <param name="Extend">Optionales- <b>Objekt</b>. <b>WdMove</b> oder <b>WdExtend</b>kann sein. Wenn <b>WdMove</b> verwendet wird, wird die Auswahl bis zum Endpunkt reduziert und nach unten verschoben. Wenn Sie <b>WdExtend</b> verwenden, wird die Markierung nach unten erweitert. Der Standardwert ist <b>WdMove</b>.</param>
        <summary>Verschiebt die Markierung nach unten und gibt die Anzahl der Einheiten, die sie verschoben wurde.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Die <b>WdWindow</b> -Konstante kann verwendet werden, um auf der oberen oder unteren Rand des aktiven Fensters zu verschieben. Unabhängig vom Wert der <paramref name="Count" /> (größer als 1 oder kleiner als – 1), die <b>WdWindow</b> -Konstante wird nur eine Einheit verschoben. Verwenden Sie die <b>WdScreen</b> -Konstante, um mehr als ein Fenster verschieben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEnd">
      <MemberSignature Language="C#" Value="public int MoveEnd (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEnd([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.MoveEnd(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEnd (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionale <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />. Die Einheit, um die die Endzeichenposition verschoben wird.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die Anzahl von Einheiten, um die verschoben werden soll. Wenn diese Zahl positiv ist, wird die Position des Endzeichens im Dokument nach vorn verschoben. Ist die Zahl negativ, wird das Ende nach hinten verschoben. Wenn die Endposition die Anfangsposition überschreitet, wird der Bereich reduziert, und beide Zeichenpositionen werden gemeinsam verschoben. Der Standardwert ist 1.</param>
        <summary>Verschiebt die Position des letzten Zeichens einer Auswahl.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt eine ganze Zahl, die die Anzahl der Einheiten angibt, die Auswahl tatsächlich verschoben wurde, oder sie gibt 0 (null) zurück, wenn die Verschiebung nicht erfolgreich war.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndUntil">
      <MemberSignature Language="C#" Value="public int MoveEndUntil (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndUntil([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.MoveEndUntil(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndUntil (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset">
          <b>Objekt</b>erforderlich. Ein oder mehrere Zeichen. Dieses Argument wird Groß-/Kleinschreibung beachtet.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die maximale Anzahl von Zeichen, um die der angegebene Bereich oder die Auswahl verschoben werden soll. Kann eine Zahl oder den <b>WdForward</b> oder <b>WdBackward</b> Konstante. Wenn <paramref name="Count" /> ist eine positive Zahl, die der Bereich oder die Auswahl im Dokument vorwärts verschoben wird. Wenn es eine negative Zahl ist, wird der Bereich oder die Auswahl rückwärts verschoben. Der Standardwert ist <b>WdForward</b>.</param>
        <summary>Verschiebt die Endposition der angegebenen Auswahl, bis eines der angegebenen Zeichen im Dokument gefunden wird.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>, Wenn die Verschiebung im Dokument vorwärts erfolgt, wird die Auswahl erweitert.</para>
          <para>Gibt diese Methode die Anzahl der Zeichen, um die die Endposition der angegebenen Auswahl, als <b>ganze</b> Zahl verschoben wurde, zurück. Wenn <paramref name="Count" /> größer als 0 (null), wird diese Methode gibt die Anzahl der Zeichen, verschoben wurde, plus 1 zurück. Wenn <paramref name="Count" /> ist kleiner als 0 (null), gibt diese Methode die Anzahl der Zeichen, die verschoben wurde, minus 1 zurück. Wenn kein <paramref name="Cset" /> Zeichen gefunden werden, die Auswahl nicht geändert, und die Methode gibt 0 (null) zurück. Wenn die Endposition rückwärts verschoben wird Startposition einen Punkt, der den ursprünglichen vorangestellt ist, wird die Startposition auf die neue Endposition festgelegt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndWhile">
      <MemberSignature Language="C#" Value="public int MoveEndWhile (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndWhile([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.MoveEndWhile(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndWhile (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset">
          <b>Objekt</b>erforderlich. Ein oder mehrere Zeichen. Dieses Argument wird Groß-/Kleinschreibung beachtet.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die maximale Anzahl von Zeichen, um die der Bereich oder die Auswahl verschoben werden soll. Kann eine Zahl oder den <b>WdForward</b> oder <b>WdBackward</b> Konstante. Wenn <paramref name="Count" /> ist eine positive Zahl, die Auswahl im Dokument vorwärts verschoben wird. Wenn es eine negative Zahl ist, wird die Auswahl rückwärts verschoben. Der Standardwert ist <b>WdForward</b>.</param>
        <summary>Verschiebt die Position des letzten Zeichens einer Auswahl, solange eines der angegebenen Zeichen im Dokument gefunden wird.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Solange beliebige Zeichen in <paramref name="Cset" /> gefunden wird, wird das Ende der angegebenen Auswahl Position verschoben wird. Diese Methode gibt die Anzahl der Zeichen, die die Endposition der Auswahl als <b>ganze</b> Zahl verschoben. Wenn kein <paramref name="Cset" /> Zeichen gefunden werden, die Auswahl nicht geändert, und die Methode gibt 0 (null) zurück. Wenn die Endposition rückwärts zu einem Punkt, die vor der ursprünglichen Startposition liegt verschoben wird, wird die Startposition auf die neue Endposition festgelegt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveLeft">
      <MemberSignature Language="C#" Value="public int MoveLeft (ref object Unit, ref object Count, ref object Extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveLeft([in]object&amp; Unit, [in]object&amp; Count, [in]object&amp; Extend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.MoveLeft(System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveLeft (Optional ByRef Unit As Object, Optional ByRef Count As Object, Optional ByRef Extend As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Extend" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionale <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />. Die Einheit, um die die Auswahl verschoben werden soll.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die Anzahl der Einheiten, um die Auswahl verschoben werden soll. Der Standardwert ist 1.</param>
        <param name="Extend">Optionales- <b>Objekt</b>. <b>WdMove</b> oder <b>WdExtend</b>kann sein. Wenn <b>WdMove</b> verwendet wird, wird die Auswahl bis zum Endpunkt reduziert und nach links verschoben. Wenn <b>WdExtend</b> verwendet wird, wird die Markierung nach links erweitert. Der Standardwert ist <b>WdMove</b>.</param>
        <summary>Verschiebt die Markierung nach links und gibt die Anzahl der Einheiten, die sie verschoben wurde.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Wenn die <paramref name="Unit" /><b>WdCell</b>, ist die <paramref name="Extend" /> Argument wird nur <b>den Wert WdMove</b>aufweisen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveRight">
      <MemberSignature Language="C#" Value="public int MoveRight (ref object Unit, ref object Count, ref object Extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveRight([in]object&amp; Unit, [in]object&amp; Count, [in]object&amp; Extend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.MoveRight(System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveRight (Optional ByRef Unit As Object, Optional ByRef Count As Object, Optional ByRef Extend As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Extend" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionale <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />. Die Einheit, um die die Auswahl verschoben werden soll.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die Anzahl der Einheiten, um die Auswahl verschoben werden soll. Der Standardwert ist 1.</param>
        <param name="Extend">Optionales- <b>Objekt</b>. <b>WdMove</b> oder <b>WdExtend</b>kann sein. Wenn <b>WdMove</b> verwendet wird, wird die Auswahl bis zum Endpunkt reduziert und nach rechts verschoben. Wenn <b>WdExtend</b> verwendet wird, wird die Markierung nach rechts erweitert. Der Standardwert ist <b>WdMove</b>.</param>
        <summary>Verschiebt die Markierung nach rechts und gibt die Anzahl der Einheiten, die sie verschoben wurde.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Wenn die <paramref name="Unit" /><b>WdCell</b>, ist die <paramref name="Extend" /> Argument wird nur <b>den Wert WdMove</b>aufweisen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStart">
      <MemberSignature Language="C#" Value="public int MoveStart (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStart([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.MoveStart(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveStart (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionale <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />. Die Einheit, um die Startposition der angegebenen Auswahl, ist verschoben werden soll.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die maximale Anzahl der Einheiten, um die die angegebene Auswahl verschoben werden soll. Wenn <paramref name="Count" /> ist eine positive Zahl, die Startposition der Auswahl im Dokument vorwärts verschoben wird. Wenn es eine negative Zahl ist, wird die Startposition rückwärts verschoben. Wenn die Startposition vorwärts zu einer Position hinter die Endposition verschoben wird, wird die Auswahl reduziert und die Startposition und Endposition werden zusammen verschoben. Der Standardwert ist 1.</param>
        <summary>Verschiebt die Startposition der angegebenen Auswahl.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt eine ganze Zahl, die die Anzahl der Einheiten angibt, um die die Startposition der Auswahl tatsächlich verschoben wurde, oder sie gibt 0 (null) zurück, wenn die Verschiebung nicht erfolgreich war.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStartUntil">
      <MemberSignature Language="C#" Value="public int MoveStartUntil (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStartUntil([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.MoveStartUntil(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveStartUntil (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset">
          <b>Objekt</b>erforderlich. Ein oder mehrere Zeichen. Dieses Argument wird Groß-/Kleinschreibung beachtet.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die maximale Anzahl von Zeichen, um die die angegebene Auswahl verschoben werden soll. Kann eine Zahl oder den <b>WdForward</b> oder <b>WdBackward</b> Konstante. Wenn <paramref name="Count" /> ist eine positive Zahl, die Auswahl im Dokument vorwärts verschoben wird. Wenn es eine negative Zahl ist, wird die Auswahl rückwärts verschoben. Der Standardwert ist <b>WdForward</b>.</param>
        <summary>Verschiebt die Startposition der angegebenen Auswahl, bis eines der angegebenen Zeichen im Dokument gefunden wird.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>, Wenn die Verschiebung im Dokument rückwärts erfolgt, wird die Auswahl erweitert.</para>
          <para>Gibt diese Methode die Anzahl der Zeichen, um die die Startposition der angegebenen Auswahl, als <b>ganze</b> Zahl verschoben, zurück. Wenn <paramref name="Count" /> größer als 0 (null), wird diese Methode gibt die Anzahl der Zeichen, verschoben wurde, plus 1 zurück. Wenn <paramref name="Count" /> ist kleiner als 0 (null), gibt diese Methode die Anzahl der Zeichen, die verschoben wurde, minus 1 zurück. Wenn kein <paramref name="Cset" /> Zeichen gefunden werden, die angegebene Auswahl nicht geändert, und die Methode gibt 0 (null) zurück. Wenn die Startposition vorwärts über die Endposition hinaus verschoben wird, wird die Markierung reduziert und die Startposition und Endposition werden zusammen verschoben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStartWhile">
      <MemberSignature Language="C#" Value="public int MoveStartWhile (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStartWhile([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.MoveStartWhile(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveStartWhile (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset">
          <b>Objekt</b>erforderlich. Ein oder mehrere Zeichen. Dieses Argument wird Groß-/Kleinschreibung beachtet.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die maximale Anzahl von Zeichen, um die die angegebene Auswahl verschoben werden soll. Kann eine Zahl oder den <b>WdForward</b> oder <b>WdBackward</b> Konstante. Wenn <paramref name="Count" /> ist eine positive Zahl, die Auswahl im Dokument vorwärts verschoben wird. Wenn es eine negative Zahl ist, wird die Auswahl rückwärts verschoben. Der Standardwert ist <b>WdForward</b>.</param>
        <summary>Verschiebt die Startposition der angegebenen Auswahl, solange eines der angegebenen Zeichen im Dokument gefunden wird.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Solange beliebige Zeichen in <paramref name="Cset" /> gefunden wird, wird am Anfang der Auswahl Position verschoben wird. Diese Methode gibt die Anzahl der Zeichen, die die Startposition der Auswahl als <b>ganze</b> Zahl verschoben. Wenn dies nicht der <paramref name="Cset" /> Zeichen gefunden werden, die Auswahl nicht geändert, und die Methode gibt 0 (null) zurück. Wenn die Startposition vorwärts zu einer Position hinter der ursprünglichen Endposition verschoben wird, wird die Endposition auf die neuen Startposition festgelegt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveUntil">
      <MemberSignature Language="C#" Value="public int MoveUntil (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveUntil([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.MoveUntil(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveUntil (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(115)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset">
          <b>Objekt</b>erforderlich. Ein oder mehrere Zeichen. Wenn ein beliebiges Zeichen in <paramref name="Cset" /> gefunden wird, bevor die <paramref name="Count" /> Wert läuft ab, das die angegebene Auswahl als Einfügemarke unmittelbar vor diesem Zeichen positioniert wird. Dieses Argument wird Groß-/Kleinschreibung beachtet.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die maximale Anzahl von Zeichen, um die die angegebene Auswahl verschoben werden soll. Kann eine Zahl oder den <b>WdForward</b> oder <b>WdBackward</b> Konstante. Wenn <paramref name="Count" /> ist eine positive Zahl, die Auswahl im Dokument, beginnend an der Endposition vorwärts verschoben wird. Wenn es eine negative Zahl ist, wird die Auswahl rückwärts, beginnend bei der Start-Position verschoben. Der Standardwert ist <b>WdForward</b>.</param>
        <summary>Verschiebt die angegebene Auswahl, bis eines der angegebenen Zeichen im Dokument gefunden wird.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt die Anzahl der Zeichen, um die die angegebene Auswahl, als <b>ganze</b> Zahl verschoben wurde, zurück. Wenn <paramref name="Count" /> größer als 0 (null), wird diese Methode gibt die Anzahl der Zeichen, die verschoben, plus 1 zurück. Wenn <paramref name="Count" /> ist kleiner als 0 (null), gibt diese Methode die Anzahl der Zeichen minus 1 verschoben. Wenn kein <paramref name="Cset" /> Zeichen gefunden werden, die Markierung nicht geändert, und die Methode gibt 0 (null) zurück.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveUp">
      <MemberSignature Language="C#" Value="public int MoveUp (ref object Unit, ref object Count, ref object Extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveUp([in]object&amp; Unit, [in]object&amp; Count, [in]object&amp; Extend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.MoveUp(System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveUp (Optional ByRef Unit As Object, Optional ByRef Count As Object, Optional ByRef Extend As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Extend" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionales- <b>Objekt</b>. Die Einheit, um die Auswahl verschoben werden. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> Konstanten: <b>WdLine</b>, <b>WdParagraph</b>, <b>WdWindow</b> oder <b>WdScreen</b>. Der Standardwert ist <b>WdLine</b>.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die Anzahl der Einheiten, um die Auswahl verschoben werden soll. Der Standardwert ist 1.</param>
        <param name="Extend">Optionales- <b>Objekt</b>. <b>WdMove</b> oder <b>WdExtend</b>kann sein. Wenn <b>WdMove</b> verwendet wird, wird die Auswahl bis zum Endpunkt reduziert und nach oben verschoben. Wenn <b>WdExtend</b> verwendet wird, wird die Markierung nach oben erweitert. Der Standardwert ist <b>WdMove</b>.</param>
        <summary>Verschiebt die Markierung nach oben und gibt die Anzahl der Einheiten, die sie verschoben wurde.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Die <b>WdWindow</b> -Konstante kann verwendet werden, um auf der oberen oder unteren Rand des aktiven Fensters zu verschieben. Unabhängig vom Wert der <paramref name="Count" /> (größer als 1 oder kleiner als – 1), die <b>WdWindow</b> -Konstante wird nur eine Einheit verschoben. Verwenden Sie die <b>WdScreen</b> -Konstante, um mehr als ein Fenster verschieben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveWhile">
      <MemberSignature Language="C#" Value="public int MoveWhile (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveWhile([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.MoveWhile(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveWhile (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset">
          <b>Objekt</b>erforderlich. Ein oder mehrere Zeichen. Dieses Argument wird Groß-/Kleinschreibung beachtet.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die maximale Anzahl von Zeichen, um die die angegebene Auswahl verschoben werden soll. Kann eine Zahl oder den <b>WdForward</b> oder <b>WdBackward</b> Konstante. Wenn <paramref name="Count" /> ist eine positive Zahl, die angegebene Auswahl im Dokument, beginnend an der Endposition vorwärts verschoben wird. Wenn es eine negative Zahl ist, wird die Auswahl rückwärts, beginnend bei der Start-Position verschoben. Der Standardwert ist <b>WdForward</b>.</param>
        <summary>Verschiebt die angegebenen Auswahl, solange eines der angegebenen Zeichen im Dokument gefunden wird.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Solange beliebige Zeichen in <paramref name="Cset" /> gefunden wird, wird die angegebene Auswahl verschoben wird. Das resultierende <see cref="T:Microsoft.Office.Interop.Word.Selection" /> Objekt wird als Einfügemarke nach dem vorzunehmen, was positioniert <paramref name="Cset" /> Zeichen gefunden wurden. Diese Methode gibt die Anzahl der Zeichen, um die die angegebene Auswahl, als <b>ganze</b> Zahl verschoben wurde, zurück. Wenn kein <paramref name="Cset" /> Zeichen gefunden werden, die Auswahl nicht geändert, und die Methode gibt 0 (null) zurück.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Next (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range Next([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Next(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Next (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionales- <b>Objekt</b>. Der Typ der Einheiten, in denen gezählt. Kann eine <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> Konstante.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die Anzahl der Einheiten auf vorn verschoben werden soll. Der Standardwert ist 1.</param>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> -Objekt, das die angegebene Einheit relativ zur angegebenen Auswahl darstellt.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Wenn die Auswahl befindet sich direkt vor dem angegebenen <paramref name="Unit" />, wird die Auswahl in die folgende Einheit verschoben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Field NextField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Field NextField() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.NextField" />
      <MemberSignature Language="VB.NET" Value="Public Function NextField () As Field" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::Field ^ NextField();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(178)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Field</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Markiert das nächste Feld.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Wenn ein Feld gefunden wird, gibt diese Methode einen <see cref="T:Microsoft.Office.Interop.Word.Field" /> -Objekt zurück. Wenn dies nicht der Fall ist, wird <b>Nothing</b>zurückgegeben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextRevision">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Revision NextRevision (ref object Wrap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Revision NextRevision([in]object&amp; Wrap) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.NextRevision(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextRevision (Optional ByRef Wrap As Object) As Revision" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(531)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Revision</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Wrap" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Wrap">Optionales- <b>Objekt</b>. <b>True,</b> um den Vorgang fortzusetzen, Suche nach einer Korrektur am Anfang des Dokuments, wenn das Ende des Dokuments erreicht ist. Der Standardwert lautet <b>False</b>.</param>
        <summary>Sucht und gibt die nächste Überarbeitung als eine <see cref="T:Microsoft.Office.Interop.Word.Revision" /> Objekt.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Den geänderten Text wird die aktuelle Markierung. Verwenden Sie die Eigenschaften des resultierenden <b>Revision</b> -Objekts, welche Art von Änderung es ist, sehen, die sie vorgenommen wurde usw. Verwenden Sie die Methoden des <b>Revision</b> -Objekts zum annehmen oder Ablehnen der Änderung.</para>
          <para>Wenn keine Überarbeitungen vorhanden sind, die aktuelle Auswahl bleibt unverändert.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSubdocument">
      <MemberSignature Language="C#" Value="public void NextSubdocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextSubdocument() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.NextSubdocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub NextSubdocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NextSubdocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verschiebt die Auswahl in das nächste Filialdokument.</summary>
        <remarks>
          <para>Wenn kein weiteres Filialdokument vorhanden ist, tritt ein Fehler auf.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProofing">
      <MemberSignature Language="C#" Value="public int NoProofing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NoProofing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.NoProofing" />
      <MemberSignature Language="VB.NET" Value="Public Property NoProofing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NoProofing { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1005)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob der Rechtschreib- und grammatikprüfung ignoriert den angegebenen Text.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt true, wenn der Rechtschreib- und grammatikprüfung ignoriert den angegebenen Text.</para>
          <para>Diese Eigenschaft gibt <b>wdUndefined zurück</b> , wenn die <b>NoProofing</b> -Eigenschaft nur für einen Teil des angegebenen Texts auf <b>True</b> festgelegt ist.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OMaths">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.OMaths OMaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.OMaths OMaths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.OMaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OMaths As OMaths" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::OMaths ^ OMaths { Microsoft::Office::Interop::Word::OMaths ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.OMaths</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.OMaths" /> -Auflistung darstellt, die die <see cref="T:Microsoft.Office.Interop.Word.OMath" /> Objekte innerhalb der aktuellen Auswahl. Schreibgeschützt.</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.OMaths" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdTextOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdTextOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As WdTextOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdTextOrientation Orientation { Microsoft::Office::Interop::Word::WdTextOrientation get(); void set(Microsoft::Office::Interop::Word::WdTextOrientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdTextOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder festlegen die Ausrichtung von Text in einer Auswahl, wenn die Richtung der Text-Funktion aktiviert ist.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Einige der <see cref="T:Microsoft.Office.Interop.Word.WdTextOrientation" /> Konstanten möglicherweise nicht zur Verfügung, abhängig von der Unterstützung der Sprache (Englisch USA), beispielsweise), die Sie ausgewählt oder installiert haben.</para>
          <para>Können Sie die Ausrichtung für einen Textrahmen oder einem Bereich oder einer Auswahl, die in einem Textrahmen erfolgt zufällig festlegen. Informationen zu den Unterschieden zwischen einem Textrahmen und einem Textfeld finden Sie unter der <see cref="T:Microsoft.Office.Interop.Word.TextFrame" /> -Objekt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.PageSetup PageSetup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::PageSetup ^ PageSetup { Microsoft::Office::Interop::Word::PageSetup ^ get(); void set(Microsoft::Office::Interop::Word::PageSetup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.PageSetup" /> -Objekt, das die angegebene Auswahl zugeordnet ist.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ParagraphFormat ParagraphFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ParagraphFormat ParagraphFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.ParagraphFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ParagraphFormat As ParagraphFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ParagraphFormat ^ ParagraphFormat { Microsoft::Office::Interop::Word::ParagraphFormat ^ get(); void set(Microsoft::Office::Interop::Word::ParagraphFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ParagraphFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder Festlegen einer <see cref="T:Microsoft.Office.Interop.Word.ParagraphFormat" /> -Objekt, das die Absatz Einstellungen für die angegebene Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraphs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Paragraphs Paragraphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Paragraphs Paragraphs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Paragraphs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraphs As Paragraphs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Paragraphs ^ Paragraphs { Microsoft::Office::Interop::Word::Paragraphs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Paragraphs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Paragraphs" /> -Auflistung, die alle Absätze in der angegebenen Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein Objekt zurück, das das übergeordnete Objekt des angegebenen Objekts darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ContentControl ParentContentControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ContentControl ParentContentControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.ParentContentControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentContentControl As ContentControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ContentControl ^ ParentContentControl { Microsoft::Office::Interop::Word::ContentControl ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1035)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1035)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ContentControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.ContentControl" /> -Objekt, das übergeordnete Inhaltssteuerelement für den angegebenen Bereich darstellt. Schreibgeschützt.</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.ContentControl" />
        </value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>Null</b> zurück, wenn kein übergeordnetes Inhaltssteuerelement für den angegebenen Bereich vorhanden ist.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fügt den Inhalt der Zwischenablage an der angegebenen Auswahl ein.</summary>
        <remarks>
          <para>Wenn Sie nicht den Inhalt der Auswahl nicht ersetzen möchten, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Selection.Collapse(System.Object@)" /> Methode, bevor Sie mit dieser Methode.</para>
          <para>Bei dieser Methode mit einem <see cref="T:Microsoft.Office.Interop.Word.Range" /> -Objekts, der Bereich erweitert, um den Inhalt der Zwischenablage einzuschließen. Wenn diese Methode verwendet wird, mit einem <see cref="T:Microsoft.Office.Interop.Word.Selection" /> -Objekts, die Auswahl nicht erweitert, um den Inhalt der Zwischenablage; einschließen Stattdessen wird die Auswahl hinter den eingefügten Inhalt der Zwischenablage positioniert.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAndFormat">
      <MemberSignature Language="C#" Value="public void PasteAndFormat (Microsoft.Office.Interop.Word.WdRecoveryType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAndFormat([in]valuetype Microsoft.Office.Interop.Word.WdRecoveryType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.PasteAndFormat(Microsoft.Office.Interop.Word.WdRecoveryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteAndFormat (Type As WdRecoveryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteAndFormat(Microsoft::Office::Interop::Word::WdRecoveryType Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Word.WdRecoveryType" />
      </Parameters>
      <Docs>
        <param name="Type">Erforderliche <see cref="T:Microsoft.Office.Interop.Word.WdRecoveryType" />. Die Art der Formatierung, die beim Einfügen der markierten Tabellenzellen zu verwenden ist.</param>
        <summary>Fügt die markierten Tabellenzellen ein, und formatiert sie wie angegeben.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAppendTable">
      <MemberSignature Language="C#" Value="public void PasteAppendTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAppendTable() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.PasteAppendTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteAppendTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteAppendTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1010)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verbindet die eingefügten Zellen mit der vorhandenen Tabelle, indem die eingefügten Zeilen zwischen die markierten Zellen eingefügt werden.</summary>
        <remarks>
          <para>Mit dieser Methode werden keine Zellen überschrieben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAsNestedTable">
      <MemberSignature Language="C#" Value="public void PasteAsNestedTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAsNestedTable() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.PasteAsNestedTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteAsNestedTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteAsNestedTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(533)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fügt eine oder mehrere Zellen als geschachtelte Tabelle in den markierten Bereich ein.</summary>
        <remarks>
          <para>Sie können <b>PasteAsNestedTable</b> nur, wenn die Zwischenablage eine Zelle enthält oder Gruppe von Zellen und der markierte Bereich eine Zelle oder eine Gruppe von Zellen im aktuellen Dokument ist.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteExcelTable">
      <MemberSignature Language="C#" Value="public void PasteExcelTable (bool LinkedToExcel, bool WordFormatting, bool RTF);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteExcelTable([in]bool LinkedToExcel, [in]bool WordFormatting, [in]bool RTF) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.PasteExcelTable(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteExcelTable (LinkedToExcel As Boolean, WordFormatting As Boolean, RTF As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteExcelTable(bool LinkedToExcel, bool WordFormatting, bool RTF);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1014)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LinkedToExcel" Type="System.Boolean" />
        <Parameter Name="WordFormatting" Type="System.Boolean" />
        <Parameter Name="RTF" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="LinkedToExcel">Erforderlicher <b>boolescher Wert</b>. 						Wenn dieser Wert <b>True</b> ist, wird die eingefügte Tabelle mit der ursprünglichen Excel-Datei verknüpft, sodass die an der Excel-Datei vorgenommenen Änderungen in Microsoft Word übernommen werden.</param>
        <param name="WordFormatting">Erforderlicher <b>boolescher Wert</b>. <b>True,</b> formatiert die Tabelle mithilfe der Formatierung im Word-Dokument. <b>Falsch</b> formatiert die Tabelle entsprechend der ursprünglichen Excel-Datei.</param>
        <param name="RTF">Erforderlicher <b>boolescher Wert</b>. <b>True</b> fügt die Excel-Tabelle unter Verwendung von Rich Text Format (RTF); <b>False</b> fügt die Excel-Tabelle als HTML.</param>
        <summary>Fügt eine Microsoft Excel-Tabelle ein und formatiert sie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteFormat">
      <MemberSignature Language="C#" Value="public void PasteFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteFormat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.PasteFormat" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteFormat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteFormat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wendet die Formatierung kopiert, mit der <see cref="M:Microsoft.Office.Interop.Word.Selection.CopyFormat" /> -Methode, um die Auswahl.</summary>
        <remarks>
          <para>Wenn eine Absatzmarke wurde ausgewählt, wenn die <see cref="M:Microsoft.Office.Interop.Word.Selection.CopyFormat" /> -Methode verwendet wurde, Microsoft Word Absatzformat zusätzlich zum zeichenformatierung.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (ref object IconIndex, ref object Link, ref object Placement, ref object DisplayAsIcon, ref object DataType, ref object IconFileName, ref object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial([in]object&amp; IconIndex, [in]object&amp; Link, [in]object&amp; Placement, [in]object&amp; DisplayAsIcon, [in]object&amp; DataType, [in]object&amp; IconFileName, [in]object&amp; IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.PasteSpecial(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteSpecial (Optional ByRef IconIndex As Object, Optional ByRef Link As Object, Optional ByRef Placement As Object, Optional ByRef DisplayAsIcon As Object, Optional ByRef DataType As Object, Optional ByRef IconFileName As Object, Optional ByRef IconLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="IconIndex" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Link" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Placement" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DataType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="IconIndex">Optionales- <b>Objekt</b>. Wenn <paramref name="DisplayAsIcon" /><b>True</b>, wird dieses Argument ist eine Zahl, die das Symbol entspricht, in der vom angegebenen Programmdatei verwenden soll <paramref name="IconFilename" />. Symbole werden im Dialogfeld Symbol ändern (Menü Einfügen, Befehl Objekt, Registerkarte neu erstellen): 0 (null) entspricht dem ersten Symbol, 1 entspricht dem zweiten Symbol usw.. Wenn dieses Argument ausgelassen wird, wird das erste Symbol (Standard) verwendet.</param>
        <param name="Link">Optionales- <b>Objekt</b>. <b>True</b> , wenn eine Verknüpfung zur Quelldatei des Inhalts der Zwischenablage zu erstellen. Der Standardwert lautet <b>False</b>.</param>
        <param name="Placement">Optionales- <b>Objekt</b>. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdOLEPlacement" /> Konstanten: <b>WdFloatOverText</b> oder <b>WdInLine</b>. Der Standardwert ist <b>WdInLine</b>.</param>
        <param name="DisplayAsIcon">Optionales- <b>Objekt</b>. Optionales- <b>Objekt</b>. <b>True</b> , wenn die Verknüpfung als Symbol anzuzeigen. Der Standardwert lautet <b>False</b>.</param>
        <param name="DataType">Optionales- <b>Objekt</b>. Ein Format für den Inhalt der Zwischenablage, wenn dieser in das Dokument eingefügt wird. <see cref="T:Microsoft.Office.Interop.Word.WdPasteDataType" />.</param>
        <param name="IconFileName">Optionales- <b>Objekt</b>. Wenn <paramref name="DisplayAsIcon" /><b>True</b>, ist dieses Argument der Pfad und der Dateiname für die Datei, in dem das anzuzeigende Symbol gespeichert, ist.</param>
        <param name="IconLabel">Optionales- <b>Objekt</b>. Wenn <paramref name="DisplayAsIcon" /><b>True</b>, ist dieses Argument der Text, der unterhalb des Symbols angezeigt wird.</param>
        <summary>Fügt den Inhalt der Zwischenablage ein.</summary>
        <remarks>
          <para>Wenn Sie nicht den Inhalt der angegebenen Auswahl nicht ersetzen möchten, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.Selection.Collapse(System.Object@)" /> -Methode auf, bevor Sie diese Methode verwenden. Wenn Sie diese Methode verwenden, wird die Auswahl erweitert, um den Inhalt der Zwischenablage einzuschließen.</para>
          <para>Im Gegensatz zu mit der <see cref="M:Microsoft.Office.Interop.Word.Selection.Paste" /> -Methode, mit der <b>PasteSpecial</b> können Sie das Format der eingefügten Informationen steuern und (optional) eine Verknüpfung zur Quelldatei (beispielsweise ein Microsoft Excel-Arbeitsblatt) herstellen.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Previous (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range Previous([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Previous(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Previous (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionales- <b>Objekt</b>. <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />.</param>
        <param name="Count">Optionales- <b>Objekt</b>. Die Anzahl der Einheiten zurück verschieben soll. Der Standardwert ist 1.</param>
        <summary>Gibt eine <see cref="P:Microsoft.Office.Interop.Word.Selection.Range" /> Objekt relativ zur angegebenen Auswahl.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Wenn die Auswahl befindet sich unmittelbar nach dem angegebenen <paramref name="Unit" />, wird die Markierung zur vorherigen Einheit verschoben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousBookmarkID">
      <MemberSignature Language="C#" Value="public int PreviousBookmarkID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreviousBookmarkID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.PreviousBookmarkID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousBookmarkID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreviousBookmarkID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(309)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(309)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Anzahl der letzten Lesezeichens, das vor oder an derselben Stelle wie die angegebene Auswahl beginnt, oder gibt 0 (null) zurück, wenn keine entsprechende Textmarke vorhanden ist.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Field PreviousField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Field PreviousField() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.PreviousField" />
      <MemberSignature Language="VB.NET" Value="Public Function PreviousField () As Field" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::Field ^ PreviousField();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(177)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Field</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Das vorherige Feld markiert.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Wenn ein Feld gefunden wird, gibt diese Methode einen <see cref="T:Microsoft.Office.Interop.Word.Field" /> -Objekt zurück. Wenn dies nicht der Fall ist, wird <b>Nothing</b>zurückgegeben.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousRevision">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Revision PreviousRevision (ref object Wrap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Revision PreviousRevision([in]object&amp; Wrap) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.PreviousRevision(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreviousRevision (Optional ByRef Wrap As Object) As Revision" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(532)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Revision</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Wrap" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Wrap">Optionales- <b>Objekt</b>. <b>True,</b> um den Vorgang fortzusetzen, Suche nach einer Korrektur am Ende des Dokuments, wenn der Anfang des Dokuments erreicht wurde. Der Standardwert lautet <b>False</b>.</param>
        <summary>Sucht und gibt die vorherige Überarbeitung als eine <see cref="T:Microsoft.Office.Interop.Word.Revision" /> Objekt.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSubdocument">
      <MemberSignature Language="C#" Value="public void PreviousSubdocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreviousSubdocument() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.PreviousSubdocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreviousSubdocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreviousSubdocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(515)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verschiebt die Auswahl zum vorherigen Filialdokument.</summary>
        <remarks>
          <para>Wenn kein weiteres Filialdokument vorhanden ist, tritt ein Fehler auf.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Range { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range Range" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Range" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Range ^ Range { Microsoft::Office::Interop::Word::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Range" /> -Objekt, das den Teil eines Dokuments darstellt, der im angegebenen Objekt enthalten ist.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Informationen darüber, wie einen Bereich aus einem Dokument oder ein Formbereich aus einer Auflistung von Formen finden Sie unter der <see cref="M:Microsoft.Office.Interop.Word.Shapes.Range(System.Object@)" /> Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingModeGrowFont">
      <MemberSignature Language="C#" Value="public void ReadingModeGrowFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadingModeGrowFont() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ReadingModeGrowFont" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadingModeGrowFont ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadingModeGrowFont();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1037)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
		Vergrößert den angezeigten Text um einen Schriftgrad, wenn das Dokument im Lesemodus angezeigt wird.</summary>
        <remarks>
          <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Word.Selection.ReadingModeShrinkFont" /> -Methode, um den Text zu verkleinern. Dies hat keinen Einfluss auf die Größe der Schriftart in das Dokument, nur die Größe des Texts klicken Sie beim Anzeigen des Dokuments im Lesemodus.</para>
          <para>
            <b>Hinweis</b>: Text muss nicht aktiviert sein, damit diese Methode, um den Text im Lesemodus angezeigt auswirken. Textgröße für den gesamten Text im Lesemodus angezeigt wird beeinflusst.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingModeShrinkFont">
      <MemberSignature Language="C#" Value="public void ReadingModeShrinkFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadingModeShrinkFont() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ReadingModeShrinkFont" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadingModeShrinkFont ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadingModeShrinkFont();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
		Verkleinert den angezeigten Text um einen Schriftgrad, wenn das Dokument im Lesemodus angezeigt wird.</summary>
        <remarks>
          <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Word.Selection.ReadingModeGrowFont" /> -Methode, um die Größe des Texts erhöhen. Dies hat keinen Einfluss auf die Größe der Schriftart in das Dokument, nur die Größe des Texts klicken Sie beim Anzeigen des Dokuments im Lesemodus.</para>
          <para>
            <b>Hinweis</b>: Text muss nicht aktiviert sein, damit diese Methode, um den Text im Lesemodus angezeigt auswirken. Textgröße für den gesamten Text im Lesemodus angezeigt wird beeinflusst.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Rows Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Rows Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Rows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Rows ^ Rows { Microsoft::Office::Interop::Word::Rows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Rows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Rows" /> -Auflistung, die alle Tabellenzeilen in einer Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RtlPara">
      <MemberSignature Language="C#" Value="public void RtlPara ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RtlPara() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.RtlPara" />
      <MemberSignature Language="VB.NET" Value="Public Sub RtlPara ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RtlPara();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(605)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt die angegebenen Absätze auf Leserichtung und Ausrichtung von rechts nach links fest.</summary>
        <remarks>
          <para>Für alle ausgewählten Absätze diese Methode die leserichtung auf von rechts-nach-links festgelegt. Wenn ein Absatz mit einer leserichtung von links-nach-rechts auch linksbündig ausgerichtet ist, wird diese Methode macht die Lesereihenfolge und die Ausrichtung des Absatzes auf Rechtsbündig festgelegt.</para>
          <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Word.Paragraph.ReadingOrder" /> -Eigenschaft die Lesereihenfolge geändert, ohne die Ausrichtung des Absatzes.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RtlRun">
      <MemberSignature Language="C#" Value="public void RtlRun ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RtlRun() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.RtlRun" />
      <MemberSignature Language="VB.NET" Value="Public Sub RtlRun ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RtlRun();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(600)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt die angegebene Textfolge auf Leserichtung und Ausrichtung von rechts nach links fest.</summary>
        <remarks>
          <para>Für die angegebene Textfolge, wird diese Methode die leserichtung auf rechts-nach-links. Wenn ein Absatz im Lauf mit einer leserichtung von links-nach-rechts auch linksbündig ausgerichtet ist, diese Methode macht die Lesereihenfolge und wird die Ausrichtung des Absatzes auf Rechtsbündig.</para>
          <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Word.Paragraph.ReadingOrder" /> -Eigenschaft die Lesereihenfolge geändert, ohne die Ausrichtung des Absatzes.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sections">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Sections Sections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Sections Sections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Sections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sections As Sections" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Sections ^ Sections { Microsoft::Office::Interop::Word::Sections ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Sections</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Sections" /> -Auflistung, die die Abschnitte in der angegebenen Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65535)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wählt das angegebene Objekt aus.</summary>
        <remarks>
          <para>Nach Verwendung dieser Methode können Sie die <see cref="P:Microsoft.Office.Interop.Word.Pane.Selection" /> Eigenschaft, um mit den ausgewählten Elementen arbeiten.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCell">
      <MemberSignature Language="C#" Value="public void SelectCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectCell() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SelectCell" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectCell ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectCell();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Markiert die gesamte Zelle, in der sich die aktuelle Markierung befindet.</summary>
        <remarks>
          <para>Wenn Sie diese Methode verwenden, muss die aktuelle Markierung in einer einzelnen Zelle enthalten sein.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectColumn">
      <MemberSignature Language="C#" Value="public void SelectColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectColumn() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SelectColumn" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectColumn ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectColumn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Markiert die Spalte mit der Einfügemarke oder alle Spalten mit der Markierung.</summary>
        <remarks>
          <para>Wenn die Markierung in einer Tabelle befindet, tritt ein Fehler auf.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCurrentAlignment">
      <MemberSignature Language="C#" Value="public void SelectCurrentAlignment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectCurrentAlignment() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SelectCurrentAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectCurrentAlignment ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectCurrentAlignment();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(518)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erweitert die Markierung nach vorn, bis eine andere Absatzausrichtung auftritt.</summary>
        <remarks>
          <para>Es gibt vier Arten der absatzausrichtung: linke, zentriert, rechtsbündig und Blocksatz.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCurrentColor">
      <MemberSignature Language="C#" Value="public void SelectCurrentColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectCurrentColor() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SelectCurrentColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectCurrentColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectCurrentColor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erweitert die Markierung nach vorn, bis Text mit einer anderen Farbe auftritt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCurrentFont">
      <MemberSignature Language="C#" Value="public void SelectCurrentFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectCurrentFont() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SelectCurrentFont" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectCurrentFont ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectCurrentFont();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erweitert die Markierung nach vorn, bis Text mit einer anderen Schriftart oder einem anderen Schriftgrad auftritt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCurrentIndent">
      <MemberSignature Language="C#" Value="public void SelectCurrentIndent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectCurrentIndent() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SelectCurrentIndent" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectCurrentIndent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectCurrentIndent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(520)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erweitert die Markierung nach vorn, bis Text mit anderen linken oder rechten Absatzeinzügen auftritt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCurrentSpacing">
      <MemberSignature Language="C#" Value="public void SelectCurrentSpacing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectCurrentSpacing() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SelectCurrentSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectCurrentSpacing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectCurrentSpacing();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(519)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erweitert die Markierung nach vorn, bis ein Absatz mit einem anderen Zeilenabstand auftritt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCurrentTabs">
      <MemberSignature Language="C#" Value="public void SelectCurrentTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectCurrentTabs() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SelectCurrentTabs" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectCurrentTabs ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectCurrentTabs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(521)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erweitert die Markierung nach vorn, bis ein Absatz mit anderen Tabstopps auftritt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectRow">
      <MemberSignature Language="C#" Value="public void SelectRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectRow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SelectRow" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectRow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectRow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(525)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Markiert die Zeile mit der Einfügemarke oder alle Zeilen der Markierung.</summary>
        <remarks>
          <para>Wenn die Markierung in einer Tabelle befindet, tritt ein Fehler auf.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sentences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Sentences Sentences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Sentences Sentences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Sentences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sentences As Sentences" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Sentences ^ Sentences { Microsoft::Office::Interop::Word::Sentences ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Sentences</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Sentences" /> -Auflistung, die alle Sätze in der Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public void SetRange (int Start, int End);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange([in]int32 Start, [in]int32 End) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRange (Start As Integer, End As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRange(int Start, int End);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="End" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Start">
          <b>Integer</b>erforderlich. Die Anfangszeichenposition der Auswahl.</param>
        <param name="End">
          <b>Integer</b>erforderlich. Die Endzeichenposition der Auswahl.</param>
        <summary>Legt die Anfangs- und Endzeichenposition für die Auswahl fest.</summary>
        <remarks>
          <para>Position Zeichenwerte starten am Anfang des Textabschnitts, wobei der erste Wert 0 (null). Alle Zeichen werden gezählt, einschließlich der nicht druckbare Zeichen. Ausgeblendete Zeichen werden gezählt, auch wenn sie nicht angezeigt werden.</para>
          <para>Die <b>SetRange</b> -Methode definiert die Anfangs- und Endposition eines vorhandenen <see cref="T:Microsoft.Office.Interop.Word.Selection" /> oder <see cref="T:Microsoft.Office.Interop.Word.Range" /> Objekt. Diese Methode unterscheidet sich von der <see cref="P:Microsoft.Office.Interop.Word.Selection.Range" /> -Methode, die verwendet wird, um einen Bereich zu erstellen, wenn eine Anfangs- und Endposition.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shading">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shading Shading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Shading Shading" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Shading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shading As Shading" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Shading ^ Shading { Microsoft::Office::Interop::Word::Shading ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shading</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <see cref="T:Microsoft.Office.Interop.Word.Shading" /> Objekt, das auf die Formatierung der Schattierung des angegebenen Objekts verweist.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ShapeRange ShapeRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ShapeRange ShapeRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.ShapeRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShapeRange As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ShapeRange ^ ShapeRange { Microsoft::Office::Interop::Word::ShapeRange ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1004)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1004)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ShapeRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> -Auflistung, die alle stellt die <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekte im angegebenen Bereich oder der Markierung.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Der Formenbereich kann Zeichnungen, Formen, Bilder, OLE-Objekte, ActiveX-Steuerelemente, Textobjekte und Legenden enthalten.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shrink">
      <MemberSignature Language="C#" Value="public void Shrink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shrink() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Shrink" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shrink ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shrink();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verkleinert die Auswahl auf die nächstkleinere Texteinheit.</summary>
        <remarks>
          <para>Der Fortschritt der textbezogene Einheiten lautet wie folgt: ganzes Dokument, Abschnitt, Absatz, Satz, Wort, Einfügemarke.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkDiscontiguousSelection">
      <MemberSignature Language="C#" Value="public void ShrinkDiscontiguousSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShrinkDiscontiguousSelection() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ShrinkDiscontiguousSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShrinkDiscontiguousSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShrinkDiscontiguousSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1019)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hebt die Auswahl alle mit Ausnahme des zuletzt markierten Texts auf, wenn eine Auswahl mehrerer enthält Markierungen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::SmartTags ^ SmartTags { Microsoft::Office::Interop::Word::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1015)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1015)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.SmartTags" /> -Objekt, das ein Smarttag in einem Dokument darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (ref object ExcludeHeader, ref object FieldNumber, ref object SortFieldType, ref object SortOrder, ref object FieldNumber2, ref object SortFieldType2, ref object SortOrder2, ref object FieldNumber3, ref object SortFieldType3, ref object SortOrder3, ref object SortColumn, ref object Separator, ref object CaseSensitive, ref object BidiSort, ref object IgnoreThe, ref object IgnoreKashida, ref object IgnoreDiacritics, ref object IgnoreHe, ref object LanguageID, ref object SubFieldNumber, ref object SubFieldNumber2, ref object SubFieldNumber3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort([in]object&amp; ExcludeHeader, [in]object&amp; FieldNumber, [in]object&amp; SortFieldType, [in]object&amp; SortOrder, [in]object&amp; FieldNumber2, [in]object&amp; SortFieldType2, [in]object&amp; SortOrder2, [in]object&amp; FieldNumber3, [in]object&amp; SortFieldType3, [in]object&amp; SortOrder3, [in]object&amp; SortColumn, [in]object&amp; Separator, [in]object&amp; CaseSensitive, [in]object&amp; BidiSort, [in]object&amp; IgnoreThe, [in]object&amp; IgnoreKashida, [in]object&amp; IgnoreDiacritics, [in]object&amp; IgnoreHe, [in]object&amp; LanguageID, [in]object&amp; SubFieldNumber, [in]object&amp; SubFieldNumber2, [in]object&amp; SubFieldNumber3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (Optional ByRef ExcludeHeader As Object, Optional ByRef FieldNumber As Object, Optional ByRef SortFieldType As Object, Optional ByRef SortOrder As Object, Optional ByRef FieldNumber2 As Object, Optional ByRef SortFieldType2 As Object, Optional ByRef SortOrder2 As Object, Optional ByRef FieldNumber3 As Object, Optional ByRef SortFieldType3 As Object, Optional ByRef SortOrder3 As Object, Optional ByRef SortColumn As Object, Optional ByRef Separator As Object, Optional ByRef CaseSensitive As Object, Optional ByRef BidiSort As Object, Optional ByRef IgnoreThe As Object, Optional ByRef IgnoreKashida As Object, Optional ByRef IgnoreDiacritics As Object, Optional ByRef IgnoreHe As Object, Optional ByRef LanguageID As Object, Optional ByRef SubFieldNumber As Object, Optional ByRef SubFieldNumber2 As Object, Optional ByRef SubFieldNumber3 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1023)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ExcludeHeader" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="BidiSort" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreThe" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreKashida" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreDiacritics" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreHe" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SubFieldNumber" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SubFieldNumber2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SubFieldNumber3" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ExcludeHeader">Optionales- <b>Objekt</b>. <b>True</b> , wenn die Kopfzeile der erste Zeile oder Absatz wird vom Sortiervorgang ausgeschlossen werden. Der Standardwert lautet <b>False</b>.</param>
        <param name="FieldNumber">Optionales- <b>Objekt</b>. Die Felder, nach dem sortiert werden soll. Microsoft Word sortiert nach <paramref name="FieldNumber" />, dann nach <paramref name="FieldNumber2" />, und klicken Sie dann durch <paramref name="FieldNumber3" />.</param>
        <param name="SortFieldType">Optionales- <b>Objekt</b>. Die jeweilige Sortierung Typen für <paramref name="FieldNumber" />, <paramref name="FieldNumber2" />, und <paramref name="FieldNumber3" />. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> Konstanten.</param>
        <param name="SortOrder">Optionales- <b>Objekt</b>. Die Sortierreihenfolge beim Sortieren zu verwendende <paramref name="FieldNumber" />, <paramref name="FieldNumber2" />, und <paramref name="FieldNumber3" />. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> Konstanten.</param>
        <param name="FieldNumber2">Optionales- <b>Objekt</b>. Die Felder, nach dem sortiert werden soll. Word sortiert nach <paramref name="FieldNumber" />, dann nach <paramref name="FieldNumber2" />, und klicken Sie dann durch <paramref name="FieldNumber3" />.</param>
        <param name="SortFieldType2">Optionales- <b>Objekt</b>. Die jeweilige Sortierung Typen für <paramref name="FieldNumber" />, <paramref name="FieldNumber2" />, und <paramref name="FieldNumber3" />. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> Konstanten.</param>
        <param name="SortOrder2">Optionales- <b>Objekt</b>. Die Sortierreihenfolge beim Sortieren zu verwendende <paramref name="FieldNumber" />, <paramref name="FieldNumber2" />, und <paramref name="FieldNumber3" />. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> Konstanten.</param>
        <param name="FieldNumber3">Optionales- <b>Objekt</b>. Die Felder, nach dem sortiert werden soll. Word sortiert nach <paramref name="FieldNumber" />, dann nach <paramref name="FieldNumber2" />, und klicken Sie dann durch <paramref name="FieldNumber3" />.</param>
        <param name="SortFieldType3">Optionales- <b>Objekt</b>. Die jeweilige Sortierung Typen für <paramref name="FieldNumber" />, <paramref name="FieldNumber2" />, und <paramref name="FieldNumber3" />. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> Konstanten.</param>
        <param name="SortOrder3">Optionales- <b>Objekt</b>. Die Sortierreihenfolge beim Sortieren zu verwendende <paramref name="FieldNumber" />, <paramref name="FieldNumber2" />, und <paramref name="FieldNumber3" />. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> Konstanten.</param>
        <param name="SortColumn">Optionales- <b>Objekt</b>. <b>True,</b> um nur die durch angegebene Spalte zu sortieren der <see cref="T:Microsoft.Office.Interop.Word.Selection" /> Objekt.</param>
        <param name="Separator">Optionales- <b>Objekt</b>. Die Art des Feldtrennzeichens. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdSortSeparator" /> Konstanten.</param>
        <param name="CaseSensitive">Optionales- <b>Objekt</b>. <b>True,</b> um mit Groß-und Kleinschreibung zu sortieren. Der Standardwert lautet <b>False</b>.</param>
        <param name="BidiSort">Optionales- <b>Objekt</b>. <b>True</b> zum Sortieren basierend auf rechts-nach-links-Sprache-Regeln. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <param name="IgnoreThe">Optionales- <b>Objekt</b>. <b>True</b> , wenn das arabische Zeichen ignorieren <paramref name="alef lam" /> beim Sortieren von Text in einer rechts-nach-links-Sprache. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <param name="IgnoreKashida">Optionales- <b>Objekt</b>. <b>True</b> , wenn beim Sortieren von Text in rechts-nach-links-Sprache Kashidas zu ignorieren. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <param name="IgnoreDiacritics">Optionales- <b>Objekt</b>. <b>True</b> , wenn beim Sortieren von Text in einer rechts-nach-links-Sprache bidirektionale Steuerzeichen ignorieren. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <param name="IgnoreHe">Optionales- <b>Objekt</b>. <b>True</b> , wenn das hebräische Zeichen ignorieren <paramref name="he" /> beim Sortieren von Text in einer rechts-nach-links-Sprache. Je nach ausgewählter oder installierter Sprachunterstützung, beispielsweise Deutsch (Standard), ist dieses Argument für Sie möglicherweise nicht verfügbar.</param>
        <param name="LanguageID">Optionales- <b>Objekt</b>. <paramref name="LanguageIDOptional" />- <b>Objekt</b>. Gibt die Sortiersprache an. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> Konstanten. Verweisen auf den Objektkatalog für eine Liste mit den <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> Konstanten.</param>
        <param name="SubFieldNumber">Optionales- <b>Objekt</b>. (Gilt für das Selection-Objekt).</param>
        <param name="SubFieldNumber2">Optionales- <b>Objekt</b>. (Gilt für das Selection-Objekt).</param>
        <param name="SubFieldNumber3">Optionales- <b>Objekt</b>. (Gilt für das Selection-Objekt).</param>
        <summary>Sortiert die Absätze in der angegebenen Auswahl.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort2000">
      <MemberSignature Language="C#" Value="public void Sort2000 (ref object ExcludeHeader, ref object FieldNumber, ref object SortFieldType, ref object SortOrder, ref object FieldNumber2, ref object SortFieldType2, ref object SortOrder2, ref object FieldNumber3, ref object SortFieldType3, ref object SortOrder3, ref object SortColumn, ref object Separator, ref object CaseSensitive, ref object BidiSort, ref object IgnoreThe, ref object IgnoreKashida, ref object IgnoreDiacritics, ref object IgnoreHe, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort2000([in]object&amp; ExcludeHeader, [in]object&amp; FieldNumber, [in]object&amp; SortFieldType, [in]object&amp; SortOrder, [in]object&amp; FieldNumber2, [in]object&amp; SortFieldType2, [in]object&amp; SortOrder2, [in]object&amp; FieldNumber3, [in]object&amp; SortFieldType3, [in]object&amp; SortOrder3, [in]object&amp; SortColumn, [in]object&amp; Separator, [in]object&amp; CaseSensitive, [in]object&amp; BidiSort, [in]object&amp; IgnoreThe, [in]object&amp; IgnoreKashida, [in]object&amp; IgnoreDiacritics, [in]object&amp; IgnoreHe, [in]object&amp; LanguageID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.Sort2000(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort2000 (Optional ByRef ExcludeHeader As Object, Optional ByRef FieldNumber As Object, Optional ByRef SortFieldType As Object, Optional ByRef SortOrder As Object, Optional ByRef FieldNumber2 As Object, Optional ByRef SortFieldType2 As Object, Optional ByRef SortOrder2 As Object, Optional ByRef FieldNumber3 As Object, Optional ByRef SortFieldType3 As Object, Optional ByRef SortOrder3 As Object, Optional ByRef SortColumn As Object, Optional ByRef Separator As Object, Optional ByRef CaseSensitive As Object, Optional ByRef BidiSort As Object, Optional ByRef IgnoreThe As Object, Optional ByRef IgnoreKashida As Object, Optional ByRef IgnoreDiacritics As Object, Optional ByRef IgnoreHe As Object, Optional ByRef LanguageID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ExcludeHeader" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="BidiSort" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreThe" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreKashida" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreDiacritics" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreHe" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ExcludeHeader">To be added.</param>
        <param name="FieldNumber">To be added.</param>
        <param name="SortFieldType">To be added.</param>
        <param name="SortOrder">To be added.</param>
        <param name="FieldNumber2">To be added.</param>
        <param name="SortFieldType2">To be added.</param>
        <param name="SortOrder2">To be added.</param>
        <param name="FieldNumber3">To be added.</param>
        <param name="SortFieldType3">To be added.</param>
        <param name="SortOrder3">To be added.</param>
        <param name="SortColumn">To be added.</param>
        <param name="Separator">To be added.</param>
        <param name="CaseSensitive">To be added.</param>
        <param name="BidiSort">To be added.</param>
        <param name="IgnoreThe">To be added.</param>
        <param name="IgnoreKashida">To be added.</param>
        <param name="IgnoreDiacritics">To be added.</param>
        <param name="IgnoreHe">To be added.</param>
        <param name="LanguageID">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortAscending">
      <MemberSignature Language="C#" Value="public void SortAscending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortAscending() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SortAscending" />
      <MemberSignature Language="VB.NET" Value="Public Sub SortAscending ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SortAscending();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sortiert Absätze oder Tabellenzeilen in aufsteigender alphanumerischer Reihenfolge.</summary>
        <remarks>
          <para>Der erste Absatz oder die erste Tabellenzeile wird als Steuersatz angesehen und nicht in die Sortierung einbezogen. Verwendung der <see cref="M:Microsoft.Office.Interop.Word.Selection.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> -Methode, um den Steuersatz in eine Sortierung einzubeziehen.</para>
          <para>Diese Methode stellt eine vereinfachte Form der Sortierung für die direkte Verwendung zum Seriendruckdaten, die Datenquellen Spalten der Daten enthalten. Verwenden Sie für die meisten Sortierung Aufgaben, die <see cref="M:Microsoft.Office.Interop.Word.Selection.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> -Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortByHeadings">
      <MemberSignature Language="C#" Value="public void SortByHeadings (ref object SortFieldType, ref object SortOrder, ref object CaseSensitive, ref object BidiSort, ref object IgnoreThe, ref object IgnoreKashida, ref object IgnoreDiacritics, ref object IgnoreHe, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortByHeadings([in]object&amp; SortFieldType, [in]object&amp; SortOrder, [in]object&amp; CaseSensitive, [in]object&amp; BidiSort, [in]object&amp; IgnoreThe, [in]object&amp; IgnoreKashida, [in]object&amp; IgnoreDiacritics, [in]object&amp; IgnoreHe, [in]object&amp; LanguageID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SortByHeadings(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SortByHeadings (Optional ByRef SortFieldType As Object, Optional ByRef SortOrder As Object, Optional ByRef CaseSensitive As Object, Optional ByRef BidiSort As Object, Optional ByRef IgnoreThe As Object, Optional ByRef IgnoreKashida As Object, Optional ByRef IgnoreDiacritics As Object, Optional ByRef IgnoreHe As Object, Optional ByRef LanguageID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1042)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SortFieldType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="BidiSort" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreThe" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreKashida" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreDiacritics" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreHe" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="SortFieldType">Die Sort-Feldtyp verwenden. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> Konstanten. Der Standardwert ist <b>WdSortFieldAlphanumeric</b>. Abhängig von der Unterstützung der Sprache (Englisch USA), beispielsweise), die Sie ausgewählt oder installiert haben, möglicherweise einige der folgenden Konstanten nicht zur Verfügung.</param>
        <param name="SortOrder">Zu verwendende Reihenfolge. Kann eine der der WdSortOrder <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> Konstanten.</param>
        <param name="CaseSensitive">
          <b>True</b>, wenn bei der Sortierung Groß- und Kleinschreibung berücksichtigt werden soll. Der Standardwert ist <b>False</b>.</param>
        <param name="BidiSort">
          <b>True</b> zum Sortieren basierend auf rechts-nach-links-Sprache-Regeln. Je nach Unterstützung der Sprache (Englisch USA), beispielsweise), die Sie ausgewählt oder installiert haben, kann dieser Parameter nicht für Sie verfügbar werden.</param>
        <param name="IgnoreThe">
          <b>True</b> , wenn der arabische Buchstabe Alef ignorieren lam beim Sortieren von Text in einer rechts-nach-links-Sprache. Je nach Unterstützung der Sprache (Englisch USA), beispielsweise), die Sie ausgewählt oder installiert haben, kann dieser Parameter nicht für Sie verfügbar werden.</param>
        <param name="IgnoreKashida">
          <b>True</b> , wenn beim Sortieren von Text in rechts-nach-links-Sprache Kashidas zu ignorieren. Je nach Unterstützung der Sprache (Englisch USA), beispielsweise), die Sie ausgewählt oder installiert haben, kann dieser Parameter nicht für Sie verfügbar werden.</param>
        <param name="IgnoreDiacritics">
          <b>True</b> , wenn beim Sortieren von Text in einer rechts-nach-links-Sprache bidirektionale Steuerzeichen ignorieren. Je nach Unterstützung der Sprache (Englisch USA), beispielsweise), die Sie ausgewählt oder installiert haben, kann dieser Parameter nicht für Sie verfügbar werden.</param>
        <param name="IgnoreHe">
          <b>True</b> , wenn die Hebräisch ignorieren er das beim Sortieren von Text in einer rechts-nach-links-Sprache Zeichen. Je nach Unterstützung der Sprache (Englisch USA), beispielsweise), die Sie ausgewählt oder installiert haben, kann dieser Parameter nicht für Sie verfügbar werden.</param>
        <param name="LanguageID">Gibt die Sortiersprache an. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> Konstanten.</param>
        <summary>Sortiert die Überschriften in der angegebenen Auswahl.</summary>
        <remarks>
          <para>Verwenden Sie die <b>Selection</b> -Eigenschaft, um das <b>Selection</b> -Objekt zurückzugeben. Wenn mit der <b>Selection</b> -Eigenschaft ohne einen Objektbezeichner verwendet wird, gibt Word die Auswahl aus den aktiven Ausschnitt des aktiven Dokumentfensters.</para>
          <para>Gerade, wenn eine Auswahl zu einer Einfügemarke reduziert wird, ist es nicht unbedingt leer. Beispielsweise wird die <b>Text</b> -Eigenschaft immer noch das Zeichen rechts neben der Einfügemarke zurück; Dieses Zeichen wird auch in der <b>Characters</b> -Auflistung des <b>Selection</b> -Objekts. Aufrufen von Methoden jedoch wie <b>Ausschneiden</b> oder <b>Kopieren</b> von einer reduzierten Markierung wird ein Fehler ausgelöst.</para>
          <para>Ist es möglich, dass der Benutzer einen Bereich in einem Dokument auswählen, die nicht zusammenhängenden Text (beispielsweise, wenn Sie die ALT-Taste mit der Maus verwenden) darstellt. Da das Verhalten einer derartigen Markierung zu unvorhersehbaren sein kann, Sie möglicherweise einen Schritt in Ihrem Code einschließen möchten, die die <b>Type</b> -Eigenschaft einer Auswahl vor dem Ausführen von Operationen dafür überprüft (Selection.Type = WdSelectionBlock). In ähnlicher Weise können Auswahl, die Tabellenzellen enthalten auch zu unvorhersehbaren führen. Die <b>Information</b> -Eigenschaft informiert Sie, ob sich eine Markierung in einer Tabelle befindet ((Selection.Information(wdWithinTable) = True).</para>
          <para>, Da es sich bei <b>Range</b> -Objekten als <b>Auswahl</b> -Objekte mithilfe der <b>Range</b> -Objekten viele Methoden und Eigenschaften gemeinsam nutzen ist vorzuziehen für das Bearbeiten eines Dokuments, wenn kein Grund so ändern Sie die aktuelle Auswahl physisch nicht vorhanden ist . Weitere Informationen zu <b>Selection-</b> und <b>Range</b> -Objekten finden Sie unter Arbeiten mit dem Selection-Objekt und Arbeiten mit Range-Objekten in der Visual Basic für Applikationen (VBA)-Dokumentation.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescending">
      <MemberSignature Language="C#" Value="public void SortDescending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortDescending() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SortDescending" />
      <MemberSignature Language="VB.NET" Value="Public Sub SortDescending ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SortDescending();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sortiert Absätze oder Tabellenzeilen in absteigender alphanumerischer Reihenfolge.</summary>
        <remarks>
          <para>Der erste Absatz oder die erste Tabellenzeile wird als Steuersatz angesehen und nicht in die Sortierung einbezogen. Verwendung der <see cref="M:Microsoft.Office.Interop.Word.Selection.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> -Methode, um den Steuersatz in eine Sortierung einzubeziehen.</para>
          <para>Diese Methode stellt eine vereinfachte Form der Sortierung für die direkte Verwendung zum Seriendruck-, die Datenquellen Spalten der Daten enthalten. Verwenden Sie für die meisten Sortierung Aufgaben, die <see cref="M:Microsoft.Office.Interop.Word.Selection.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> -Methode.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortOld">
      <MemberSignature Language="C#" Value="public void SortOld (ref object ExcludeHeader, ref object FieldNumber, ref object SortFieldType, ref object SortOrder, ref object FieldNumber2, ref object SortFieldType2, ref object SortOrder2, ref object FieldNumber3, ref object SortFieldType3, ref object SortOrder3, ref object SortColumn, ref object Separator, ref object CaseSensitive, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortOld([in]object&amp; ExcludeHeader, [in]object&amp; FieldNumber, [in]object&amp; SortFieldType, [in]object&amp; SortOrder, [in]object&amp; FieldNumber2, [in]object&amp; SortFieldType2, [in]object&amp; SortOrder2, [in]object&amp; FieldNumber3, [in]object&amp; SortFieldType3, [in]object&amp; SortOrder3, [in]object&amp; SortColumn, [in]object&amp; Separator, [in]object&amp; CaseSensitive, [in]object&amp; LanguageID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SortOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SortOld (Optional ByRef ExcludeHeader As Object, Optional ByRef FieldNumber As Object, Optional ByRef SortFieldType As Object, Optional ByRef SortOrder As Object, Optional ByRef FieldNumber2 As Object, Optional ByRef SortFieldType2 As Object, Optional ByRef SortOrder2 As Object, Optional ByRef FieldNumber3 As Object, Optional ByRef SortFieldType3 As Object, Optional ByRef SortOrder3 As Object, Optional ByRef SortColumn As Object, Optional ByRef Separator As Object, Optional ByRef CaseSensitive As Object, Optional ByRef LanguageID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ExcludeHeader" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ExcludeHeader">To be added.</param>
        <param name="FieldNumber">To be added.</param>
        <param name="SortFieldType">To be added.</param>
        <param name="SortOrder">To be added.</param>
        <param name="FieldNumber2">To be added.</param>
        <param name="SortFieldType2">To be added.</param>
        <param name="SortOrder2">To be added.</param>
        <param name="FieldNumber3">To be added.</param>
        <param name="SortFieldType3">To be added.</param>
        <param name="SortOrder3">To be added.</param>
        <param name="SortColumn">To be added.</param>
        <param name="Separator">To be added.</param>
        <param name="CaseSensitive">To be added.</param>
        <param name="LanguageID">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitTable">
      <MemberSignature Language="C#" Value="public void SplitTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SplitTable() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.SplitTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub SplitTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SplitTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(526)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fügt einen leeren Absatz oberhalb der ersten Zeile in der Auswahl ein.</summary>
        <remarks>
          <para>Wenn die Markierung in der ersten Zeile der Tabelle befindet, wird die Tabelle in zwei Tabellen aufgeteilt.</para>
          <para>Wenn die Markierung in einer Tabelle befindet, tritt ein Fehler auf.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public int Start { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Start" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Start" />
      <MemberSignature Language="VB.NET" Value="Public Property Start As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Start { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zurückgeben oder festlegen die Position des ersten Zeichens einer Auswahl.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Wenn diese Eigenschaft auf einen Wert größer ist als der festgelegt ist die <see cref="P:Microsoft.Office.Interop.Word.Selection.End" /> Eigenschaft, wird die <b>End</b> -Eigenschaft auf denselben Wert wie die <b>Start</b> -Eigenschaft festgelegt.</para>
          <para>
            <see cref="T:Microsoft.Office.Interop.Word.Selection" />, <see cref="T:Microsoft.Office.Interop.Word.Range" />, und <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> -Objekte besitzen Start-und Endzeichenpositionen. Die Anfangsposition bezieht sich auf die Zeichenposition am nächsten an den Anfang des Textabschnitts.</para>
          <para>Gibt diese Eigenschaft die Anfangszeichenposition relativ zum Anfang des Textabschnitts. Der Hauptartikel (<b>WdMainTextStory</b>) beginnt mit der Zeichenposition 0 (null). Sie können die Größe einer Auswahl durch Festlegen dieser Eigenschaft ändern.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIsActive">
      <MemberSignature Language="C#" Value="public bool StartIsActive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StartIsActive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.StartIsActive" />
      <MemberSignature Language="VB.NET" Value="Public Property StartIsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StartIsActive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob der Anfang der Markierung aktiv ist.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft gibt <b>true,</b> Wenn der Anfang der Markierung aktiv ist, und <b>False</b> Wenn nicht.</para> Wenn die Auswahl zu einer Einfügemarke, Anfang oder das Ende der Auswahl nicht reduziert ist 
          <para>ist aktiv. Das aktive Ende der Markierung verschoben wird, wenn Sie die folgenden Methoden aufrufen: <see cref="M:Microsoft.Office.Interop.Word.Selection.EndKey(System.Object@,System.Object@)" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.Extend(System.Object@)" /> (mit der <paramref name="Characters" /> Argument), <see cref="M:Microsoft.Office.Interop.Word.Selection.HomeKey(System.Object@,System.Object@)" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.MoveDown(System.Object@,System.Object@,System.Object@)" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.MoveLeft(System.Object@,System.Object@,System.Object@)" />, <see cref="M:Microsoft.Office.Interop.Word.Selection.MoveRight(System.Object@,System.Object@,System.Object@)" />, und <see cref="M:Microsoft.Office.Interop.Word.Selection.MoveUp(System.Object@,System.Object@,System.Object@)" />.</para><para>Ist diese Eigenschaft entspricht der Verwendung der <see cref="P:Microsoft.Office.Interop.Word.Selection.Flags" /> -Eigenschaft mit der <b>WdSelStartActive</b> -Konstanten. Mithilfe der <b>Flags</b> -Eigenschaft erfordert jedoch binäre Operationen, deren komplizierter mithilfe der <b>StartIsActive</b> -Eigenschaft ist.</para><para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="StartOf">
      <MemberSignature Language="C#" Value="public int StartOf (ref object Unit, ref object Extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 StartOf([in]object&amp; Unit, [in]object&amp; Extend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.StartOf(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartOf (Optional ByRef Unit As Object, Optional ByRef Extend As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Extend" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Optionale <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />. Die Einheit, um die die Startposition des angegebenen Bereichs oder der Markierung verschoben werden soll.</param>
        <param name="Extend">Optionale <see cref="T:Microsoft.Office.Interop.Word.WdMovementType" />.</param>
        <summary>Verschiebt oder erweitert die Startposition der angegebenen Auswahl an dem Anfang der nächsten angegebenen Texteinheit.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt eine <b>ganze Zahl</b> , die die Anzahl der Zeichen angibt, um die die Markierung verschoben oder erweitert wurde. Die Methode gibt eine negative Zahl zurück, wenn die Verschiebung im Dokument rückwärts erfolgt.</para>
          <para>, Wenn der Anfang der angegebenen Auswahl bereits am Anfang der angegebenen Einheit ist, diese Methode nicht verschieben oder Erweitern der Auswahl bis.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoryLength">
      <MemberSignature Language="C#" Value="public int StoryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StoryLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.StoryLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoryLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StoryLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(152)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Anzahl der Zeichen im Text, der die angegebene Auswahl enthält.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoryType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdStoryType StoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdStoryType StoryType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.StoryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoryType As WdStoryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdStoryType StoryType { Microsoft::Office::Interop::Word::WdStoryType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdStoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Art des Artikels für die angegebene Auswahl zurück.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Style { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt zurück oder legt die Formatvorlage für das angegebene Objekt fest.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Diese Eigenschaft festlegen, geben entweder den lokalen Namen der Formatvorlage, eine ganze Zahl, eine <see cref="T:Microsoft.Office.Interop.Word.WdBuiltinStyle" /> -Konstante oder ein Objekt, das die Formatvorlage darstellt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Tables Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Tables Tables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As Tables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Tables ^ Tables { Microsoft::Office::Interop::Word::Tables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Tables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Tables" /> -Auflistung, die alle Tabellen in der angegebenen Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Text" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt zurück oder legt den Text in der angegebenen Auswahl.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Die <b>Text</b> -Eigenschaft gibt den unformatierten Text der Markierung oder des Bereichs zurück. Wenn Sie diese Eigenschaft festlegen, wird der Text des Bereichs oder der Markierung ersetzt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleCharacterCode">
      <MemberSignature Language="C#" Value="public void ToggleCharacterCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleCharacterCode() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.ToggleCharacterCode" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleCharacterCode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleCharacterCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1012)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schaltet zwischen dem Unicodezeichen und dem entsprechenden Hexadezimalwert einer Markierung um.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Tables TopLevelTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Tables TopLevelTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.TopLevelTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLevelTables As Tables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Tables ^ TopLevelTables { Microsoft::Office::Interop::Word::Tables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1006)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1006)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Tables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Tables" /> -Auflistung, die die Tabellen auf der obersten Schachtelungsebene in der aktuellen Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>TopLevelTables</b> -Eigenschaft gibt eine Auflistung mit nur die Tabellen auf der obersten Schachtelungsebene im Kontext des aktuellen Bereichs oder der Markierung zurück. Diesen Tabellen können nicht auf der obersten Schachtelungsebene innerhalb der gesamten geschachtelter Tabellen festgelegt werden.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdSelectionType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdSelectionType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As WdSelectionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdSelectionType Type { Microsoft::Office::Interop::Word::WdSelectionType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdSelectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Typ der Auswahl zurück.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeBackspace">
      <MemberSignature Language="C#" Value="public void TypeBackspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TypeBackspace() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.TypeBackspace" />
      <MemberSignature Language="VB.NET" Value="Public Sub TypeBackspace ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TypeBackspace();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht das Zeichen vor einer reduzierten Markierung (einer Einfügemarke).</summary>
        <remarks>
          <para>Wenn die Auswahl zu einer Einfügemarke reduziert ist, wird die Auswahl gelöscht.</para>
          <para>Diese Methode entspricht der Funktionalität der RÜCKTASTE.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeParagraph">
      <MemberSignature Language="C#" Value="public void TypeParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TypeParagraph() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.TypeParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub TypeParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TypeParagraph();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fügt einen neuen, leeren Absatz ein.</summary>
        <remarks>
          <para>Wenn die Auswahl zu einer Einfügemarke reduziert ist, wird Sie durch den neuen Absatz ersetzt. Verwendung der <see cref="M:Microsoft.Office.Interop.Word.Selection.InsertParagraphAfter" /> oder <see cref="M:Microsoft.Office.Interop.Word.Selection.InsertParagraphBefore" /> -Methode, um einen neuen Absatz einfügen, ohne den Inhalt der Markierung zu löschen.</para>
          <para>Diese Methode entspricht der Funktionalität der EINGABETASTE.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeText">
      <MemberSignature Language="C#" Value="public void TypeText (string Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TypeText([in]string Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.TypeText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TypeText (Text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TypeText(System::String ^ Text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(507)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">
          <b>String</b> erforderlich. Der Text, der eingefügt werden soll.</param>
        <summary>Fügt den angegebenen Text ein.</summary>
        <remarks>
          <para>Wenn die <see cref="P:Microsoft.Office.Interop.Word.Options.ReplaceSelection" /> -Eigenschaft <b>True</b>ist, wird die Auswahl durch den angegebenen Text ersetzt. Wenn <b>ReplaceSelection den Wert</b><b>False</b>aufweist, wird der angegebene Text vor der Auswahl eingefügt.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WholeStory">
      <MemberSignature Language="C#" Value="public void WholeStory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WholeStory() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Selection.WholeStory" />
      <MemberSignature Language="VB.NET" Value="Public Sub WholeStory ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WholeStory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(524)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erweitert eine Auswahl, um den gesamten Artikel einzubeziehen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WordOpenXML">
      <MemberSignature Language="C#" Value="public string WordOpenXML { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WordOpenXML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.WordOpenXML" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WordOpenXML As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WordOpenXML { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <b>Zeichenfolge</b> , die die XML-Zeichenfolge in der Auswahl im Microsoft Office Word Open XML-Format darstellt. Schreibgeschützt.</summary>
        <value>
          <b>String</b>
        </value>
        <remarks>
          <para>Diese Eigenschaft gibt nur die XML-Zeichenfolge in das Dokument, das zum Darstellen der angegebenen Auswahl erforderlich ist.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Words">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Words Words { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Words Words" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.Words" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Words As Words" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Words ^ Words { Microsoft::Office::Interop::Word::Words ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(51)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(51)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Words</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Words" /> -Auflistung, die alle Wörter in einer Auswahl darstellt.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Interpunktion und Absatzmarken in einem Dokument enthalten sind, der <see cref="T:Microsoft.Office.Interop.Word.Words" /> Auflistung.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XML">
      <MemberSignature Language="C#" Value="public string XML[bool DataOnly = false] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XML(bool)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.XML(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XML(Optional DataOnly As Boolean = false) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XML[bool] { System::String ^ get(bool DataOnly); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DataOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="DataOnly">Optionaler <b>Boolean</b>-Wert. <b>True</b> gibt den Text der XML ohne das Word-XML-Markup. Die Standardeinstellung ist <b>False</b>.</param>
        <summary>Gibt eine <b>Zeichenfolge</b> , die den XML-Text in das angegebene Objekt darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLNodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.XMLNodes XMLNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.XMLNodes XMLNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.XMLNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XMLNodes As XMLNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::XMLNodes ^ XMLNodes { Microsoft::Office::Interop::Word::XMLNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.XMLNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dieses Objekt, dieses Mitglied oder diese Aufzählung ist veraltet und kann nicht in Ihrem Code verwendet werden.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLParentNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.XMLNode XMLParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.XMLNode XMLParentNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Selection.XMLParentNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XMLParentNode As XMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::XMLNode ^ XMLParentNode { Microsoft::Office::Interop::Word::XMLNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.XMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dieses Objekt, dieses Mitglied oder diese Aufzählung ist veraltet und kann nicht in Ihrem Code verwendet werden.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>