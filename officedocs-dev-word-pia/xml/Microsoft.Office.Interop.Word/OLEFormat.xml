<Type Name="OLEFormat" FullName="Microsoft.Office.Interop.Word.OLEFormat">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bcdda2a9384c1b47b80159134d1ef27ec87d05a8" /><Meta Name="ms.sourcegitcommit" Value="655244c9d9a99d41d118f4fa57b5d74d46c410d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/03/2020" /><Meta Name="ms.locfileid" Value="43925107" /></Metadata><TypeSignature Language="C#" Value="public interface OLEFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract OLEFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.OLEFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface OLEFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class OLEFormat" />
  <TypeSignature Language="F#" Value="type OLEFormat = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020933-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3fbd9-101">Stellt die OLE-Merkmale (mit Ausnahme der Verknüpfung) für ein OLE-Objekt, ActiveX-Steuerelement oder ein Feld dar.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-101">Represents the OLE characteristics (other than linking) for an OLE object, ActiveX control, or field.</span></span></summary>
    <remarks><para><span data-ttu-id="3fbd9-102">Verwenden Sie die <b>OLEFormat</b> -Eigenschaft für ein <see cref="T:Microsoft.Office.Interop.Word.Shape" /> , <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> -oder-Objekt, <see cref="T:Microsoft.Office.Interop.Word.Field" /> um das <b>OLEFormat</b> -Objekt zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-102">Use the <b>OLEFormat</b> property for a <see cref="T:Microsoft.Office.Interop.Word.Shape" />, <see cref="T:Microsoft.Office.Interop.Word.InlineShape" />, or <see cref="T:Microsoft.Office.Interop.Word.Field" /> object to return the <b>OLEFormat</b> object.</span></span></para>
      <para><span data-ttu-id="3fbd9-103">Nicht alle Arten von Formen, Inlineformen und Feldern verfügen über OLE-Funktionalität.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-103">Not all types of shapes, inline shapes, and fields have OLE capabilities.</span></span> <span data-ttu-id="3fbd9-104">Verwenden Sie die <b>Type</b>-Eigenschaft für die <b>Shape</b>- und <b>InlineShape</b>-Objekte, um zu bestimmen, in welche Kategorie die angegebene Form oder Inlineform fällt.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-104">Use the <b>Type</b> property for the <b>Shape</b> and <b>InlineShape</b> objects to determine what category the specified shape or inline shape falls into.</span></span> <span data-ttu-id="3fbd9-105">Die <b>Type</b>-Eigenschaft für ein <b>Field</b>-Objekt gibt den Typ des Felds zurück.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-105">The <b>Type</b> property for a <b>Field</b> object returns the type of field.</span></span></para>
      <para><span data-ttu-id="3fbd9-106">Sie können die <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" /> Methoden, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" /> , und verwenden, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Open" /> <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" /> um ein OLE-Objekt zu automatisieren.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-106">You can use the <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" />, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" />, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Open" />, and <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" /> methods to automate an OLE object.</span></span></para>
      <para><span data-ttu-id="3fbd9-107">Verwenden Sie die <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.Object" /> -Eigenschaft, um ein Objekt zurückzugeben, das ein ActiveX-Steuerelement oder OLE-Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-107">Use the <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.Object" /> property to return an object that represents an ActiveX control or OLE object.</span></span> <span data-ttu-id="3fbd9-108">Bei diesem Objekt können Sie die Eigenschaften und Methoden der Containeranwendung oder des ActiveX-Steuerelements verwenden.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-108">With this object, you can use the properties and methods of the container application or the ActiveX control.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="abstract member Activate : unit -&gt; unit" Usage="oLEFormat.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fbd9-109">Aktiviert das angegebene Objekt.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-109">Activates the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateAs">
      <MemberSignature Language="C#" Value="public void ActivateAs (string ClassType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateAs([in]string ClassType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.ActivateAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateAs (ClassType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateAs(System::String ^ ClassType);" />
      <MemberSignature Language="F#" Value="abstract member ActivateAs : string -&gt; unit" Usage="oLEFormat.ActivateAs ClassType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ClassType"><span data-ttu-id="3fbd9-110"><b>String</b> erforderlich.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-110">Required <b>String</b>.</span></span> <span data-ttu-id="3fbd9-111">Der Name der Anwendung, in der ein OLE-Objekt geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-111">The name of the application in which an OLE object is opened.</span></span> <span data-ttu-id="3fbd9-112">Wenn Sie eine Liste der Objekttypen anzeigen möchten, die das OLE-Objekt als aktiviert werden kann, klicken Sie auf das Objekt, und öffnen Sie dann das Dialogfeld konvertieren (Menü Bearbeiten, Untermenü Objekt).</span><span class="sxs-lookup"><span data-stu-id="3fbd9-112">To see a list of object types that the OLE object can be activated as, click the object and then open the Convert dialog box (Edit menu, Object submenu).</span></span> <span data-ttu-id="3fbd9-113">Sie können die <paramref name="ClassType" /> Zeichenfolge suchen, indem Sie ein Objekt als Inlineform einfügen und dann die Feldfunktionen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-113">You can find the <paramref name="ClassType" /> string by inserting an object as an inline shape and then viewing the field codes.</span></span> <span data-ttu-id="3fbd9-114">Der Klassentyp des Objekts folgt entweder dem Wort "einbetten" oder dem Wort "Link".</span><span class="sxs-lookup"><span data-stu-id="3fbd9-114">The class type of the object follows either the word "EMBED" or the word "LINK."</span></span></param>
        <summary><span data-ttu-id="3fbd9-115">Legt den Windows-Registrierungswert fest, der die Standardanwendung zum Aktivieren des angegebenen OLE-Objekts bestimmt.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-115">Sets the Windows registry value that determines the default application used to activate the specified OLE object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : Microsoft.Office.Interop.Word.Application" Usage="Microsoft.Office.Interop.Word.OLEFormat.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-116">Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Application" /> Objekt zurück, das die Microsoft Word Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-116">Returns a <see cref="T:Microsoft.Office.Interop.Word.Application" /> object that represents the Microsoft Word application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassType">
      <MemberSignature Language="C#" Value="public string ClassType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClassType : string with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.ClassType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-117">Gibt den Klassentyp für das angegebene OLE-Objekt, das Bild oder das Feld zurück oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-117">Returns or sets the class type for the specified OLE object, picture, or field.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3fbd9-118">Diese Eigenschaft ist für verknüpfte Objekte (mit Ausnahme von DDE-Verknüpfungen) schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-118">This property is read-only for linked objects other than DDE links.</span></span></para>
          <para><span data-ttu-id="3fbd9-119">Sie können eine Liste der verfügbaren Anwendungen im Feld Objekttyp auf der Registerkarte neue erstellen im Dialogfeldobjekt (Menü Einfügen) anzeigen.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-119">You can see a list of the available applications in the Object type box on the Create New tab in the Object dialog box (Insert menu).</span></span> <span data-ttu-id="3fbd9-120">Sie können die <paramref name="ClassType" /> Zeichenfolge suchen, indem Sie ein Objekt als Inlineform einfügen und dann die Feldfunktionen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-120">You can find the <paramref name="ClassType" /> string by inserting an object as an inline shape and then viewing the field codes.</span></span> <span data-ttu-id="3fbd9-121">Der Klassentyp des Objekts folgt entweder dem Wort "einbetten" oder dem Wort "Link".</span><span class="sxs-lookup"><span data-stu-id="3fbd9-121">The class type of the object follows either the word "EMBED" or the word "LINK."</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public void ConvertTo (ref object ClassType, ref object DisplayAsIcon, ref object IconFileName, ref object IconIndex, ref object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertTo([in]object&amp; ClassType, [in]object&amp; DisplayAsIcon, [in]object&amp; IconFileName, [in]object&amp; IconIndex, [in]object&amp; IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.ConvertTo(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConvertTo (Optional ByRef ClassType As Object, Optional ByRef DisplayAsIcon As Object, Optional ByRef IconFileName As Object, Optional ByRef IconIndex As Object, Optional ByRef IconLabel As Object)" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : obj * obj * obj * obj * obj -&gt; unit" Usage="oLEFormat.ConvertTo (ClassType, DisplayAsIcon, IconFileName, IconIndex, IconLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object" RefType="ref" />
        <Parameter Name="IconIndex" Type="System.Object" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ClassType"><span data-ttu-id="3fbd9-122">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-122">Optional <b>Object</b>.</span></span> <span data-ttu-id="3fbd9-123">Der Name der Anwendung, die zum Aktivieren des OLE-Objekts verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-123">The name of the application used to activate the OLE object.</span></span> <span data-ttu-id="3fbd9-124">Sie können eine Liste der verfügbaren Anwendungen im Feld Objekttyp auf der Registerkarte neue erstellen im Dialogfeldobjekt (Menü Einfügen) anzeigen.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-124">You can see a list of the available applications in the Object type box on the Create New tab in the Object dialog box (Insert menu).</span></span> <span data-ttu-id="3fbd9-125">Sie können die <paramref name="ClassType" /> Zeichenfolge suchen, indem Sie ein Objekt als Inlineform einfügen und dann die Feldfunktionen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-125">You can find the <paramref name="ClassType" /> string by inserting an object as an inline shape and then viewing the field codes.</span></span> <span data-ttu-id="3fbd9-126">Der Klassentyp des Objekts folgt entweder dem Wort "einbetten" oder dem Wort "Link".</span><span class="sxs-lookup"><span data-stu-id="3fbd9-126">The class type of the object follows either the word "EMBED" or the word "LINK."</span></span></param>
        <param name="DisplayAsIcon"><span data-ttu-id="3fbd9-127">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-127">Optional <b>Object</b>.</span></span> <span data-ttu-id="3fbd9-128"><b>True</b>, wenn das OLE-Objekt als Symbol angezeigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-128"><b>True</b> to display the OLE object as an icon.</span></span> <span data-ttu-id="3fbd9-129">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-129">The default value is <b>False</b>.</span></span></param>
        <param name="IconFileName"><span data-ttu-id="3fbd9-130">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-130">Optional <b>Object</b>.</span></span> <span data-ttu-id="3fbd9-131">Die Datei, die das anzuzeigende Symbol enthält.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-131">The file that contains the icon to be displayed.</span></span></param>
        <param name="IconIndex"><span data-ttu-id="3fbd9-132">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-132">Optional <b>Object</b>.</span></span> <span data-ttu-id="3fbd9-133">Die Indexnummer des Symbols in <paramref name="IconFileName" /> .</span><span class="sxs-lookup"><span data-stu-id="3fbd9-133">The index number of the icon within <paramref name="IconFileName" />.</span></span> <span data-ttu-id="3fbd9-134">Die Reihenfolge der Symbole in der angegebenen Datei entspricht der Reihenfolge, in der die Symbole im dialogfeldsymbol ändern (Menü Einfügen, Dialogfeldobjekt) angezeigt werden, wenn das Kontrollkästchen als Symbol anzeigen aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-134">The order of icons in the specified file corresponds to the order in which the icons appear in the Change Icon dialog box (Insert menu, Object dialog box) when the Display as icon check box is selected.</span></span> <span data-ttu-id="3fbd9-135">Das erste Symbol in der Datei weist die Indexnummer 0 (Null) auf.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-135">The first icon in the file has the index number 0 (zero).</span></span> <span data-ttu-id="3fbd9-136">Wenn kein Symbol mit der angegebenen Indexnummer vorhanden <paramref name="IconFileName" /> ist, wird das Symbol mit der Indexnummer 1 (das zweite Symbol in der Datei) verwendet.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-136">If an icon with the given index number doesn't exist in <paramref name="IconFileName" />, the icon with the index number 1 (the second icon in the file) is used.</span></span> <span data-ttu-id="3fbd9-137">Der Standardwert ist 0 (Null).</span><span class="sxs-lookup"><span data-stu-id="3fbd9-137">The default value is 0 (zero).</span></span></param>
        <param name="IconLabel"><span data-ttu-id="3fbd9-138">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-138">Optional <b>Object</b>.</span></span> <span data-ttu-id="3fbd9-139">Ein Bezeichnungsfeld (Beschriftung), das unter dem Symbol angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-139">A label (caption) to be displayed beneath the icon.</span></span></param>
        <summary><span data-ttu-id="3fbd9-140">Konvertiert das angegebene OLE-Objekt von einer Klasse in eine andere, sodass Sie das Objekt in einer anderen Serveranwendung bearbeiten oder ändern können, wie das Objekt im Dokument angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-140">Converts the specified OLE object from one class to another, making it possible for you to edit the object in a different server application, or change how the object is displayed in the document.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Interop.Word.OLEFormat.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-141">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das angegebene Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-141">Returns a 32-bit integer that indicates the application in which the specified object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3fbd9-142">Wenn das Objekt in Microsoft Word erstellt wurde, gibt diese Eigenschaft die hexadezimale Zahl 4D535744 zurück, die die Zeichenfolge "MSWD" darstellt.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-142">If the object was created in Microsoft Word, this property returns the hexadecimal number 4D535744, which represents the string "MSWD."</span></span> <span data-ttu-id="3fbd9-143">Der Wert kann auch durch die <b>wdCreatorCode</b>-Konstante dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-143">This value can also be represented by the constant <b>wdCreatorCode</b>.</span></span></para>
          <para><span data-ttu-id="3fbd9-144">Die <b>Creator</b> -Eigenschaft wurde in erster Linie auf dem Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-144">The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="3fbd9-145">Beispielsweise hat Microsoft Word den Erstellercode MSWD.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-145">For example, Microsoft Word has the creator code MSWD.</span></span> <span data-ttu-id="3fbd9-146">Weitere Informationen zu dieser Eigenschaft finden Sie in der Sprachreferenzhilfe von Microsoft Office Macintosh Edition enthalten.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-146">For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAsIcon">
      <MemberSignature Language="C#" Value="public bool DisplayAsIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAsIcon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAsIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAsIcon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayAsIcon : bool with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-147"><b>True</b>, wenn das angegebene Objekt als Symbol angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-147"><b>True</b> if the specified object is displayed as an icon.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoVerb">
      <MemberSignature Language="C#" Value="public void DoVerb (ref object VerbIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoVerb([in]object&amp; VerbIndex) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoVerb (Optional ByRef VerbIndex As Object)" />
      <MemberSignature Language="F#" Value="abstract member DoVerb : obj -&gt; unit" Usage="oLEFormat.DoVerb VerbIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VerbIndex" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="VerbIndex"><span data-ttu-id="3fbd9-148">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-148">Optional <b>Object</b>.</span></span> <span data-ttu-id="3fbd9-149">Das Verb, das das OLE-Objekt ausführen soll.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-149">The verb that the OLE object should perform.</span></span> <span data-ttu-id="3fbd9-150">Wenn dieses Argument nicht angegeben ist, wird das Standardverb gesendet.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-150">If this argument is omitted, the default verb is sent.</span></span> <span data-ttu-id="3fbd9-151">Wenn das erforderliche Verb nicht vom OLE-Objekt unterstützt wird, tritt ein Fehler auf.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-151">If the OLE object does not support the requested verb, an error will occur.</span></span> <span data-ttu-id="3fbd9-152">Kann eine beliebige <see cref="T:Microsoft.Office.Interop.Word.WdOLEVerb" /> Konstante sein.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-152">Can be any <see cref="T:Microsoft.Office.Interop.Word.WdOLEVerb" /> constant.</span></span></param>
        <summary><span data-ttu-id="3fbd9-153">Fordert an, dass ein OLE-Objekt eines der verfügbaren Verben ausführt – die Aktionen, die ein OLE-Objekt zum Aktivieren des Inhalts benötigt.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-153">Requests that an OLE object perform one of its available verbs— the actions an OLE object takes to activate its contents.</span></span> <span data-ttu-id="3fbd9-154">Jedes OLE-Objekt unterstützt einen Satz von Verben, die zu diesem Objekt gehören.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-154">Each OLE object supports a set of verbs that pertain to that object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="public void Edit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Edit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Edit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Edit();" />
      <MemberSignature Language="F#" Value="abstract member Edit : unit -&gt; unit" Usage="oLEFormat.Edit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fbd9-155">Öffnet das angegebene OLE-Objekt zum Bearbeiten in der Anwendung, in der es erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-155">Opens the specified OLE object for editing in the application it was created in.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconIndex">
      <MemberSignature Language="C#" Value="public int IconIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IconIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property IconIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IconIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IconIndex : int with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.IconIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-156">Gibt das Symbol zurück, das verwendet wird, wenn die <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" /> Eigenschaft auf <b>true</b>festgelegt ist: 0 (null) entspricht dem ersten Symbol, 1 entspricht dem zweiten Symbol usw.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-156">Returns or sets the icon that's used when the <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" /> property is <b>True</b>: 0 (zero) corresponds to the first icon, 1 corresponds to the second icon, and so on.</span></span> <span data-ttu-id="3fbd9-157">Wenn dieses Argument ausgelassen wird, wird das erste Symbol (Standard) verwendet.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-157">If this argument is omitted, the first (default) icon is used.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconLabel">
      <MemberSignature Language="C#" Value="public string IconLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property IconLabel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconLabel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IconLabel : string with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.IconLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-158">Gibt den Text zurück, der unter dem Symbol für ein OLE-Objekt angezeigt wird, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-158">Returns or sets the text displayed below the icon for an OLE object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconName">
      <MemberSignature Language="C#" Value="public string IconName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconName" />
      <MemberSignature Language="VB.NET" Value="Public Property IconName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IconName : string with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.IconName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-159">Gibt die Programmdatei zurück, in der das Symbol für ein OLE-Objekt gespeichert ist, oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-159">Returns or sets the program file in which the icon for an OLE object is stored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconPath">
      <MemberSignature Language="C#" Value="public string IconPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IconPath : string" Usage="Microsoft.Office.Interop.Word.OLEFormat.IconPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-160">Gibt den Pfad der Datei zurück, in der das Symbol für ein OLE-Objekt gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-160">Returns the path of the file in which the icon for an OLE object is stored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="Microsoft.Office.Interop.Word.OLEFormat.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-161">Gibt eine Zeichenfolge zurück, die dazu verwendet wird, den Teil der Quelldatei zu kennzeichnen, der verknüpft wurde.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-161">Returns a string that's used to identify the portion of the source file that's being linked.</span></span> <span data-ttu-id="3fbd9-162">Wenn es sich bei der Quelldatei beispielsweise um eine Microsoft Excel Arbeitsmappe handelt, gibt die <b>Label</b> -Eigenschaft möglicherweise "Workbook1! R3C1: R4C2 ", wenn das OLE-Objekt nur einige Zellen aus dem Arbeitsblatt enthält.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-162">For example, if the source file is a Microsoft Excel workbook, the <b>Label</b> property might return "Workbook1!R3C1:R4C2" if the OLE object contains only a few cells from the worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3fbd9-163">Diese Eigenschaft funktioniert nur bei Formen, Inlineformen oder Feldern, die verknüpfte OLE-Objekte sind.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-163">This property works only for shapes, inline shapes, or fields that are linked OLE objects.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="public object Object { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Object" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Object" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Object As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Object { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Object : obj" Usage="Microsoft.Office.Interop.Word.OLEFormat.Object" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-164">Gibt ein <b>Objekt</b>, das auf oberster Ebene Schnittstelle für das angegebene OLE-Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-164">Returns an <b>Object</b> that represents the specified OLE object's top-level interface.</span></span> <span data-ttu-id="3fbd9-165">Diese Eigenschaft können Sie Zugriff auf die Eigenschaften und Methoden für ein ActiveX-Steuerelement oder die Anwendung, in der ein OLE-Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-165">This property allows you to access the properties and methods of an ActiveX control or the application in which an OLE object was created.</span></span> <span data-ttu-id="3fbd9-166">Das OLE-Objekt muss OLE-Automatisierung für diese Eigenschaft zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-166">The OLE object must support OLE Automation for this property to work.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit" Usage="oLEFormat.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fbd9-167">Öffnet das angegebene Objekt.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-167">Opens the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.Word.OLEFormat.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-168">Gibt ein Objekt zurück, das das übergeordnete Objekt des angegebenen Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-168">Returns an object that represents the parent object of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveFormattingOnUpdate">
      <MemberSignature Language="C#" Value="public bool PreserveFormattingOnUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveFormattingOnUpdate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.PreserveFormattingOnUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveFormattingOnUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveFormattingOnUpdate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveFormattingOnUpdate : bool with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.PreserveFormattingOnUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-169"><b>True</b>, um die in Microsoft Word zugewiesene Formatierung für verknüpfte OLE-Objekte (beispielsweise mit Microsoft Excel-Arbeitsblättern verknüpfte Tabellen) beizubehalten.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-169"><b>True</b> preserves formatting done in Microsoft Word to a linked OLE object, such as a table linked to a Microsoft Excel spreadsheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3fbd9-170">Wenn <b>PreserveFormattingOnUpdate</b> auf <b>True</b>festgelegt ist, werden in Word vorgenommene Formatierungsänderungen beim Aktualisieren des Objekts beibehalten.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-170">When <b>PreserveFormattingOnUpdate</b> is set to <b>True</b>, formatting changes made to the object in Word is preserved when the object is updated.</span></span> <span data-ttu-id="3fbd9-171">Word aktualisiert nur den Inhalt des verknüpften Objekts.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-171">Word updates only the content in the linked object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgID">
      <MemberSignature Language="C#" Value="public string ProgID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProgID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.ProgID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProgID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProgID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProgID : string" Usage="Microsoft.Office.Interop.Word.OLEFormat.ProgID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fbd9-172">Gibt die ProgID für das angegebene OLE-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-172">Returns the programmatic identifier (ProgID) for the specified OLE object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3fbd9-173">Bei der <b>ProgID</b> und den <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" /> Eigenschaften wird (standardmäßig) die gleiche Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-173">The <b>ProgID</b> and <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" /> properties will (by default) return the same string.</span></span> <span data-ttu-id="3fbd9-174">Sie können die <b>ClassType</b>-Eigenschaft für DDE-Verknüpfungen aber ändern.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-174">However, you can change the <b>ClassType</b> property for DDE links.</span></span></para>
          <para><span data-ttu-id="3fbd9-175">
            <b>Sicherheit</b>  Dynamischer Datenaustausch (Dynamic Data Exchange, DDE) ist eine ältere Technologie, die nicht sicher ist.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-175">
            <b>Security</b>  Dynamic data exchange (DDE) is an older technology that is not secure.</span></span> <span data-ttu-id="3fbd9-176">Verwenden Sie, wenn möglich, eine sicherere Alternative zu DDE.</span><span class="sxs-lookup"><span data-stu-id="3fbd9-176">If possible, use a more secure alternative to DDE.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
