<Type Name="Documents" FullName="Microsoft.Office.Interop.Word.Documents">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a41822aae7b9dcff67293b6f07a8d78b06540706" />
    <Meta Name="ms.sourcegitcommit" Value="9a6162e1f2c2145e95970c1fdb1ddcac1366d42f" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20670664" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Documents : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Documents implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.Documents" />
  <TypeSignature Language="VB.NET" Value="Public Interface Documents&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Documents : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002096C-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Eine Auflistung aller der <see cref="T:Microsoft.Office.Interop.Word.Document" /> -Objekte, die derzeit in Word geöffnet.</summary>
    <remarks>
      <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Word._Application.Documents" /> Eigenschaft, um die <b>Documents</b> -Auflistung zurückzugeben.</para>
      <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Word.Documents.Add(System.Object@,System.Object@,System.Object@,System.Object@)" /> -Methode, um ein neues, leeres Dokument erstellt und der <b>Documents</b> -Auflistung hinzugefügt.</para>
      <para>Verwenden Sie die <b>Open</b> -Methode zum Öffnen einer Datei.</para>
      <para>Verwendung <b>Dokumente</b>(<paramref name="index" />), wobei <paramref name="index" /> ist der Name des Dokuments oder die Indexzahl darstellt, um ein einzelnes <b>Document</b> -Objekt zurückzugeben.</para>
      <para>Die Indexnummer stellt die Position des Dokuments in der <b>Documents</b> -Auflistung.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Add (ref object Template, ref object NewTemplate, ref object DocumentType, ref object Visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document Add([in]object&amp; Template, [in]object&amp; NewTemplate, [in]object&amp; DocumentType, [in]object&amp; Visible) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.Add(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional ByRef Template As Object, Optional ByRef NewTemplate As Object, Optional ByRef DocumentType As Object, Optional ByRef Visible As Object) As Document" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NewTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DocumentType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Visible" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Template">Optionales- <b>Objekt</b>. Der Name der Vorlage für das neue Dokument verwendet werden soll. Wenn dieses Argument ausgelassen wird, wird die Dokumentvorlage Normal.dot verwendet.</param>
        <param name="NewTemplate">Optionales- <b>Objekt</b>. <b>True</b> , wenn das Dokument als Vorlage zu öffnen. Der Standardwert lautet <b>False</b>.</param>
        <param name="DocumentType">Optionales- <b>Objekt</b>. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdNewDocumentType" /> Konstanten: <b>WdNewBlankDocument</b>, <b>WdNewEmailMessage</b>, <b>WdNewFrameset</b>oder <b>WdNewWebPage</b>. Die Standardkonstante ist <b>WdNewBlankDocument</b>.</param>
        <param name="Visible">Optionales- <b>Objekt</b>. <b>True</b> , wenn das Dokument in einem sichtbaren Fenster geöffnet. Wenn dieser Wert auf <b>False</b>festgelegt ist, wird Microsoft Word öffnet das Dokument, legt jedoch die <see cref="P:Microsoft.Office.Interop.Word.Window.Visible" /> -Eigenschaft des Dokumentfensters auf <b>false festgelegt</b>. Der Standardwert ist <b>True</b>.</param>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Document" /> -Objekt, das ein neues, leeres Dokument zur Auflistung der geöffneten Dokumente hinzugefügt.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBlogDocument">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document AddBlogDocument (string ProviderID, string PostURL, string BlogName, string PostID = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document AddBlogDocument([in]string ProviderID, [in]string PostURL, [in]string BlogName, [in]string PostID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.AddBlogDocument(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddBlogDocument (ProviderID As String, PostURL As String, BlogName As String, Optional PostID As String = &quot;&quot;) As Document" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProviderID" Type="System.String" />
        <Parameter Name="PostURL" Type="System.String" />
        <Parameter Name="BlogName" Type="System.String" />
        <Parameter Name="PostID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ProviderID">Eine GUID, bei der es sich um den eindeutigen Wert handelt, den ein Anbieter verwendet, wenn er sich selbst bei Word registriert.</param>
        <param name="PostURL">Die URL, die beim Hinzufügen von Beiträgen zum Blog verwendet wird.</param>
        <param name="BlogName">Ein Anzeigename für den Blog zur Verwendung in Word.</param>
        <param name="PostID">Die Kennung für einen vorhandenen Beitrag, mit dem das mithilfe der <b>AddBlogDocument</b>-Methode erstellte Dokument ausgefüllt wird.</param>
        <summary>Gibt ein Objekt, das ein neues Blogdokument darstellt, das Microsoft Office Word in der durch die ersten drei Parameter beschriebenen Konto veröffentlicht.</summary>
        <returns>
          <see cref="T:Microsoft.Office.Interop.Word._Document" />
        </returns>
        <remarks>
          <para>Diese Methode ein neues Dokument erstellt, und es auch das angegebene Blog-Konto mit Word registriert, wenn sie noch nicht registriert ist. Darüber hinaus Wenn die <paramref name="PostID" /> Parameter angegeben ist, wird das neue Dokument mit dem Inhalt des Beitrags durch den Wert des angegebenen gefüllt ist die <paramref name="PostID" /> -Parameter von der Website des Anbieters.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOld">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document AddOld (ref object Template, ref object NewTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document AddOld([in]object&amp; Template, [in]object&amp; NewTemplate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.AddOld(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOld (Optional ByRef Template As Object, Optional ByRef NewTemplate As Object) As Document" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NewTemplate" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Template">To be added.</param>
        <param name="NewTemplate">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Documents.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Application" /> -Objekt, das die Microsoft Word-Anwendung darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckOut">
      <MemberSignature Language="C#" Value="public bool CanCheckOut (string FileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckOut([in]string FileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.CanCheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckOut (FileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckOut(System::String ^ FileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="FileName">
          <b>String</b> erforderlich. Serverpfad und Name des Dokuments.</param>
        <summary>Bestimmt, ob Microsoft Word ein angegebenes Dokument von einem Server Auschecken kann. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Diese Methode gibt <b>True</b> zurück, wenn Microsoft Word ein angegebenes Dokument auf einem Server und <b>False,</b> Wenn nicht auschecken kann.</para>
          <para>, Um die in Word integrierten Zusammenarbeitsfunktionen genutzt werden können, müssen Dokumente auf einem Microsoft SharePoint-Portalserver gespeichert werden.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public void CheckOut (string FileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOut([in]string FileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.CheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckOut (FileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckOut(System::String ^ FileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="FileName">
          <b>String</b> erforderlich. Der Name der auszucheckenden Datei.</param>
        <summary>Kopiert ein angegebenes Dokument zur Bearbeitung von einem Server auf einen lokalen Computer.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (ref object SaveChanges, ref object OriginalFormat, ref object RouteDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close([in]object&amp; SaveChanges, [in]object&amp; OriginalFormat, [in]object&amp; RouteDocument) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.Close(System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (Optional ByRef SaveChanges As Object, Optional ByRef OriginalFormat As Object, Optional ByRef RouteDocument As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="OriginalFormat" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="RouteDocument" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">Optionales- <b>Objekt</b>. Gibt die Speichern-Aktion für das Dokument. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdSaveOptions" /> Konstanten: <b>WdDoNotSaveChanges</b>, <b>WdPromptToSaveChanges</b>oder <b>WdSaveChanges</b>.</param>
        <param name="OriginalFormat">Optionales- <b>Objekt</b>. Gibt das Format für das Dokument. Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Word.WdOriginalFormat" /> Konstanten: <b>WdOriginalDocumentFormat</b>, <b>WdPromptUser</b>oder <b>WdWordDocument</b>.</param>
        <param name="RouteDocument">Optionales- <b>Objekt</b>. <b>True</b> , wenn das Dokument an den nächsten Empfänger weitergeleitet. Wenn das Dokument einen Verteiler vorhanden ist, wird dieses Argument ignoriert.</param>
        <summary>Schließt das angegebene Dokument oder Dokumenten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Documents.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Anzahl der Elemente in der angegebenen Auflistung zurück.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Documents.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das angegebene Objekt erstellt wurde.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Wenn das angegebene Objekt in Microsoft Word erstellt wurde, gibt diese Eigenschaft die Hexadezimalzahl 4D535744 zurück, die die Zeichenfolge "MSWD" darstellt. Dieser Wert kann auch durch die <b>WdCreatorCode</b>-Konstante dargestellt werden.</para>
          <para>Die <b>Creator</b> -Eigenschaft wurde in erster Linie auf dem Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Beispielsweise hat Microsoft Word den Erstellercode MSWD. Weitere Informationen zu dieser Eigenschaft finden Sie in der Sprachreferenzhilfe Lieferumfang von Microsoft Office Macintosh Edition.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document this[ref object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Document Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Documents.Item(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(ByRef Index As Object) As Document" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Document ^ default[System::Object ^ %] { Microsoft::Office::Interop::Word::Document ^ get(System::Object ^ % Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Index">Ein <b>Objekt</b> zurück, der die Ordnungsposition oder eine Zeichenfolge, die den Namen des einzelnen Objekts darstellt.</param>
        <summary>Gibt ein einzelnes Objekt in einer Auflistung zurück.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Open (ref object FileName, ref object ConfirmConversions, ref object ReadOnly, ref object AddToRecentFiles, ref object PasswordDocument, ref object PasswordTemplate, ref object Revert, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object Format, ref object Encoding, ref object Visible, ref object OpenAndRepair, ref object DocumentDirection, ref object NoEncodingDialog, ref object XMLTransform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document Open([in]object&amp; FileName, [in]object&amp; ConfirmConversions, [in]object&amp; ReadOnly, [in]object&amp; AddToRecentFiles, [in]object&amp; PasswordDocument, [in]object&amp; PasswordTemplate, [in]object&amp; Revert, [in]object&amp; WritePasswordDocument, [in]object&amp; WritePasswordTemplate, [in]object&amp; Format, [in]object&amp; Encoding, [in]object&amp; Visible, [in]object&amp; OpenAndRepair, [in]object&amp; DocumentDirection, [in]object&amp; NoEncodingDialog, [in]object&amp; XMLTransform) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.Open(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (ByRef FileName As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef ReadOnly As Object, Optional ByRef AddToRecentFiles As Object, Optional ByRef PasswordDocument As Object, Optional ByRef PasswordTemplate As Object, Optional ByRef Revert As Object, Optional ByRef WritePasswordDocument As Object, Optional ByRef WritePasswordTemplate As Object, Optional ByRef Format As Object, Optional ByRef Encoding As Object, Optional ByRef Visible As Object, Optional ByRef OpenAndRepair As Object, Optional ByRef DocumentDirection As Object, Optional ByRef NoEncodingDialog As Object, Optional ByRef XMLTransform As Object) As Document" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReadOnly" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AddToRecentFiles" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Revert" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Encoding" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Visible" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="OpenAndRepair" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DocumentDirection" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NoEncodingDialog" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="XMLTransform" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">
          <b>Objekt</b>erforderlich. Der Name des Dokuments (Pfade werden akzeptiert).</param>
        <param name="ConfirmConversions">Optionales- <b>Objekt</b>. <b>True</b>, um das Dialogfeld Datei konvertieren anzuzeigen, wenn die Datei nicht im Microsoft Word-Format vorliegt.</param>
        <param name="ReadOnly">Optionales- <b>Objekt</b>. <b>True</b> , wenn das Dokument mit Schreibschutz zu öffnen. <b>Hinweis</b>   Dieses Argument wird nicht überschrieben empfohlene Einstellung für ein gespeichertes Dokument schreibgeschützt. Angenommen, wenn ein Dokument mit Schreibschutz-gespeichert wurde eingeschaltet empfohlen, das Argument <b>ReadOnly</b> auf <b>False</b> festlegen, wird nicht die Datei mit Lese-/Schreibzugriff geöffnet werden verursacht.</param>
        <param name="AddToRecentFiles">Optionales- <b>Objekt</b>. <b>True</b>, wenn der Dateiname in die Liste der zuletzt verwendeten Dateien im unteren Teil des Menüs Datei aufgenommen werden soll.</param>
        <param name="PasswordDocument">Optionales- <b>Objekt</b>. Das Kennwort zum Öffnen des Dokuments.</param>
        <param name="PasswordTemplate">Optionales- <b>Objekt</b>. Das Kennwort zum Öffnen der Vorlage.</param>
        <param name="Revert">Optionales- <b>Objekt</b>. Steuert, was geschieht, wenn <paramref name="FileName" /> ist der Name eines geöffneten Dokuments. <b>True</b> , wenn die geöffneten Dokument nicht gespeicherten Änderungen zu verwerfen und öffnen Sie die Datei erneut. <b>False</b> , wenn das geöffnete Dokument aktiviert.</param>
        <param name="WritePasswordDocument">Optionales- <b>Objekt</b>. Das zum Speichern von Änderungen am Dokument erforderliche Kennwort.</param>
        <param name="WritePasswordTemplate">Optionales- <b>Objekt</b>. Das Kennwort zum Speichern von Änderungen an der Vorlage.</param>
        <param name="Format">Optionales- <b>Objekt</b>. Der Dateikonverter zum Öffnen des Dokuments verwendet werden. Kann ein <see cref="T:Microsoft.Office.Interop.Word.WdOpenFormat" /> Konstante. Um ein externes Dateiformat angeben, gelten die <see cref="P:Microsoft.Office.Interop.Word.FileConverter.OpenFormat" /> -Eigenschaft auf eine <see cref="T:Microsoft.Office.Interop.Word.FileConverter" /> -Objekt, das den Wert für dieses Argument zu ermitteln.</param>
        <param name="Encoding">Optionales- <b>Objekt</b>. Das Dokument Codierung (Codepage oder Zeichensatz) von Microsoft Word beim Anzeigen des gespeicherten Dokuments verwendet. Kann eine beliebige gültige <see cref="T:Microsoft.Office.Core.MsoEncoding" /> Konstante. Der Standardwert ist die Codepage des Systems.</param>
        <param name="Visible">Optionales- <b>Objekt</b>. <b>True,</b> Wenn das Dokument in einem sichtbaren Fenster geöffnet wird. Der Standardwert ist <b>True</b>.</param>
        <param name="OpenAndRepair">Optionales- <b>Objekt</b>. <b>True</b>, um das Dokument zu reparieren und so dessen Beschädigung zu vermeiden</param>
        <param name="DocumentDirection">Optionale <b>-Objekt.</b> Kann ein <see cref="T:Microsoft.Office.Interop.Word.WdDocumentDirection" /> Konstante.</param>
        <param name="NoEncodingDialog">Optionales- <b>Objekt</b>. <b>True</b> , überspringen Sie das Dialogfeld Codierung anzuzeigen, die Word angezeigt, wenn der Text-Codierung nicht erkannt werden kann. Der Standardwert lautet <b>False</b>.</param>
        <param name="XMLTransform">Optionales- <b>Objekt</b>. Gibt die zu verwendende Transformierung an</param>
        <summary>Öffnet das angegebene Dokument und fügt es an die <see cref="T:Microsoft.Office.Interop.Word.Documents" /> Auflistung.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Vermeiden der Verwendung von hartcodierte Kennwörter in der Anwendung. Wenn in einer Prozedur ein Kennwort erforderlich ist, fordern Sie das Kennwort des Benutzers, in einer Variablen zu speichern Sie, und klicken Sie dann verwenden Sie die Variable in Ihrem Code.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open2000">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Open2000 (ref object FileName, ref object ConfirmConversions, ref object ReadOnly, ref object AddToRecentFiles, ref object PasswordDocument, ref object PasswordTemplate, ref object Revert, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object Format, ref object Encoding, ref object Visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document Open2000([in]object&amp; FileName, [in]object&amp; ConfirmConversions, [in]object&amp; ReadOnly, [in]object&amp; AddToRecentFiles, [in]object&amp; PasswordDocument, [in]object&amp; PasswordTemplate, [in]object&amp; Revert, [in]object&amp; WritePasswordDocument, [in]object&amp; WritePasswordTemplate, [in]object&amp; Format, [in]object&amp; Encoding, [in]object&amp; Visible) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.Open2000(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open2000 (ByRef FileName As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef ReadOnly As Object, Optional ByRef AddToRecentFiles As Object, Optional ByRef PasswordDocument As Object, Optional ByRef PasswordTemplate As Object, Optional ByRef Revert As Object, Optional ByRef WritePasswordDocument As Object, Optional ByRef WritePasswordTemplate As Object, Optional ByRef Format As Object, Optional ByRef Encoding As Object, Optional ByRef Visible As Object) As Document" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReadOnly" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AddToRecentFiles" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Revert" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Encoding" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Visible" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">To be added.</param>
        <param name="ConfirmConversions">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="AddToRecentFiles">To be added.</param>
        <param name="PasswordDocument">To be added.</param>
        <param name="PasswordTemplate">To be added.</param>
        <param name="Revert">To be added.</param>
        <param name="WritePasswordDocument">To be added.</param>
        <param name="WritePasswordTemplate">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Encoding">To be added.</param>
        <param name="Visible">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open2002">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Open2002 (ref object FileName, ref object ConfirmConversions, ref object ReadOnly, ref object AddToRecentFiles, ref object PasswordDocument, ref object PasswordTemplate, ref object Revert, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object Format, ref object Encoding, ref object Visible, ref object OpenAndRepair, ref object DocumentDirection, ref object NoEncodingDialog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document Open2002([in]object&amp; FileName, [in]object&amp; ConfirmConversions, [in]object&amp; ReadOnly, [in]object&amp; AddToRecentFiles, [in]object&amp; PasswordDocument, [in]object&amp; PasswordTemplate, [in]object&amp; Revert, [in]object&amp; WritePasswordDocument, [in]object&amp; WritePasswordTemplate, [in]object&amp; Format, [in]object&amp; Encoding, [in]object&amp; Visible, [in]object&amp; OpenAndRepair, [in]object&amp; DocumentDirection, [in]object&amp; NoEncodingDialog) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.Open2002(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open2002 (ByRef FileName As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef ReadOnly As Object, Optional ByRef AddToRecentFiles As Object, Optional ByRef PasswordDocument As Object, Optional ByRef PasswordTemplate As Object, Optional ByRef Revert As Object, Optional ByRef WritePasswordDocument As Object, Optional ByRef WritePasswordTemplate As Object, Optional ByRef Format As Object, Optional ByRef Encoding As Object, Optional ByRef Visible As Object, Optional ByRef OpenAndRepair As Object, Optional ByRef DocumentDirection As Object, Optional ByRef NoEncodingDialog As Object) As Document" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReadOnly" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AddToRecentFiles" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Revert" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Encoding" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Visible" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="OpenAndRepair" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DocumentDirection" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NoEncodingDialog" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">To be added.</param>
        <param name="ConfirmConversions">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="AddToRecentFiles">To be added.</param>
        <param name="PasswordDocument">To be added.</param>
        <param name="PasswordTemplate">To be added.</param>
        <param name="Revert">To be added.</param>
        <param name="WritePasswordDocument">To be added.</param>
        <param name="WritePasswordTemplate">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Encoding">To be added.</param>
        <param name="Visible">To be added.</param>
        <param name="OpenAndRepair">To be added.</param>
        <param name="DocumentDirection">To be added.</param>
        <param name="NoEncodingDialog">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenNoRepairDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document OpenNoRepairDialog (ref object FileName, ref object ConfirmConversions, ref object ReadOnly, ref object AddToRecentFiles, ref object PasswordDocument, ref object PasswordTemplate, ref object Revert, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object Format, ref object Encoding, ref object Visible, ref object OpenAndRepair, ref object DocumentDirection, ref object NoEncodingDialog, ref object XMLTransform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document OpenNoRepairDialog([in]object&amp; FileName, [in]object&amp; ConfirmConversions, [in]object&amp; ReadOnly, [in]object&amp; AddToRecentFiles, [in]object&amp; PasswordDocument, [in]object&amp; PasswordTemplate, [in]object&amp; Revert, [in]object&amp; WritePasswordDocument, [in]object&amp; WritePasswordTemplate, [in]object&amp; Format, [in]object&amp; Encoding, [in]object&amp; Visible, [in]object&amp; OpenAndRepair, [in]object&amp; DocumentDirection, [in]object&amp; NoEncodingDialog, [in]object&amp; XMLTransform) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.OpenNoRepairDialog(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenNoRepairDialog (ByRef FileName As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef ReadOnly As Object, Optional ByRef AddToRecentFiles As Object, Optional ByRef PasswordDocument As Object, Optional ByRef PasswordTemplate As Object, Optional ByRef Revert As Object, Optional ByRef WritePasswordDocument As Object, Optional ByRef WritePasswordTemplate As Object, Optional ByRef Format As Object, Optional ByRef Encoding As Object, Optional ByRef Visible As Object, Optional ByRef OpenAndRepair As Object, Optional ByRef DocumentDirection As Object, Optional ByRef NoEncodingDialog As Object, Optional ByRef XMLTransform As Object) As Document" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReadOnly" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AddToRecentFiles" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Revert" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Encoding" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Visible" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="OpenAndRepair" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DocumentDirection" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NoEncodingDialog" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="XMLTransform" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">Der Name des Dokuments (Pfade werden akzeptiert).</param>
        <param name="ConfirmConversions">
          <b>True</b>, um das Dialogfeld Datei konvertieren anzuzeigen, wenn die Datei nicht im Microsoft Word-Format vorliegt.</param>
        <param name="ReadOnly">
          <b>True</b> , wenn das Dokument mit Schreibschutz zu öffnen. Dieses Argument wird nicht überschrieben empfohlene Einstellung für ein gespeichertes Dokument schreibgeschützt. Beispielsweise, wenn ein Dokument mit Schreibschutz-gespeichert wurde empfohlen eingeschaltet, Festlegen der <paramref name="ReadOnly" /> Argument auf <b>false festgelegt</b> , wird nicht die Datei mit Lese-/Schreibzugriff geöffnet werden soll.</param>
        <param name="AddToRecentFiles">
          <b>True</b>, wenn der Dateiname in die Liste der zuletzt verwendeten Dateien im unteren Teil des Menüs Datei aufgenommen werden soll.</param>
        <param name="PasswordDocument">Das Kennwort zum Öffnen des Dokuments.</param>
        <param name="PasswordTemplate">Das Kennwort zum Öffnen der Vorlage.</param>
        <param name="Revert">Steuert, was geschieht, wenn <paramref name="FileName" /> ist der Name eines geöffneten Dokuments. <b>True</b> , wenn die geöffneten Dokument nicht gespeicherten Änderungen zu verwerfen und öffnen Sie die Datei erneut. <b>False</b> , wenn das geöffnete Dokument aktiviert.</param>
        <param name="WritePasswordDocument">Das zum Speichern von Änderungen am Dokument erforderliche Kennwort.</param>
        <param name="WritePasswordTemplate">Das Kennwort zum Speichern von Änderungen an der Vorlage.</param>
        <param name="Format">Der Dateikonverter zum Öffnen des Dokuments verwendet werden. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdOpenFormat" /> Konstanten. Der Standardwert lautet <see cref="F:Microsoft.Office.Interop.Word.WdOpenFormat.wdOpenFormatAuto" />.</param>
        <param name="Encoding">Das Dokument Codierung (Codepage oder Zeichensatz) von Microsoft Word beim Anzeigen des gespeicherten Dokuments verwendet. Kann eine beliebige gültige <see cref="T:Microsoft.Office.Core.MsoEncoding" /> -Enumerationswert ab. Der Standardwert ist die Codepage des Systems.</param>
        <param name="Visible">
          <b>True</b>, wenn das Dokument in einem sichtbaren Fenster geöffnet wird. Der Standardwert ist <b>True</b>.</param>
        <param name="OpenAndRepair">
          <b>True</b>, um das Dokument zu reparieren und so dessen Beschädigung zu vermeiden</param>
        <param name="DocumentDirection">Gibt den horizontalen Textfluss in einem Dokument an. Kann eine beliebige gültige <see cref="T:Microsoft.Office.Interop.Word.WdDocumentDirection" /> Konstante. Der Standardwert lautet <see cref="F:Microsoft.Office.Interop.Word.WdDocumentDirection.wdLeftToRight" />.</param>
        <param name="NoEncodingDialog">
          <b>True</b>, um die Anzeige des Dialogfelds "Codierung" zu übergehen, das in Word angezeigt wird, wenn die Textcodierung nicht erkannt wird. Der Standardwert ist <b>False</b>.</param>
        <param name="XMLTransform">Gibt die zu verwendende Transformierung an</param>
        <summary>Öffnet das angegebene Dokument und fügt es an die <see cref="T:Microsoft.Office.Interop.Word.Documents" /> Auflistung.</summary>
        <returns>
          <see cref="T:Microsoft.Office.Interop.Word._Document" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenOld">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document OpenOld (ref object FileName, ref object ConfirmConversions, ref object ReadOnly, ref object AddToRecentFiles, ref object PasswordDocument, ref object PasswordTemplate, ref object Revert, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document OpenOld([in]object&amp; FileName, [in]object&amp; ConfirmConversions, [in]object&amp; ReadOnly, [in]object&amp; AddToRecentFiles, [in]object&amp; PasswordDocument, [in]object&amp; PasswordTemplate, [in]object&amp; Revert, [in]object&amp; WritePasswordDocument, [in]object&amp; WritePasswordTemplate, [in]object&amp; Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.OpenOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenOld (ByRef FileName As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef ReadOnly As Object, Optional ByRef AddToRecentFiles As Object, Optional ByRef PasswordDocument As Object, Optional ByRef PasswordTemplate As Object, Optional ByRef Revert As Object, Optional ByRef WritePasswordDocument As Object, Optional ByRef WritePasswordTemplate As Object, Optional ByRef Format As Object) As Document" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReadOnly" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AddToRecentFiles" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Revert" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">To be added.</param>
        <param name="ConfirmConversions">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="AddToRecentFiles">To be added.</param>
        <param name="PasswordDocument">To be added.</param>
        <param name="PasswordTemplate">To be added.</param>
        <param name="Revert">To be added.</param>
        <param name="WritePasswordDocument">To be added.</param>
        <param name="WritePasswordTemplate">To be added.</param>
        <param name="Format">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Documents.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein Objekt zurück, das das übergeordnete Objekt des angegebenen Objekts darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (ref object NoPrompt, ref object OriginalFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save([in]object&amp; NoPrompt, [in]object&amp; OriginalFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.Save(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (Optional ByRef NoPrompt As Object, Optional ByRef OriginalFormat As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NoPrompt" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="OriginalFormat" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NoPrompt">Optionales- <b>Objekt</b>. <b>True</b> , wenn Microsoft Word automatisch speichern alle Dokumente. <b>False</b> , wenn den Benutzer aufgefordert, jedes Dokument zu speichern, die seit dem letzten Speichern geändert.</param>
        <param name="OriginalFormat">Optionales- <b>Objekt</b>. Gibt an, wie die Dokumente gespeichert werden sollen. Kann eine der der <see cref="T:Microsoft.Office.Interop.Word.WdOriginalFormat" />Konstanten.</param>
        <summary>Speichert alle Dokumente in der <see cref="P:Microsoft.Office.Interop.Word._Application.Documents" /> Auflistung.</summary>
        <remarks>
          <para>Wenn ein Dokument noch nicht gespeichert wurde, fordert das Dialogfeld Speichern unter den Benutzer für einen Dateinamen ein.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>