<Type Name="DiagramNode" FullName="Microsoft.Office.Interop.Word.DiagramNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a071f77a7dcf69fe03a0a45cfda65ea447ad4b54" /><Meta Name="ms.sourcegitcommit" Value="655244c9d9a99d41d118f4fa57b5d74d46c410d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/03/2020" /><Meta Name="ms.locfileid" Value="43922171" /></Metadata><TypeSignature Language="C#" Value="public interface DiagramNode" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract DiagramNode" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.DiagramNode" />
  <TypeSignature Language="VB.NET" Value="Public Interface DiagramNode" />
  <TypeSignature Language="C++ CLI" Value="public interface class DiagramNode" />
  <TypeSignature Language="F#" Value="type DiagramNode = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000209E9-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4304)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6b985-101">Stellt einen einzelnen Diagrammknoten in einem Diagramm dar.</span><span class="sxs-lookup"><span data-stu-id="6b985-101">Represents a single diagram node within a diagram.</span></span></summary>
    <remarks><para><span data-ttu-id="6b985-102">Das <b>DiagramNode</b> -Objekt ist ein Element der <see cref="T:Microsoft.Office.Interop.Word.DiagramNodes" /> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="6b985-102">The <b>DiagramNode</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Word.DiagramNodes" /> collection.</span></span></para>
      <para><span data-ttu-id="6b985-103">Verwenden Sie die <b>DiagramNode</b> -Eigenschaft des <see cref="T:Microsoft.Office.Interop.Word.Shape" /> oder- <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> Objekts, um ein <b>DiagramNode</b> -Objekt zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="6b985-103">Use the <b>DiagramNode</b> property of the <see cref="T:Microsoft.Office.Interop.Word.Shape" /> or <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> object to return a <b>DiagramNode</b> object.</span></span> <span data-ttu-id="6b985-104">Verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" /> -Methode, um einem Diagramm einen Knoten hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="6b985-104">Use the <see cref="M:Microsoft.Office.Interop.Word.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" /> method to add a node to a diagram.</span></span></para>
      <para><span data-ttu-id="6b985-105">Verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.DiagramNode.Delete" /> -Methode, um einen Knoten aus einem Diagramm zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="6b985-105">Use the <see cref="M:Microsoft.Office.Interop.Word.DiagramNode.Delete" /> method to remove a node from a diagram.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.DiagramNode AddNode (Microsoft.Office.Core.MsoRelativeNodePosition Pos = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode, Microsoft.Office.Core.MsoDiagramNodeType NodeType = Microsoft.Office.Core.MsoDiagramNodeType.msoDiagramNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.DiagramNode AddNode([in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition Pos, [in]valuetype Microsoft.Office.Core.MsoDiagramNodeType NodeType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNode (Optional Pos As MsoRelativeNodePosition = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode, Optional NodeType As MsoDiagramNodeType = Microsoft.Office.Core.MsoDiagramNodeType.msoDiagramNode) As DiagramNode" />
      <MemberSignature Language="F#" Value="abstract member AddNode : Microsoft.Office.Core.MsoRelativeNodePosition * Microsoft.Office.Core.MsoDiagramNodeType -&gt; Microsoft.Office.Interop.Word.DiagramNode" Usage="diagramNode.AddNode (Pos, NodeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
        <Parameter Name="NodeType" Type="Microsoft.Office.Core.MsoDiagramNodeType" />
      </Parameters>
      <Docs>
        <param name="Pos"><span data-ttu-id="6b985-106">Optional <see cref="T:Microsoft.Office.Core.MsoRelativeNodePosition" /> .</span><span class="sxs-lookup"><span data-stu-id="6b985-106">Optional <see cref="T:Microsoft.Office.Core.MsoRelativeNodePosition" />.</span></span> <span data-ttu-id="6b985-107">Gibt an, wo der Knoten relativ zum aufrufenden Knoten hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="6b985-107">Specifies where the node will be added, relative to the calling node.</span></span></param>
        <param name="NodeType"><span data-ttu-id="6b985-108">Optional <see cref="T:Microsoft.Office.Core.MsoDiagramNodeType" /> .</span><span class="sxs-lookup"><span data-stu-id="6b985-108">Optional <see cref="T:Microsoft.Office.Core.MsoDiagramNodeType" />.</span></span> <span data-ttu-id="6b985-109">Gibt den Knotentyp an.</span><span class="sxs-lookup"><span data-stu-id="6b985-109">Specifies the node type.</span></span></param>
        <summary><span data-ttu-id="6b985-110">Erstellt einen Diagrammknoten und gibt ein Objekt zurück, das <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> den neuen Diagrammknoten darstellt.</span><span class="sxs-lookup"><span data-stu-id="6b985-110">Creates a diagram node, returning a <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object that represents the new diagram node.</span></span> <span data-ttu-id="6b985-111">Für konzeptionelle Diagramme wird das <b>DiagramNode</b> -Objekt am Ende der Shapes-Liste hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="6b985-111">For conceptual diagrams, the <b>DiagramNode</b> object is added to the end of the shapes list.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNode.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : Microsoft.Office.Interop.Word.Application" Usage="Microsoft.Office.Interop.Word.DiagramNode.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b985-112">Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Application" /> Objekt zurück, das die Microsoft Word Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="6b985-112">Returns a <see cref="T:Microsoft.Office.Interop.Word.Application" /> object that represents the Microsoft Word application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.DiagramNodeChildren Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.DiagramNodeChildren Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNode.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As DiagramNodeChildren" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::DiagramNodeChildren ^ Children { Microsoft::Office::Interop::Word::DiagramNodeChildren ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : Microsoft.Office.Interop.Word.DiagramNodeChildren" Usage="Microsoft.Office.Interop.Word.DiagramNode.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.DiagramNodeChildren</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b985-113">Gibt ein <see cref="T:Microsoft.Office.Interop.Word.DiagramNodeChildren" /> Objekt zurück, das alle untergeordneten Elemente des angegebenen Diagrammknotens enthält.</span><span class="sxs-lookup"><span data-stu-id="6b985-113">Returns a <see cref="T:Microsoft.Office.Interop.Word.DiagramNodeChildren" /> object that contains all of the children of the specified diagram node.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.DiagramNode CloneNode (bool copyChildren, out Microsoft.Office.Interop.Word.DiagramNode TargetNode = default, Microsoft.Office.Core.MsoRelativeNodePosition Pos = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.DiagramNode CloneNode([in]bool copyChildren, [out] class Microsoft.Office.Interop.Word.DiagramNode&amp; TargetNode, [in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition Pos) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.DiagramNode.CloneNode(System.Boolean,Microsoft.Office.Interop.Word.DiagramNode@,Microsoft.Office.Core.MsoRelativeNodePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneNode (copyChildren As Boolean, Optional ByRef TargetNode As DiagramNode = null, Optional Pos As MsoRelativeNodePosition = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode) As DiagramNode" />
      <MemberSignature Language="F#" Value="abstract member CloneNode : bool * DiagramNode * Microsoft.Office.Core.MsoRelativeNodePosition -&gt; Microsoft.Office.Interop.Word.DiagramNode" Usage="diagramNode.CloneNode (copyChildren, TargetNode, Pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copyChildren" Type="System.Boolean" />
        <Parameter Name="TargetNode" Type="Microsoft.Office.Interop.Word.DiagramNode" RefType="out" />
        <Parameter Name="Pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
      </Parameters>
      <Docs>
        <param name="copyChildren"><span data-ttu-id="6b985-114">Erforderlicher <b>Boolean</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="6b985-114">Required <b>Boolean</b>.</span></span> <span data-ttu-id="6b985-115">True, um auch die untergeordneten Elemente des Diagrammknotens zu klonen.</span><span class="sxs-lookup"><span data-stu-id="6b985-115">True to clone the diagram node's children as well.</span></span></param>
        <param name="TargetNode"><span data-ttu-id="6b985-116">Optionales <b>DiagramNode</b> -Objekt.</span><span class="sxs-lookup"><span data-stu-id="6b985-116">Optional <b>DiagramNode</b> object.</span></span> <span data-ttu-id="6b985-117">Der Knoten, in dem der neue Knoten eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="6b985-117">The node where the new node will be placed.</span></span></param>
        <param name="Pos"><span data-ttu-id="6b985-118">Optional <see cref="T:Microsoft.Office.Core.MsoRelativeNodePosition" /> .</span><span class="sxs-lookup"><span data-stu-id="6b985-118">Optional <see cref="T:Microsoft.Office.Core.MsoRelativeNodePosition" />.</span></span> <span data-ttu-id="6b985-119">Wenn <paramref name="TargetNode" /> angegeben ist, gibt an, wo der Knoten relativ zu hinzugefügt wird <paramref name="TargetNode" /> .</span><span class="sxs-lookup"><span data-stu-id="6b985-119">If <paramref name="TargetNode" /> is specified, indicates where the node will be added relative to <paramref name="TargetNode" />.</span></span></param>
        <summary><span data-ttu-id="6b985-120">Klont einen angegebenen Diagrammknoten.</span><span class="sxs-lookup"><span data-stu-id="6b985-120">Clones a specified diagram node.</span></span> <span data-ttu-id="6b985-121">Gibt ein <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> Objekt zurück, das den Klon darstellt.</span><span class="sxs-lookup"><span data-stu-id="6b985-121">Returns a <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object that represents the clone.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNode.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Interop.Word.DiagramNode.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b985-122">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das angegebene Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="6b985-122">Returns a 32-bit integer that indicates the application in which the specified object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6b985-123">Wenn das Objekt beispielsweise in Microsoft Word erstellt wurde, gibt diese Eigenschaft die hexadezimale Zahl 4D535744 zurück zurück, die die Zeichenfolge "MSWD" darstellt.</span><span class="sxs-lookup"><span data-stu-id="6b985-123">For example, if the object was created in Microsoft Word, this property returns the hexadecimal number 4D535744, which represents the string "MSWD."</span></span> <span data-ttu-id="6b985-124">Der Wert kann auch durch die <b>wdCreatorCode</b>-Konstante dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="6b985-124">This value can also be represented by the constant <b>wdCreatorCode</b>.</span></span></para>
          <para><span data-ttu-id="6b985-125">Die <b>Creator</b> -Eigenschaft wurde in erster Linie auf dem Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt.</span><span class="sxs-lookup"><span data-stu-id="6b985-125">The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="6b985-126">Beispielsweise hat Microsoft Word den Erstellercode MSWD.</span><span class="sxs-lookup"><span data-stu-id="6b985-126">For example, Microsoft Word has the creator code MSWD.</span></span> <span data-ttu-id="6b985-127">Weitere Informationen zu dieser Eigenschaft finden Sie in der Sprachreferenzhilfe von Microsoft Office Macintosh Edition enthalten.</span><span class="sxs-lookup"><span data-stu-id="6b985-127">For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.DiagramNode.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="abstract member Delete : unit -&gt; unit" Usage="diagramNode.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b985-128">Löscht das angegebene Objekt.</span><span class="sxs-lookup"><span data-stu-id="6b985-128">Deletes the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Diagram Diagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Diagram Diagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNode.Diagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Diagram As Diagram" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Diagram ^ Diagram { Microsoft::Office::Interop::Word::Diagram ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Diagram : Microsoft.Office.Interop.Word.Diagram" Usage="Microsoft.Office.Interop.Word.DiagramNode.Diagram" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Diagram</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b985-129">Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Diagram" /> Objekt zurück, zu dem ein Diagrammknoten gehört.</span><span class="sxs-lookup"><span data-stu-id="6b985-129">Returns a <see cref="T:Microsoft.Office.Interop.Word.Diagram" /> object to which a diagram node belongs.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoOrgChartLayoutType Layout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoOrgChartLayoutType Layout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNode.Layout" />
      <MemberSignature Language="VB.NET" Value="Public Property Layout As MsoOrgChartLayoutType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoOrgChartLayoutType Layout { Microsoft::Office::Core::MsoOrgChartLayoutType get(); void set(Microsoft::Office::Core::MsoOrgChartLayoutType value); };" />
      <MemberSignature Language="F#" Value="member this.Layout : Microsoft.Office.Core.MsoOrgChartLayoutType with get, set" Usage="Microsoft.Office.Interop.Word.DiagramNode.Layout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoOrgChartLayoutType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b985-130">Gibt eine Konstante zurück <see cref="T:Microsoft.Office.Core.MsoOrgChartLayoutType" /> , die die Formatierung der untergeordneten Knoten in einem Organigramm angibt, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="6b985-130">Returns or sets a <see cref="T:Microsoft.Office.Core.MsoOrgChartLayoutType" /> constant to indicate the formatting of the child nodes in an organization chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNode">
      <MemberSignature Language="C#" Value="public void MoveNode (out Microsoft.Office.Interop.Word.DiagramNode TargetNode, Microsoft.Office.Core.MsoRelativeNodePosition Pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveNode([out] class Microsoft.Office.Interop.Word.DiagramNode&amp; TargetNode, [in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition Pos) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.DiagramNode.MoveNode(Microsoft.Office.Interop.Word.DiagramNode@,Microsoft.Office.Core.MsoRelativeNodePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveNode (ByRef TargetNode As DiagramNode, Pos As MsoRelativeNodePosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveNode([Runtime::InteropServices::Out] Microsoft::Office::Interop::Word::DiagramNode ^ % TargetNode, Microsoft::Office::Core::MsoRelativeNodePosition Pos);" />
      <MemberSignature Language="F#" Value="abstract member MoveNode : DiagramNode * Microsoft.Office.Core.MsoRelativeNodePosition -&gt; unit" Usage="diagramNode.MoveNode (TargetNode, Pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TargetNode" Type="Microsoft.Office.Interop.Word.DiagramNode" RefType="out" />
        <Parameter Name="Pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
      </Parameters>
      <Docs>
        <param name="TargetNode"><span data-ttu-id="6b985-131">Erforderliches <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="6b985-131">Required <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object.</span></span> <span data-ttu-id="6b985-132">Der Diagrammknoten, in dem der angegebene Knoten verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="6b985-132">The diagram node where the specified node will be moved.</span></span></param>
        <param name="Pos"><span data-ttu-id="6b985-133">Erforderlich <see cref="T:Microsoft.Office.Core.MsoRelativeNodePosition" /> .</span><span class="sxs-lookup"><span data-stu-id="6b985-133">Required <see cref="T:Microsoft.Office.Core.MsoRelativeNodePosition" />.</span></span> <span data-ttu-id="6b985-134">Gibt an, wo der Knoten relativ zu hinzugefügt wird <paramref name="TargetNode" /> .</span><span class="sxs-lookup"><span data-stu-id="6b985-134">Specifies where the node will be added relative to <paramref name="TargetNode" />.</span></span></param>
        <summary><span data-ttu-id="6b985-135">Verschiebt einen Diagrammknoten und alle untergeordneten Knoten in einem Diagramm.</span><span class="sxs-lookup"><span data-stu-id="6b985-135">Moves a diagram node and any of its child nodes within a diagram.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.DiagramNode NextNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.DiagramNode NextNode() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.DiagramNode.NextNode" />
      <MemberSignature Language="VB.NET" Value="Public Function NextNode () As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::DiagramNode ^ NextNode();" />
      <MemberSignature Language="F#" Value="abstract member NextNode : unit -&gt; Microsoft.Office.Interop.Word.DiagramNode" Usage="diagramNode.NextNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b985-136">Gibt das nächste <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> Objekt in einer Auflistung von Diagrammknoten zurück.</span><span class="sxs-lookup"><span data-stu-id="6b985-136">Returns the next <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object in a collection of diagram nodes.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="6b985-137">Verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.DiagramNode.PrevNode" /> -Methode, um das vorherige <b>DiagramNode</b> -Objekt in einer Auflistung von Diagrammknoten zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="6b985-137">Use the <see cref="M:Microsoft.Office.Interop.Word.DiagramNode.PrevNode" /> method to return the previous <b>DiagramNode</b> object in a collection of diagram nodes.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.Word.DiagramNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b985-138">Gibt ein Objekt zurück, das das übergeordnete Objekt des angegebenen Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="6b985-138">Returns an object that represents the parent object of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.DiagramNode PrevNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.DiagramNode PrevNode() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.DiagramNode.PrevNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PrevNode () As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::DiagramNode ^ PrevNode();" />
      <MemberSignature Language="F#" Value="abstract member PrevNode : unit -&gt; Microsoft.Office.Interop.Word.DiagramNode" Usage="diagramNode.PrevNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b985-139">Gibt ein <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> Objekt zurück, das den vorherigen Diagrammknoten in einer Auflistung von Diagrammknoten darstellt.</span><span class="sxs-lookup"><span data-stu-id="6b985-139">Returns a <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object that represents the previous diagram node in a collection of diagram nodes.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="6b985-140">Verwenden Sie die <see cref="M:Microsoft.Office.Interop.Word.DiagramNode.NextNode" /> -Methode, um das nächste <b>DiagramNode</b> -Objekt in einer Auflistung von Diagrammknoten zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="6b985-140">Use the <see cref="M:Microsoft.Office.Interop.Word.DiagramNode.NextNode" /> method to return the next <b>DiagramNode</b> object in a collection of diagram nodes.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceNode">
      <MemberSignature Language="C#" Value="public void ReplaceNode (out Microsoft.Office.Interop.Word.DiagramNode TargetNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceNode([out] class Microsoft.Office.Interop.Word.DiagramNode&amp; TargetNode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.DiagramNode.ReplaceNode(Microsoft.Office.Interop.Word.DiagramNode@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceNode (ByRef TargetNode As DiagramNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceNode([Runtime::InteropServices::Out] Microsoft::Office::Interop::Word::DiagramNode ^ % TargetNode);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceNode : DiagramNode -&gt; unit" Usage="diagramNode.ReplaceNode TargetNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TargetNode" Type="Microsoft.Office.Interop.Word.DiagramNode" RefType="out" />
      </Parameters>
      <Docs>
        <param name="TargetNode"><span data-ttu-id="6b985-141">Erforderliches <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="6b985-141">Required <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object.</span></span> <span data-ttu-id="6b985-142">Der Diagrammknoten, der ersetzt werden soll.</span><span class="sxs-lookup"><span data-stu-id="6b985-142">The diagram node to be replaced.</span></span></param>
        <summary><span data-ttu-id="6b985-143">Ersetzt einen Zieldiagrammknoten durch den Quelldiagrammknoten.</span><span class="sxs-lookup"><span data-stu-id="6b985-143">Replaces a target diagram node with the source diagram node.</span></span></summary>
        <remarks><para><span data-ttu-id="6b985-144">Der Zieldiagrammknoten wird gelöscht, und der Quelldiagrammknoten, einschließlich aller untergeordneten Knoten, wird dorthin verschoben, wo sich der Zieldiagrammknoten befand.</span><span class="sxs-lookup"><span data-stu-id="6b985-144">The target diagram node is deleted, and the source diagram node, including any of its child nodes, are moved to where the target diagram node was.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.DiagramNode Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.DiagramNode Root" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNode.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::DiagramNode ^ Root { Microsoft::Office::Interop::Word::DiagramNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : Microsoft.Office.Interop.Word.DiagramNode" Usage="Microsoft.Office.Interop.Word.DiagramNode.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.DiagramNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b985-145">Gibt einen Wert <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> vom Typs Object zurück, der den Stammdiagrammknoten darstellt, zu dem der Quelldiagrammknoten gehört.</span><span class="sxs-lookup"><span data-stu-id="6b985-145">Returns a <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object that represents the root diagram node to which the source diagram node belongs.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape Shape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Shape Shape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNode.Shape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Shape ^ Shape { Microsoft::Office::Interop::Word::Shape ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Shape : Microsoft.Office.Interop.Word.Shape" Usage="Microsoft.Office.Interop.Word.DiagramNode.Shape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b985-146">Gibt ein <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Objekt für den angegebenen Diagrammknoten zurück.</span><span class="sxs-lookup"><span data-stu-id="6b985-146">Returns a <see cref="T:Microsoft.Office.Interop.Word.Shape" /> object for the specified diagram node.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SwapNode">
      <MemberSignature Language="C#" Value="public void SwapNode (out Microsoft.Office.Interop.Word.DiagramNode TargetNode, Microsoft.Office.Core.MsoRelativeNodePosition Pos = (Microsoft.Office.Core.MsoRelativeNodePosition) -1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SwapNode([out] class Microsoft.Office.Interop.Word.DiagramNode&amp; TargetNode, [in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition Pos) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.DiagramNode.SwapNode(Microsoft.Office.Interop.Word.DiagramNode@,Microsoft.Office.Core.MsoRelativeNodePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SwapNode (ByRef TargetNode As DiagramNode, Optional Pos As MsoRelativeNodePosition = (Microsoft.Office.Core.MsoRelativeNodePosition) -1)" />
      <MemberSignature Language="F#" Value="abstract member SwapNode : DiagramNode * Microsoft.Office.Core.MsoRelativeNodePosition -&gt; unit" Usage="diagramNode.SwapNode (TargetNode, Pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TargetNode" Type="Microsoft.Office.Interop.Word.DiagramNode" RefType="out" />
        <Parameter Name="Pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
      </Parameters>
      <Docs>
        <param name="TargetNode"><span data-ttu-id="6b985-147">Erforderliches <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="6b985-147">Required <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object.</span></span> <span data-ttu-id="6b985-148">Der Knoten, mit dem gewechselt werden soll.</span><span class="sxs-lookup"><span data-stu-id="6b985-148">The node with which to swap.</span></span></param>
        <param name="Pos"><span data-ttu-id="6b985-149">Optional <see cref="T:Microsoft.Office.Core.MsoRelativeNodePosition" /> .</span><span class="sxs-lookup"><span data-stu-id="6b985-149">Optional <see cref="T:Microsoft.Office.Core.MsoRelativeNodePosition" />.</span></span> <span data-ttu-id="6b985-150">Die Position des Knotens relativ zu dem Knoten, mit dem er ausgetauscht wird.</span><span class="sxs-lookup"><span data-stu-id="6b985-150">The position of the node relative to the node with which it is being swapped.</span></span></param>
        <summary><span data-ttu-id="6b985-151">Tauscht den Knoten Zieldiagramm mit dem Knoten Quelldiagramm aus.</span><span class="sxs-lookup"><span data-stu-id="6b985-151">Swaps the target diagram node with the source diagram node.</span></span></summary>
        <remarks><para><span data-ttu-id="6b985-152">Alle untergeordneten Diagrammknoten werden zusammen mit den entsprechenden Stammknoten verschoben.</span><span class="sxs-lookup"><span data-stu-id="6b985-152">Any child diagram nodes are moved along with their corresponding root nodes.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TextShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape TextShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Shape TextShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNode.TextShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Shape ^ TextShape { Microsoft::Office::Interop::Word::Shape ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TextShape : Microsoft.Office.Interop.Word.Shape" Usage="Microsoft.Office.Interop.Word.DiagramNode.TextShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b985-153">Gibt einen <see cref="T:Microsoft.Office.Interop.Word.Shape" /> Wert vom Typs Object zurück, der die Form des einem Diagrammknoten zugeordneten Textfelds darstellt.</span><span class="sxs-lookup"><span data-stu-id="6b985-153">Returns a <see cref="T:Microsoft.Office.Interop.Word.Shape" /> object that represents the shape of the text box associated with a diagram node.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferChildren">
      <MemberSignature Language="C#" Value="public void TransferChildren (out Microsoft.Office.Interop.Word.DiagramNode ReceivingNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferChildren([out] class Microsoft.Office.Interop.Word.DiagramNode&amp; ReceivingNode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.DiagramNode.TransferChildren(Microsoft.Office.Interop.Word.DiagramNode@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferChildren (ByRef ReceivingNode As DiagramNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferChildren([Runtime::InteropServices::Out] Microsoft::Office::Interop::Word::DiagramNode ^ % ReceivingNode);" />
      <MemberSignature Language="F#" Value="abstract member TransferChildren : DiagramNode -&gt; unit" Usage="diagramNode.TransferChildren ReceivingNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReceivingNode" Type="Microsoft.Office.Interop.Word.DiagramNode" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ReceivingNode"><span data-ttu-id="6b985-154">Erforderliches <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="6b985-154">Required <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object.</span></span> <span data-ttu-id="6b985-155">Der Knoten, an den die untergeordneten Knoten übertragen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="6b985-155">The node to which to transfer the child nodes.</span></span></param>
        <summary><span data-ttu-id="6b985-156">Verschiebt die untergeordneten Knoten des Quelldiagramm Knotens in den Knoten Ziel (empfangender) Diagramm.</span><span class="sxs-lookup"><span data-stu-id="6b985-156">Moves the child nodes of the source diagram node to the target (receiving) diagram node.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
